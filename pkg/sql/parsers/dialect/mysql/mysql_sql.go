// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INFILE = 57750
const TERMINATED = 57751
const OPTIONALLY = 57752
const ENCLOSED = 57753
const ESCAPED = 57754
const STARTING = 57755
const LINES = 57756
const ROWS = 57757
const IMPORT = 57758
const DISCARD = 57759
const MODUMP = 57760
const OVER = 57761
const PRECEDING = 57762
const FOLLOWING = 57763
const GROUPS = 57764
const DATABASES = 57765
const TABLES = 57766
const SEQUENCES = 57767
const EXTENDED = 57768
const FULL = 57769
const PROCESSLIST = 57770
const FIELDS = 57771
const COLUMNS = 57772
const OPEN = 57773
const ERRORS = 57774
const WARNINGS = 57775
const INDEXES = 57776
const SCHEMAS = 57777
const NODE = 57778
const LOCKS = 57779
const ROLES = 57780
const TABLE_NUMBER = 57781
const COLUMN_NUMBER = 57782
const TABLE_VALUES = 57783
const TABLE_SIZE = 57784
const NAMES = 57785
const GLOBAL = 57786
const PERSIST = 57787
const SESSION = 57788
const ISOLATION = 57789
const LEVEL = 57790
const READ = 57791
const WRITE = 57792
const ONLY = 57793
const REPEATABLE = 57794
const COMMITTED = 57795
const UNCOMMITTED = 57796
const SERIALIZABLE = 57797
const LOCAL = 57798
const EVENTS = 57799
const PLUGINS = 57800
const CURRENT_TIMESTAMP = 57801
const DATABASE = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const REPLACE = 57809
const CONVERT = 57810
const SEPARATOR = 57811
const TIMESTAMPDIFF = 57812
const CURRENT_DATE = 57813
const CURRENT_USER = 57814
const CURRENT_ROLE = 57815
const SECOND_MICROSECOND = 57816
const MINUTE_MICROSECOND = 57817
const MINUTE_SECOND = 57818
const HOUR_MICROSECOND = 57819
const HOUR_SECOND = 57820
const HOUR_MINUTE = 57821
const DAY_MICROSECOND = 57822
const DAY_SECOND = 57823
const DAY_MINUTE = 57824
const DAY_HOUR = 57825
const YEAR_MONTH = 57826
const SQL_TSI_HOUR = 57827
const SQL_TSI_DAY = 57828
const SQL_TSI_WEEK = 57829
const SQL_TSI_MONTH = 57830
const SQL_TSI_QUARTER = 57831
const SQL_TSI_YEAR = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MINUTE = 57834
const RECURSIVE = 57835
const CONFIG = 57836
const DRAINER = 57837
const SOURCE = 57838
const STREAM = 57839
const HEADERS = 57840
const CONNECTOR = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const ADDDATE = 57851
const BIT_AND = 57852
const BIT_OR = 57853
const BIT_XOR = 57854
const CAST = 57855
const COUNT = 57856
const APPROX_COUNT = 57857
const APPROX_COUNT_DISTINCT = 57858
const APPROX_PERCENTILE = 57859
const CURDATE = 57860
const CURTIME = 57861
const DATE_ADD = 57862
const DATE_SUB = 57863
const EXTRACT = 57864
const GROUP_CONCAT = 57865
const MAX = 57866
const MID = 57867
const MIN = 57868
const NOW = 57869
const POSITION = 57870
const SESSION_USER = 57871
const STD = 57872
const STDDEV = 57873
const MEDIAN = 57874
const STDDEV_POP = 57875
const STDDEV_SAMP = 57876
const SUBDATE = 57877
const SUBSTR = 57878
const SUBSTRING = 57879
const SUM = 57880
const SYSDATE = 57881
const SYSTEM_USER = 57882
const TRANSLATE = 57883
const TRIM = 57884
const VARIANCE = 57885
const VAR_POP = 57886
const VAR_SAMP = 57887
const AVG = 57888
const RANK = 57889
const ROW_NUMBER = 57890
const DENSE_RANK = 57891
const NEXTVAL = 57892
const SETVAL = 57893
const CURRVAL = 57894
const LASTVAL = 57895
const ARROW = 57896
const ROW = 57897
const OUTFILE = 57898
const HEADER = 57899
const MAX_FILE_SIZE = 57900
const FORCE_QUOTE = 57901
const PARALLEL = 57902
const UNUSED = 57903
const BINDINGS = 57904
const DO = 57905
const DECLARE = 57906
const LOOP = 57907
const WHILE = 57908
const LEAVE = 57909
const ITERATE = 57910
const UNTIL = 57911
const CALL = 57912
const SPBEGIN = 57913
const BACKEND = 57914
const SERVERS = 57915
const KILL = 57916
const QUERY_RESULT = 57917

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10333

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 114,
	21, 695,
	-2, 676,
	-1, 130,
	233, 1029,
	235, 952,
	-2, 993,
	-1, 153,
	42, 514,
	235, 514,
	262, 521,
	263, 521,
	451, 514,
	-2, 547,
	-1, 189,
	594, 1740,
	-2, 430,
	-1, 520,
	314, 130,
	425, 130,
	-2, 1652,
	-1, 583,
	81, 1449,
	-2, 1794,
	-1, 584,
	81, 1467,
	-2, 1765,
	-1, 588,
	81, 1468,
	-2, 1793,
	-1, 614,
	81, 1379,
	-2, 1860,
	-1, 615,
	81, 1380,
	-2, 1859,
	-1, 616,
	81, 1381,
	-2, 1849,
	-1, 617,
	81, 1823,
	-2, 1844,
	-1, 618,
	81, 1824,
	-2, 1845,
	-1, 619,
	81, 1825,
	-2, 1851,
	-1, 620,
	81, 1826,
	-2, 1833,
	-1, 621,
	81, 1827,
	-2, 1842,
	-1, 622,
	81, 1828,
	-2, 1852,
	-1, 623,
	81, 1829,
	-2, 1853,
	-1, 624,
	81, 1830,
	-2, 1858,
	-1, 625,
	81, 1831,
	-2, 1863,
	-1, 626,
	81, 1832,
	-2, 1864,
	-1, 628,
	81, 1446,
	-2, 1640,
	-1, 632,
	81, 1451,
	-2, 1653,
	-1, 635,
	81, 1455,
	-2, 1671,
	-1, 639,
	81, 1459,
	-2, 1711,
	-1, 640,
	81, 1460,
	-2, 1789,
	-1, 648,
	81, 1470,
	-2, 1774,
	-1, 649,
	81, 1471,
	-2, 1818,
	-1, 650,
	81, 1472,
	-2, 1784,
	-1, 651,
	81, 1473,
	-2, 1808,
	-1, 662,
	81, 1357,
	-2, 1854,
	-1, 663,
	81, 1358,
	-2, 1855,
	-1, 664,
	81, 1359,
	-2, 1856,
	-1, 668,
	21, 696,
	-2, 659,
	-1, 748,
	446, 547,
	447, 547,
	-2, 515,
	-1, 792,
	122, 1640,
	133, 1640,
	153, 1640,
	-2, 1615,
	-1, 897,
	21, 696,
	-2, 659,
	-1, 997,
	21, 695,
	-2, 1255,
	-1, 1113,
	513, 994,
	514, 994,
	-2, 870,
	-1, 1368,
	81, 1517,
	-2, 1791,
	-1, 1369,
	81, 1518,
	-2, 1792,
	-1, 1505,
	82, 842,
	-2, 848,
	-1, 1886,
	82, 1601,
	154, 1601,
	-2, 1776,
	-1, 1887,
	82, 1601,
	154, 1601,
	-2, 1775,
	-1, 1888,
	82, 1579,
	154, 1579,
	-2, 1762,
	-1, 1889,
	82, 1580,
	154, 1580,
	-2, 1767,
	-1, 1890,
	82, 1581,
	154, 1581,
	-2, 1699,
	-1, 1891,
	82, 1582,
	154, 1582,
	-2, 1693,
	-1, 1892,
	82, 1583,
	154, 1583,
	-2, 1631,
	-1, 1893,
	82, 1584,
	154, 1584,
	-2, 1764,
	-1, 1894,
	82, 1585,
	154, 1585,
	-2, 1697,
	-1, 1895,
	82, 1586,
	154, 1586,
	-2, 1692,
	-1, 1896,
	82, 1587,
	154, 1587,
	-2, 1685,
	-1, 1898,
	82, 1590,
	154, 1590,
	-2, 1808,
	-1, 1899,
	82, 1570,
	154, 1570,
	-2, 1794,
	-1, 1900,
	82, 1599,
	154, 1599,
	-2, 1765,
	-1, 1901,
	82, 1599,
	154, 1599,
	-2, 1793,
	-1, 1902,
	82, 1599,
	154, 1599,
	-2, 1654,
	-1, 1903,
	82, 1597,
	154, 1597,
	-2, 1784,
	-1, 1904,
	82, 1594,
	154, 1594,
	-2, 1676,
	-1, 1905,
	81, 1551,
	82, 1551,
	154, 1551,
	383, 1551,
	384, 1551,
	385, 1551,
	-2, 1630,
	-1, 1906,
	81, 1552,
	82, 1552,
	154, 1552,
	383, 1552,
	384, 1552,
	385, 1552,
	-2, 1632,
	-1, 1907,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1766,
	-1, 1908,
	81, 1557,
	82, 1557,
	154, 1557,
	383, 1557,
	384, 1557,
	385, 1557,
	-2, 1749,
	-1, 1909,
	81, 1559,
	82, 1559,
	154, 1559,
	383, 1559,
	384, 1559,
	385, 1559,
	-2, 1698,
	-1, 1910,
	81, 1561,
	82, 1561,
	154, 1561,
	383, 1561,
	384, 1561,
	385, 1561,
	-2, 1681,
	-1, 1911,
	81, 1562,
	82, 1562,
	154, 1562,
	383, 1562,
	384, 1562,
	385, 1562,
	-2, 1682,
	-1, 1912,
	81, 1564,
	82, 1564,
	154, 1564,
	383, 1564,
	384, 1564,
	385, 1564,
	-2, 1629,
	-1, 1913,
	82, 1604,
	154, 1604,
	383, 1604,
	384, 1604,
	385, 1604,
	-2, 1659,
	-1, 1914,
	82, 1604,
	154, 1604,
	383, 1604,
	384, 1604,
	385, 1604,
	-2, 1672,
	-1, 1915,
	82, 1607,
	154, 1607,
	383, 1607,
	384, 1607,
	385, 1607,
	-2, 1655,
	-1, 1916,
	82, 1607,
	154, 1607,
	383, 1607,
	384, 1607,
	385, 1607,
	-2, 1714,
	-1, 1917,
	82, 1604,
	154, 1604,
	383, 1604,
	384, 1604,
	385, 1604,
	-2, 1734,
	-1, 1933,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	275, 987,
	-2, 980,
	-1, 2072,
	21, 695,
	-2, 789,
	-1, 2267,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	275, 987,
	-2, 981,
	-1, 2287,
	79, 605,
	154, 605,
	-2, 1142,
	-1, 2623,
	191, 987,
	299, 1223,
	-2, 1195,
	-1, 2766,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	-2, 1085,
	-1, 2768,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	-2, 1085,
	-1, 2778,
	79, 605,
	154, 605,
	-2, 1143,
	-1, 2786,
	191, 987,
	299, 1223,
	-2, 1196,
	-1, 2913,
	105, 987,
	149, 987,
	188, 987,
	191, 987,
	-2, 1086,
	-1, 3275,
	82, 1047,
	154, 1047,
	-2, 987,
	-1, 3279,
	82, 1047,
	154, 1047,
	-2, 987,
	-1, 3293,
	82, 1051,
	154, 1051,
	-2, 987,
	-1, 3298,
	82, 1052,
	154, 1052,
	-2, 987,
}

const yyPrivate = 57344

const yyLast = 38369

var yyAct = [...]int{
	550, 1287, 1586, 3278, 3279, 3258, 180, 3287, 1349, 529,
	3150, 531, 552, 3211, 3176, 3229, 3158, 2641, 3159, 539,
	2861, 3070, 2800, 1864, 3062, 3084, 1207, 1029, 2704, 2866,
	2953, 3088, 2897, 1148, 2896, 2988, 2894, 2705, 580, 437,
	3023, 2762, 791, 669, 2864, 2276, 2978, 3071, 3073, 443,
	533, 448, 448, 1277, 1540, 2746, 2901, 448, 464, 473,
	2912, 2591, 473, 2290, 1352, 2787, 2732, 2404, 2856, 2403,
	2575, 1974, 2735, 165, 1675, 2638, 2386, 2326, 1640, 2272,
	2066, 2589, 2620, 2702, 2396, 2165, 1739, 2402, 2425, 2690,
	2915, 1770, 484, 1977, 2627, 2673, 2399, 1884, 2258, 2554,
	2556, 478, 2559, 2268, 1097, 2592, 2050, 2626, 1882, 1874,
	1345, 522, 54, 523, 891, 1687, 1945, 2462, 1268, 1747,
	1672, 2306, 528, 1748, 1766, 2501, 2114, 2164, 36, 1123,
	1487, 1713, 1740, 724, 1668, 1765, 2067, 1643, 2004, 2445,
	1121, 1569, 2055, 1641, 2247, 797, 1975, 2242, 2308, 1515,
	1578, 1200, 176, 8, 175, 7, 6, 437, 2131, 1944,
	1281, 1273, 1495, 845, 1798, 1343, 1767, 532, 442, 2094,
	1242, 1880, 1278, 1777, 2207, 113, 1186, 35, 1216, 1924,
	180, 1348, 180, 2594, 836, 837, 470, 1970, 521, 2208,
	1398, 785, 1551, 523, 1382, 908, 755, 1137, 540, 1334,
	2593, 26, 1746, 795, 15, 1249, 1729, 530, 13, 1552,
	14, 1743, 1156, 1703, 784, 460, 1068, 1342, 2074, 32,
	1514, 457, 1403, 666, 723, 1185, 1404, 487, 1286, 1133,
	436, 1183, 486, 23, 16, 10, 1149, 166, 1241, 701,
	472, 159, 1092, 721, 1774, 705, 2749, 162, 2167, 3013,
	2495, 2495, 1784, 832, 1542, 834, 2697, 2120, 2118, 469,
	668, 2115, 465, 743, 2117, 1256, 467, 1252, 468, 833,
	829, 829, 829, 801, 828, 164, 444, 466, 1169, 1030,
	1254, 966, 967, 968, 965, 966, 967, 968, 965, 2854,
	2790, 2458, 2456, 1718, 2984, 2979, 453, 2857, 2703, 1491,
	3075, 1742, 476, 667, 1157, 1024, 2012, 677, 163, 50,
	155, 131, 163, 163, 50, 155, 131, 8, 163, 7,
	929, 827, 3141, 163, 50, 155, 131, 163, 2802, 163,
	3034, 163, 163, 2883, 2152, 2275, 798, 163, 800, 1771,
	817, 2793, 2160, 2277, 2733, 1301, 1522, 1084, 2878, 1294,
	3106, 2788, 1108, 1107, 1524, 482, 2810, 2811, 2524, 1782,
	112, 657, 2789, 656, 658, 659, 2477, 660, 661, 483,
	773, 1509, 1113, 524, 3035, 1298, 1928, 160, 2092, 1291,
	2470, 160, 160, 1319, 963, 112, 2093, 160, 2881, 1652,
	1335, 1685, 160, 1339, 937, 2431, 1300, 939, 160, 2794,
	1293, 160, 1085, 1187, 1165, 1189, 160, 1166, 678, 2132,
	2080, 670, 944, 2079, 1145, 945, 2081, 1338, 2432, 2433,
	1653, 1654, 1499, 1500, 1152, 940, 764, 2244, 1151, 1154,
	1155, 1154, 1155, 1565, 1438, 2874, 1351, 2245, 956, 3194,
	961, 3192, 794, 947, 793, 3078, 3137, 448, 3162, 3163,
	3077, 3136, 3076, 3135, 3078, 3077, 3076, 448, 901, 1855,
	3180, 3181, 2986, 2989, 2990, 2991, 2992, 2706, 2706, 2463,
	3064, 3064, 2464, 3067, 2465, 473, 473, 3140, 448, 812,
	807, 802, 806, 809, 2243, 2982, 1354, 2147, 902, 2342,
	2809, 3081, 1978, 1168, 911, 2715, 1340, 896, 898, 2888,
	933, 2736, 1778, 1669, 1663, 1255, 1253, 815, 2570, 1659,
	769, 805, 2568, 768, 1330, 2743, 2044, 2798, 942, 1337,
	1923, 130, 712, 161, 2560, 935, 2250, 1726, 3008, 911,
	2490, 2233, 2010, 839, 959, 960, 999, 938, 941, 2795,
	2799, 2797, 2796, 153, 2812, 2157, 3000, 1262, 1261, 3001,
	3080, 830, 831, 932, 2488, 958, 835, 517, 3143, 3144,
	519, 2855, 813, 934, 895, 518, 2873, 2565, 2566, 816,
	2457, 796, 2390, 2875, 924, 2047, 801, 2804, 2805, 900,
	2046, 943, 901, 2567, 2564, 3011, 803, 2885, 2051, 949,
	470, 470, 950, 2639, 2640, 3161, 3187, 1353, 2824, 774,
	897, 2584, 3003, 2602, 3094, 1783, 2283, 1143, 3031, 814,
	475, 1360, 1363, 1364, 3196, 3272, 770, 474, 2395, 2812,
	952, 1930, 1361, 1787, 1789, 1790, 3089, 1177, 1132, 3288,
	3220, 2791, 1033, 3002, 1336, 1683, 1684, 2803, 936, 798,
	2817, 800, 954, 955, 3191, 3152, 3227, 801, 1167, 804,
	2954, 2955, 2956, 2958, 2957, 2827, 946, 2262, 2263, 2264,
	2265, 3007, 2643, 469, 469, 2944, 465, 465, 2021, 3252,
	467, 467, 468, 468, 1980, 2370, 2020, 904, 905, 772,
	2933, 466, 466, 915, 913, 912, 2256, 1772, 1090, 443,
	1093, 3012, 2719, 2494, 765, 948, 2562, 2939, 1196, 3232,
	448, 1772, 1195, 1034, 2041, 2042, 1772, 921, 922, 1065,
	798, 714, 800, 715, 1130, 917, 918, 1147, 1146, 913,
	912, 906, 1129, 724, 811, 471, 3148, 3149, 1128, 3152,
	829, 829, 829, 953, 829, 471, 3289, 3259, 2582, 2770,
	1005, 829, 3024, 1001, 1002, 1003, 1004, 892, 829, 3283,
	2541, 1799, 3142, 2116, 771, 3033, 1773, 1257, 951, 3295,
	1785, 808, 3032, 810, 1096, 2808, 1973, 2852, 1098, 2096,
	448, 482, 1179, 1153, 3061, 2277, 1150, 767, 437, 437,
	766, 1184, 2635, 2427, 2429, 51, 2153, 437, 437, 2084,
	929, 1211, 1211, 2008, 448, 51, 667, 1099, 1100, 1101,
	1102, 1103, 2882, 1105, 1154, 1155, 1154, 1155, 1979, 1112,
	1990, 2571, 1775, 1981, 473, 1093, 443, 132, 1213, 1245,
	1245, 132, 132, 1144, 2807, 2561, 2249, 132, 1670, 1218,
	180, 3009, 132, 2491, 2884, 3233, 132, 3197, 132, 437,
	132, 132, 1104, 2161, 1983, 2996, 132, 1362, 1786, 3072,
	2642, 923, 2493, 1111, 1110, 2889, 1126, 1091, 1109, 1788,
	2343, 1131, 2344, 2345, 2583, 796, 477, 1982, 1141, 1042,
	1043, 2946, 2549, 928, 2340, 3282, 1159, 1160, 2636, 1162,
	1163, 1164, 2253, 2254, 1662, 2639, 2640, 2563, 1285, 1660,
	1288, 1118, 1094, 2232, 1331, 1296, 1868, 2252, 1263, 969,
	1088, 1209, 1209, 820, 825, 826, 1070, 1993, 998, 2442,
	2443, 1870, 1869, 1973, 1995, 1317, 1007, 1502, 1072, 2371,
	2373, 2374, 2375, 2372, 2935, 2940, 2941, 1503, 2934, 1211,
	1302, 1211, 901, 3294, 1139, 1140, 1095, 1867, 1013, 2033,
	1205, 1206, 1501, 1980, 1983, 668, 2428, 718, 719, 720,
	679, 2503, 2502, 680, 2361, 2362, 1086, 1087, 2920, 713,
	1312, 1313, 1877, 3230, 3231, 1266, 1120, 1269, 1270, 1191,
	1193, 1994, 1984, 966, 967, 968, 965, 683, 1203, 1204,
	3235, 1178, 716, 1926, 1237, 1878, 1879, 1170, 1171, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 3301, 3300, 1543, 801, 1393, 1394, 1194, 801, 1158,
	1543, 1402, 1161, 1989, 964, 1830, 3291, 1987, 1829, 2522,
	1292, 1441, 1442, 1443, 1299, 1451, 1275, 1276, 682, 2064,
	1258, 2670, 685, 684, 1457, 470, 1332, 1458, 929, 1134,
	1138, 1138, 1138, 453, 1219, 1326, 1283, 1229, 2288, 1460,
	1467, 1468, 1316, 1350, 1235, 1347, 1280, 1236, 1246, 1284,
	1315, 3273, 1134, 1134, 3256, 3268, 2134, 1247, 3000, 3262,
	2607, 3001, 1984, 964, 964, 2637, 2360, 1979, 1973, 1978,
	671, 1976, 1981, 926, 3261, 2666, 2995, 1328, 3292, 3239,
	964, 822, 823, 824, 1365, 2759, 3213, 1925, 448, 1485,
	1513, 1211, 1517, 1518, 3170, 1520, 1521, 3164, 469, 1858,
	1344, 465, 927, 448, 1303, 467, 1211, 468, 1325, 671,
	724, 1322, 1308, 1541, 3003, 1321, 466, 2152, 1211, 2645,
	1706, 1862, 2065, 1780, 1179, 1304, 1982, 3269, 775, 464,
	2065, 1780, 1488, 668, 2238, 2289, 1333, 2670, 1450, 3116,
	1324, 1323, 1320, 2065, 1135, 3002, 1780, 1346, 1564, 927,
	1341, 1780, 2235, 2139, 765, 3055, 1570, 1570, 3214, 1179,
	3054, 1179, 1179, 2096, 1809, 448, 3171, 1513, 1513, 3016,
	1771, 1211, 1637, 1638, 1650, 3050, 2289, 1512, 1651, 3049,
	1384, 1568, 1244, 1244, 1968, 1863, 1519, 1834, 437, 1508,
	1211, 1391, 1392, 966, 967, 968, 965, 3048, 2007, 3047,
	1762, 3015, 1523, 2907, 1525, 1526, 1527, 966, 967, 968,
	965, 3016, 1681, 964, 1119, 448, 1513, 1211, 2831, 1692,
	1396, 448, 448, 448, 1697, 1698, 1197, 3056, 2654, 1436,
	1701, 1702, 1949, 1433, 1434, 1708, 1437, 767, 2742, 1808,
	766, 2585, 180, 3215, 1452, 180, 180, 3016, 180, 1549,
	1550, 3016, 1066, 1861, 1632, 1633, 1588, 1459, 1704, 1461,
	1136, 1462, 1572, 2781, 2608, 2447, 1559, 1560, 981, 3016,
	2115, 3016, 1516, 3016, 929, 2908, 2291, 1492, 2155, 1664,
	1486, 894, 2154, 2146, 1451, 1451, 1750, 1533, 2422, 2967,
	2096, 1451, 1451, 2214, 2206, 2168, 1757, 1965, 1571, 1546,
	2655, 1825, 1810, 1689, 2150, 1761, 1711, 1507, 1305, 1010,
	1691, 914, 2829, 2586, 1671, 1717, 1678, 1679, 1720, 1721,
	1541, 1723, 1544, 1545, 1211, 1769, 894, 2143, 1355, 1356,
	1357, 1358, 1359, 1656, 1538, 1658, 1694, 1695, 1696, 1537,
	1553, 1562, 1555, 1556, 2141, 1676, 1677, 2136, 1548, 2129,
	1554, 889, 1516, 1574, 1575, 1561, 887, 2996, 2127, 1680,
	2065, 2997, 2612, 3248, 2076, 964, 964, 964, 1573, 553,
	563, 2125, 1400, 1401, 1763, 1751, 1949, 1792, 554, 1435,
	562, 555, 559, 558, 556, 557, 1557, 1445, 2123, 1796,
	1797, 1636, 1639, 1440, 1439, 1948, 801, 2485, 1344, 2137,
	3236, 1563, 1665, 801, 1566, 1567, 1655, 1745, 1657, 1124,
	1440, 1439, 3095, 1125, 1745, 1859, 2142, 1840, 1839, 2137,
	1828, 2130, 2005, 1134, 2603, 1686, 1135, 3014, 470, 2937,
	2128, 1489, 2936, 560, 1690, 1493, 894, 1558, 1496, 2748,
	1819, 1818, 1201, 2124, 1714, 2671, 2664, 2921, 1138, 1817,
	1712, 1779, 1309, 1202, 2659, 1835, 3096, 1837, 2695, 798,
	2124, 800, 2773, 1199, 1844, 561, 798, 1949, 800, 1731,
	1463, 1464, 1465, 2175, 2656, 1469, 1470, 1471, 1472, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1858, 801, 964,
	964, 2922, 964, 2771, 1754, 522, 1760, 901, 1918, 448,
	2604, 469, 1752, 1473, 465, 2577, 2774, 2496, 467, 1755,
	468, 1756, 964, 964, 448, 1759, 448, 448, 448, 466,
	1466, 964, 1764, 1780, 1310, 2392, 2109, 2260, 1946, 982,
	983, 984, 985, 986, 987, 988, 981, 2772, 1953, 1179,
	1390, 2140, 1136, 2086, 2605, 3266, 1115, 1800, 1399, 1958,
	1114, 798, 903, 800, 1715, 1791, 1387, 1389, 1386, 2184,
	1388, 2449, 1198, 1179, 1489, 966, 967, 968, 965, 1489,
	1489, 1793, 681, 1511, 2696, 1384, 2000, 3134, 1804, 984,
	985, 986, 987, 988, 981, 1794, 1795, 886, 882, 883,
	884, 885, 1399, 2189, 1805, 2188, 2187, 2185, 980, 979,
	989, 990, 982, 983, 984, 985, 986, 987, 988, 981,
	1250, 965, 1715, 2949, 1716, 968, 965, 1719, 1885, 1937,
	1722, 2006, 2948, 1724, 980, 979, 989, 990, 982, 983,
	984, 985, 986, 987, 988, 981, 2069, 2069, 1650, 2069,
	2466, 1920, 2332, 1832, 979, 989, 990, 982, 983, 984,
	985, 986, 987, 988, 981, 481, 2331, 437, 437, 2186,
	2314, 2312, 1854, 1856, 1857, 901, 966, 967, 968, 965,
	2928, 1211, 448, 966, 967, 968, 965, 2698, 2891, 2892,
	1927, 1961, 2177, 1871, 448, 966, 967, 968, 965, 1455,
	901, 443, 686, 3251, 3277, 1245, 2119, 1650, 3265, 3221,
	2104, 1012, 2106, 1456, 3216, 3154, 180, 1967, 3125, 966,
	967, 968, 965, 3097, 1011, 1033, 2073, 2071, 2111, 2075,
	2886, 2740, 2011, 3040, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 1954, 3036, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2980, 2034, 2035, 2036, 2037, 2038,
	801, 2039, 2148, 1972, 3250, 1769, 1964, 1648, 1985, 1986,
	1802, 1991, 1211, 1806, 1211, 1962, 1211, 2082, 1963, 2083,
	1971, 901, 1966, 2924, 2923, 2103, 2887, 2741, 2775, 2110,
	2382, 2090, 966, 967, 968, 965, 1034, 2087, 2088, 2739,
	2380, 1251, 2190, 2191, 1955, 1956, 2569, 2481, 2378, 2098,
	1211, 2193, 1816, 2515, 1959, 1960, 2048, 2461, 447, 447,
	1823, 1885, 2367, 798, 455, 800, 2200, 2460, 2077, 2365,
	2364, 1211, 966, 967, 968, 965, 2192, 2363, 1836, 1807,
	1250, 2355, 2202, 1841, 1842, 1843, 2381, 2259, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 2379, 2201, 1191, 1193,
	2091, 2349, 1821, 992, 2377, 996, 2348, 2347, 2346, 2100,
	2199, 2099, 2514, 1138, 1734, 2102, 1733, 901, 2366, 2204,
	3155, 993, 995, 991, 2158, 994, 980, 979, 989, 990,
	982, 983, 984, 985, 986, 987, 988, 981, 966, 967,
	968, 965, 2162, 1865, 1866, 2179, 966, 967, 968, 965,
	1732, 2159, 1728, 966, 967, 968, 965, 1950, 1727, 3087,
	1209, 1306, 1083, 2747, 2173, 2145, 1211, 2397, 1820, 2257,
	2149, 2151, 2555, 2225, 3186, 1513, 2273, 2156, 448, 2862,
	3182, 1209, 1813, 3138, 2287, 966, 967, 968, 965, 3083,
	2293, 2895, 3059, 1344, 966, 967, 968, 965, 2101, 2169,
	2170, 3044, 966, 967, 968, 965, 2302, 2108, 3039, 3038,
	3010, 901, 2183, 2981, 2930, 966, 967, 968, 965, 2311,
	2904, 2890, 2868, 2239, 2860, 2858, 901, 901, 901, 1570,
	2838, 2835, 901, 2833, 2322, 2323, 2324, 901, 2236, 2328,
	2329, 2387, 2330, 2738, 2737, 2734, 1270, 2172, 966, 967,
	968, 965, 2724, 517, 2209, 2210, 519, 2718, 2166, 2226,
	2215, 518, 2270, 2665, 2269, 2069, 2229, 2661, 2652, 2651,
	1489, 2578, 1489, 2546, 966, 967, 968, 965, 2545, 2383,
	2284, 966, 967, 968, 965, 2294, 2492, 437, 2459, 2436,
	1489, 1489, 1513, 901, 1650, 1650, 1650, 1650, 2376, 1588,
	2240, 2368, 2246, 1275, 1276, 901, 1650, 2358, 2356, 2069,
	2309, 2352, 2351, 2350, 2309, 2255, 2305, 1283, 1244, 613,
	612, 3290, 2310, 1860, 2295, 1211, 1736, 1280, 1730, 1498,
	1284, 2316, 2299, 2300, 1307, 1041, 2867, 448, 448, 1037,
	8, 3247, 7, 2286, 2292, 1036, 890, 1516, 2317, 2318,
	3103, 3099, 180, 2321, 2993, 2911, 2768, 180, 2327, 2304,
	2767, 2307, 966, 967, 968, 965, 565, 114, 2766, 2313,
	2320, 2758, 114, 163, 2418, 155, 131, 2723, 1451, 2710,
	1451, 2701, 2700, 2476, 2689, 2338, 2339, 2480, 2688, 2613,
	2520, 2513, 2505, 1211, 2500, 2444, 2487, 2237, 2234, 2353,
	2354, 2357, 980, 979, 989, 990, 982, 983, 984, 985,
	986, 987, 988, 981, 2405, 2126, 2122, 2301, 2121, 2176,
	1845, 454, 1838, 2389, 114, 2450, 2405, 2194, 2195, 1833,
	2454, 2388, 1831, 2393, 1827, 2197, 2198, 2406, 2407, 2408,
	2409, 2821, 160, 2419, 1826, 2421, 2417, 2420, 2203, 1824,
	1488, 1815, 2296, 1812, 893, 2475, 2298, 1811, 668, 1735,
	2434, 2437, 1484, 1483, 899, 2473, 2721, 966, 967, 968,
	965, 2479, 1489, 1482, 1454, 2227, 2228, 1496, 2391, 901,
	2452, 2508, 2518, 2510, 2451, 920, 2484, 2558, 2448, 801,
	1453, 2489, 966, 967, 968, 965, 801, 2573, 1444, 2474,
	1223, 2472, 448, 2297, 163, 2471, 2469, 2467, 966, 967,
	968, 965, 2478, 2517, 1221, 3241, 901, 2483, 3228, 3225,
	901, 901, 901, 672, 673, 674, 675, 799, 671, 1650,
	1946, 114, 2611, 3223, 2498, 2497, 2171, 3124, 2615, 966,
	967, 968, 965, 2506, 2507, 2430, 114, 2504, 114, 2625,
	1031, 2628, 2581, 2628, 2628, 3057, 2511, 2512, 901, 3046,
	980, 979, 989, 990, 982, 983, 984, 985, 986, 987,
	988, 981, 2647, 160, 2548, 3041, 1265, 2962, 2947, 1211,
	1211, 2943, 2644, 2846, 2542, 2547, 2844, 2550, 2819, 2818,
	2509, 2646, 2815, 2814, 801, 2750, 2597, 2596, 2269, 1222,
	1885, 2598, 2599, 2600, 2574, 2648, 2649, 2609, 1274, 1267,
	2553, 2580, 972, 973, 974, 975, 976, 977, 978, 970,
	2525, 2526, 2516, 1122, 2384, 448, 2527, 2528, 2529, 2530,
	2558, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2633,
	2606, 1513, 1513, 2624, 2623, 2315, 2610, 2281, 966, 967,
	968, 965, 2587, 2588, 3115, 2223, 801, 2280, 2279, 2631,
	2629, 2630, 1279, 2634, 2680, 2222, 1282, 1271, 2224, 2135,
	2085, 2618, 2619, 2221, 1174, 2040, 1176, 2220, 1180, 1181,
	1182, 966, 967, 968, 965, 1947, 1935, 1385, 2193, 1209,
	1209, 966, 967, 968, 965, 160, 1699, 2699, 2219, 966,
	967, 968, 965, 966, 967, 968, 965, 1106, 1224, 1225,
	1226, 1227, 1228, 1506, 1230, 1231, 1232, 1233, 1234, 2218,
	1505, 1329, 1239, 1240, 966, 967, 968, 965, 2657, 2453,
	2658, 2455, 1295, 2663, 448, 1272, 2662, 2667, 2668, 1067,
	2653, 1801, 1064, 1063, 2678, 966, 967, 968, 965, 1489,
	1062, 1061, 1060, 2682, 1489, 1059, 1058, 2679, 2217, 1057,
	1056, 2685, 2686, 2687, 1055, 980, 979, 989, 990, 982,
	983, 984, 985, 986, 987, 988, 981, 1175, 2694, 2216,
	1054, 1053, 1052, 2660, 966, 967, 968, 965, 1051, 1050,
	2614, 2499, 1049, 1048, 2616, 2617, 1047, 2711, 3245, 1046,
	1045, 1217, 1044, 1040, 2712, 966, 967, 968, 965, 1039,
	1038, 1035, 1028, 2519, 1027, 2713, 2714, 2213, 1025, 1024,
	1023, 2717, 1022, 2725, 1021, 2754, 1020, 2273, 114, 114,
	799, 1019, 1018, 1017, 1016, 1015, 1014, 2763, 901, 1009,
	3113, 2212, 2730, 966, 967, 968, 965, 2069, 1650, 2778,
	1008, 980, 979, 989, 990, 982, 983, 984, 985, 986,
	987, 988, 981, 901, 931, 888, 2727, 966, 967, 968,
	965, 3111, 2625, 2674, 2675, 3109, 901, 2816, 2756, 2757,
	2411, 1952, 1932, 919, 3202, 3200, 901, 2729, 3160, 2677,
	2261, 1211, 2410, 2097, 1738, 930, 2211, 1424, 2669, 2745,
	3276, 997, 1116, 2414, 2205, 801, 2755, 1513, 2415, 2412,
	2144, 901, 2138, 2681, 2413, 2780, 2576, 2830, 99, 2765,
	53, 2731, 966, 967, 968, 965, 2777, 2776, 2231, 2632,
	966, 967, 968, 965, 2851, 2813, 445, 180, 989, 990,
	982, 983, 984, 985, 986, 987, 988, 981, 801, 2009,
	901, 52, 2825, 2840, 2806, 2826, 2416, 2822, 2061, 2062,
	2751, 2752, 2753, 2828, 2760, 2621, 2820, 2622, 2876, 2133,
	2848, 2834, 2832, 450, 2837, 451, 2196, 2849, 2841, 1535,
	1536, 1530, 1531, 1532, 2784, 1624, 2842, 2174, 449, 2551,
	2052, 901, 1211, 1211, 2839, 1259, 1395, 2823, 2543, 2544,
	901, 1209, 966, 967, 968, 965, 452, 2327, 2163, 2914,
	2853, 2914, 1069, 966, 967, 968, 965, 1289, 2900, 2863,
	1921, 2836, 966, 967, 968, 965, 2847, 2057, 2060, 2061,
	2062, 2058, 2405, 2059, 2063, 1211, 2877, 1073, 2879, 2334,
	2929, 1865, 1866, 1700, 2905, 925, 2335, 2336, 2337, 3079,
	2595, 2552, 1420, 448, 2303, 901, 901, 2241, 1417, 901,
	901, 2906, 1419, 1416, 1418, 1422, 1423, 1942, 1539, 2918,
	1421, 2405, 2917, 1504, 2965, 1440, 1439, 1081, 1082, 2964,
	1079, 1080, 2780, 1077, 1078, 1541, 3173, 2972, 2959, 2951,
	2952, 2931, 2927, 2960, 2961, 2976, 2977, 3043, 2813, 1075,
	1076, 2650, 1209, 2902, 2779, 1510, 2049, 2045, 1635, 1173,
	2782, 1172, 2898, 2783, 2969, 957, 2684, 2806, 2095, 3006,
	1528, 2057, 2060, 2061, 2062, 2058, 1758, 2059, 2063, 2720,
	1127, 1071, 2999, 2968, 3242, 1693, 2722, 3146, 2869, 2970,
	3131, 3129, 2909, 2910, 3090, 2902, 3069, 3068, 3066, 2763,
	3058, 2975, 2974, 2859, 2726, 2708, 3026, 2707, 2692, 1996,
	2994, 2998, 1074, 1220, 3004, 2691, 2446, 1543, 454, 3204,
	3203, 671, 2482, 1934, 1814, 916, 2898, 2898, 3203, 3204,
	2898, 2898, 1576, 2945, 672, 673, 674, 675, 3243, 671,
	3019, 2709, 3017, 2438, 167, 3, 114, 3022, 3027, 3029,
	3020, 3021, 3028, 901, 1142, 61, 2, 1211, 2966, 3037,
	1188, 2078, 1427, 1428, 1429, 1430, 1431, 1432, 1425, 1426,
	1682, 1215, 1, 1497, 3042, 676, 2423, 2424, 2683, 2426,
	1776, 2394, 1688, 3052, 2043, 1922, 2572, 3051, 1688, 1688,
	1688, 980, 979, 989, 990, 982, 983, 984, 985, 986,
	987, 988, 981, 1117, 717, 3074, 1446, 901, 114, 1314,
	819, 910, 114, 3065, 3063, 1311, 909, 907, 3091, 1397,
	567, 2925, 2926, 114, 1489, 1741, 2385, 2359, 2971, 3172,
	3210, 3086, 3123, 114, 3175, 1489, 1327, 901, 2843, 3085,
	3082, 2845, 551, 3060, 1211, 2985, 3127, 3118, 3121, 2987,
	2865, 3093, 1781, 962, 2468, 2850, 739, 604, 578, 1026,
	3101, 3098, 1297, 3108, 3110, 3112, 3114, 1209, 1290, 3122,
	3117, 3107, 2523, 821, 2898, 577, 2744, 3130, 3128, 3132,
	3133, 3126, 2251, 1211, 2441, 3030, 818, 740, 1725, 2983,
	1260, 1264, 2919, 3156, 2769, 727, 3053, 2601, 2282, 3286,
	3275, 3145, 3257, 3240, 3151, 3271, 3190, 3226, 2872, 3153,
	2870, 2871, 3219, 3147, 488, 3179, 1661, 435, 782, 2963,
	1737, 489, 1951, 3139, 3045, 697, 1931, 3178, 2898, 3169,
	3165, 698, 3166, 700, 3167, 2267, 3168, 901, 2266, 1366,
	971, 1383, 3183, 2539, 3074, 2540, 3184, 1006, 527, 1803,
	2248, 2801, 2435, 60, 1209, 59, 3092, 58, 2898, 57,
	1707, 188, 3209, 3198, 726, 569, 3201, 3199, 3193, 3195,
	187, 2893, 3102, 3120, 765, 3212, 3177, 549, 3217, 548,
	901, 3205, 3206, 3207, 3208, 547, 546, 545, 3218, 2056,
	2054, 2053, 3222, 1209, 3224, 1645, 1644, 1705, 2325, 2319,
	1992, 1997, 1577, 3157, 3104, 3179, 3238, 3105, 2942, 2369,
	3234, 1529, 1988, 1594, 901, 2341, 901, 3178, 1591, 3237,
	1590, 2333, 3244, 2938, 3246, 2932, 1621, 2271, 3249, 2761,
	163, 50, 155, 131, 2913, 2785, 2786, 3212, 901, 3253,
	2792, 1941, 844, 3260, 840, 842, 3264, 3267, 156, 843,
	3270, 2521, 841, 2182, 2178, 148, 1969, 767, 3188, 157,
	766, 2590, 1876, 3018, 1875, 3274, 1919, 1873, 3281, 3185,
	1872, 1089, 3285, 3284, 3005, 2728, 1883, 1881, 112, 3293,
	2676, 1936, 3296, 1938, 1939, 1940, 3281, 3299, 3298, 2672,
	3297, 3285, 1749, 100, 752, 1494, 2230, 1646, 1642, 160,
	1649, 1350, 728, 1933, 980, 979, 989, 990, 982, 983,
	984, 985, 986, 987, 988, 981, 1957, 2880, 1534, 690,
	1929, 97, 145, 47, 88, 163, 50, 155, 131, 730,
	87, 96, 143, 46, 172, 1350, 171, 1350, 174, 173,
	170, 2112, 2113, 156, 169, 1248, 168, 2916, 665, 37,
	148, 33, 12, 11, 157, 34, 21, 22, 20, 1350,
	1318, 19, 25, 31, 30, 107, 106, 1013, 114, 29,
	105, 114, 114, 112, 114, 116, 117, 104, 118, 119,
	103, 102, 101, 28, 18, 41, 40, 39, 100, 9,
	95, 93, 751, 750, 160, 27, 94, 91, 92, 89,
	72, 71, 70, 85, 84, 3100, 83, 82, 81, 749,
	799, 80, 78, 79, 738, 69, 68, 799, 67, 66,
	725, 65, 90, 76, 86, 77, 114, 75, 74, 73,
	64, 729, 760, 63, 62, 129, 128, 126, 127, 1217,
	125, 124, 123, 130, 154, 161, 122, 98, 121, 120,
	42, 1688, 43, 44, 45, 756, 139, 138, 140, 142,
	144, 141, 136, 134, 137, 153, 147, 146, 135, 133,
	116, 117, 56, 118, 119, 55, 17, 24, 4, 0,
	0, 0, 0, 0, 0, 499, 498, 505, 495, 0,
	0, 757, 761, 0, 0, 0, 0, 502, 503, 0,
	504, 508, 997, 0, 490, 0, 0, 0, 0, 746,
	0, 744, 748, 764, 513, 0, 0, 745, 742, 741,
	0, 747, 732, 733, 731, 734, 735, 736, 737, 0,
	762, 0, 763, 149, 150, 151, 0, 0, 130, 154,
	161, 0, 98, 758, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	153, 147, 146, 0, 0, 0, 0, 56, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 108,
	754, 0, 0, 152, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3255, 860, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 150,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 110, 0, 0, 0, 1584, 0, 0, 0,
	0, 0, 0, 49, 158, 0, 0, 0, 753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 1624, 1593, 0, 152, 0,
	109, 0, 0, 0, 0, 1625, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 2278, 0, 0, 491, 493,
	492, 2285, 51, 0, 0, 0, 0, 0, 497, 0,
	0, 1592, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 848, 0, 0, 0, 0, 1599, 516, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 110, 0, 132,
	0, 868, 872, 874, 876, 878, 879, 881, 49, 886,
	882, 883, 884, 885, 0, 863, 864, 865, 866, 846,
	847, 869, 0, 849, 2072, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 861, 867, 0, 0, 0,
	0, 0, 0, 0, 871, 873, 875, 877, 880, 0,
	0, 0, 0, 1615, 0, 0, 0, 51, 111, 38,
	0, 0, 0, 0, 0, 48, 5, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 0, 132, 0, 0, 0, 496, 500,
	506, 0, 507, 509, 0, 0, 510, 511, 512, 0,
	0, 514, 515, 0, 2439, 2440, 0, 0, 0, 0,
	0, 1583, 1585, 1582, 0, 1579, 0, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1609, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 38, 0, 0, 0, 0, 0,
	48, 1597, 1631, 0, 115, 1598, 1600, 1602, 0, 1604,
	1605, 1606, 1610, 1611, 1612, 1614, 1617, 1618, 1619, 0,
	0, 0, 0, 0, 0, 0, 1607, 1616, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1587, 0,
	0, 0, 0, 860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2180, 2181, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1580, 1581, 0, 0, 0, 0, 0, 0, 0,
	0, 966, 967, 968, 965, 0, 0, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 2579,
	0, 0, 0, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 860, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 848, 114, 0, 0, 838, 1628, 1627,
	1424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 868, 872, 874, 876, 878, 879, 881,
	870, 886, 882, 883, 884, 885, 0, 863, 864, 865,
	866, 846, 847, 869, 0, 849, 0, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 861, 867, 0,
	1589, 0, 0, 0, 0, 1420, 871, 873, 875, 877,
	880, 1417, 0, 0, 0, 1419, 1416, 1418, 1422, 1423,
	0, 0, 1688, 1421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 1630, 0, 0, 1629,
	714, 0, 715, 862, 0, 0, 0, 0, 0, 0,
	1649, 1649, 1649, 1649, 0, 868, 872, 874, 876, 878,
	879, 881, 1649, 886, 882, 883, 884, 885, 0, 863,
	864, 865, 866, 846, 847, 869, 0, 849, 695, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 861,
	867, 708, 0, 711, 1622, 0, 0, 0, 871, 873,
	875, 877, 880, 0, 0, 1420, 0, 0, 114, 0,
	0, 1417, 0, 114, 0, 1419, 1416, 1418, 1422, 1423,
	0, 0, 0, 1421, 0, 0, 0, 0, 1624, 0,
	0, 2716, 0, 114, 0, 862, 0, 0, 0, 0,
	114, 0, 0, 0, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431,
	1432, 1425, 1426, 0, 0, 0, 0, 0, 0, 1599,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 710, 0, 704,
	0, 691, 0, 0, 499, 498, 505, 495, 707, 706,
	0, 1599, 0, 0, 0, 0, 502, 503, 114, 504,
	508, 0, 3025, 490, 0, 688, 1615, 0, 0, 696,
	0, 0, 0, 513, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 1415, 1427, 1428, 1429, 1430, 1431,
	1432, 1425, 1426, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1649, 0, 0, 713, 0,
	0, 0, 0, 703, 0, 0, 517, 702, 1615, 519,
	114, 0, 0, 687, 518, 0, 0, 694, 0, 0,
	0, 0, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1603, 692, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1609, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 0, 0, 0, 1597, 1631, 0, 0, 1598, 1600,
	1602, 712, 1604, 1605, 1606, 1610, 1611, 1612, 1614, 1617,
	1618, 1619, 0, 0, 0, 1603, 0, 0, 0, 1607,
	1616, 1608, 0, 0, 0, 0, 1609, 693, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 1597, 1631, 0, 0,
	1598, 1600, 1602, 1623, 1604, 1605, 1606, 1610, 1611, 1612,
	1614, 1617, 1618, 1619, 0, 0, 0, 0, 0, 0,
	0, 1607, 1616, 1608, 0, 0, 0, 491, 493, 492,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	2950, 0, 1620, 0, 0, 0, 0, 0, 0, 501,
	0, 0, 709, 0, 0, 1623, 516, 0, 585, 1596,
	0, 0, 0, 494, 0, 0, 1595, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 275, 0, 0, 300, 0, 0,
	1613, 699, 0, 0, 1620, 0, 0, 0, 0, 1601,
	431, 0, 432, 0, 0, 576, 0, 0, 359, 314,
	0, 1596, 0, 0, 636, 644, 0, 0, 1595, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 566,
	613, 612, 553, 563, 0, 0, 252, 186, 433, 114,
	434, 554, 1613, 562, 555, 559, 558, 556, 557, 0,
	628, 1601, 0, 0, 0, 0, 0, 525, 538, 0,
	542, 0, 0, 0, 0, 0, 0, 496, 500, 506,
	0, 507, 509, 0, 0, 510, 511, 512, 0, 0,
	514, 515, 114, 0, 535, 536, 0, 0, 0, 0,
	586, 0, 537, 0, 1649, 581, 560, 564, 0, 0,
	0, 0, 243, 364, 380, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 561, 584,
	588, 269, 650, 582, 388, 247, 0, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 651,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 390, 0, 114, 634, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 583, 0, 350, 332, 647,
	526, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 1448,
	1447, 1449, 402, 282, 235, 236, 441, 632, 328, 0,
	0, 0, 0, 646, 627, 629, 630, 633, 637, 638,
	639, 640, 641, 643, 645, 649, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 587, 0, 0,
	318, 319, 320, 321, 635, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 292, 293, 357, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 307, 0,
	0, 657, 631, 656, 658, 659, 655, 660, 661, 642,
	544, 0, 591, 653, 652, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 0, 342, 280, 0,
	0, 620, 597, 598, 599, 543, 600, 594, 595, 596,
	621, 589, 617, 618, 568, 592, 601, 616, 602, 619,
	622, 623, 662, 663, 608, 664, 605, 624, 615, 614,
	603, 590, 625, 626, 575, 570, 606, 607, 593, 609,
	610, 611, 571, 572, 573, 574, 0, 585, 0, 398,
	399, 400, 421, 384, 0, 438, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	0, 0, 0, 275, 1490, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 576, 0, 0, 359, 314, 0,
	0, 0, 0, 636, 644, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 534, 0, 0, 566, 613,
	612, 553, 563, 0, 0, 252, 186, 433, 0, 434,
	554, 0, 562, 555, 559, 558, 556, 557, 0, 628,
	0, 0, 0, 0, 0, 0, 525, 538, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 536, 0, 0, 0, 0, 586,
	0, 537, 0, 0, 1674, 560, 564, 0, 0, 0,
	0, 243, 364, 380, 253, 355, 393, 258, 362, 248,
	329, 352, 0, 0, 245, 378, 361, 311, 294, 295,
	244, 0, 347, 273, 286, 270, 327, 561, 584, 588,
	269, 650, 582, 388, 247, 0, 387, 326, 374, 379,
	312, 306, 246, 376, 310, 305, 298, 277, 651, 290,
	338, 304, 339, 291, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	390, 0, 0, 634, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 583, 0, 350, 332, 647, 526,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	238, 366, 272, 313, 249, 251, 267, 274, 276, 278,
	279, 322, 323, 335, 354, 367, 368, 369, 271, 259,
	349, 260, 288, 261, 239, 264, 263, 265, 356, 266,
	241, 336, 373, 0, 284, 345, 309, 242, 308, 337,
	372, 371, 250, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 282, 235, 236, 441, 632, 328, 0, 0,
	0, 0, 646, 627, 629, 630, 633, 637, 638, 639,
	640, 641, 643, 645, 649, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 240, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 587, 0, 0, 318,
	319, 320, 321, 635, 0, 257, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 281, 287, 425,
	289, 256, 333, 283, 392, 296, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 292, 293, 357, 297, 303,
	346, 391, 331, 351, 254, 382, 358, 307, 0, 0,
	657, 631, 656, 658, 659, 655, 660, 661, 642, 544,
	0, 591, 653, 652, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 234,
	262, 0, 237, 0, 301, 0, 342, 280, 0, 0,
	620, 597, 598, 599, 543, 600, 594, 595, 596, 621,
	589, 617, 618, 568, 592, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	590, 625, 626, 575, 570, 606, 607, 593, 609, 610,
	611, 571, 572, 573, 574, 163, 585, 0, 398, 399,
	400, 421, 384, 0, 438, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 275, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 1000, 0, 0, 359, 314, 0, 0,
	0, 0, 636, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 0, 566, 613, 612,
	553, 563, 0, 0, 252, 186, 433, 0, 434, 554,
	0, 562, 555, 559, 558, 556, 557, 0, 628, 0,
	0, 0, 0, 0, 0, 525, 538, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 586, 0,
	537, 0, 0, 581, 560, 564, 0, 0, 0, 0,
	243, 364, 380, 253, 355, 393, 258, 362, 248, 329,
	352, 0, 0, 245, 378, 361, 311, 294, 295, 244,
	0, 347, 273, 286, 270, 327, 561, 584, 588, 269,
	650, 582, 388, 247, 0, 387, 326, 374, 379, 312,
	306, 246, 376, 310, 305, 298, 277, 651, 290, 338,
	304, 339, 291, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 390,
	0, 0, 634, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 583, 0, 350, 332, 647, 526, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 238,
	366, 272, 313, 249, 251, 267, 274, 276, 278, 279,
	322, 323, 335, 354, 367, 368, 369, 271, 259, 349,
	260, 288, 261, 239, 264, 263, 265, 356, 266, 241,
	336, 373, 0, 284, 345, 309, 242, 308, 337, 372,
	371, 250, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 282, 235, 236, 441, 632, 328, 0, 0, 0,
	0, 646, 627, 629, 630, 633, 637, 638, 639, 640,
	641, 643, 645, 649, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 240, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 587, 0, 0, 318, 319,
	320, 321, 635, 0, 257, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 281, 287, 425, 289,
	256, 333, 283, 392, 296, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 292, 293, 357, 297, 303, 346,
	391, 331, 351, 254, 382, 358, 307, 0, 0, 657,
	631, 656, 658, 659, 655, 660, 661, 642, 544, 0,
	591, 653, 652, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 234, 262,
	0, 237, 0, 301, 132, 342, 280, 0, 0, 620,
	597, 598, 599, 543, 600, 594, 595, 596, 621, 589,
	617, 618, 568, 592, 601, 616, 602, 619, 622, 623,
	662, 663, 608, 664, 605, 624, 615, 614, 603, 590,
	625, 626, 575, 570, 606, 607, 593, 609, 610, 611,
	571, 572, 573, 574, 0, 585, 0, 398, 399, 400,
	421, 384, 0, 438, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 275, 3254, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 576, 0, 0, 359, 314, 0, 0, 0,
	0, 636, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 0, 0, 566, 613, 612, 553,
	563, 0, 0, 252, 186, 433, 0, 434, 554, 0,
	562, 555, 559, 558, 556, 557, 0, 628, 0, 0,
	0, 0, 0, 0, 525, 538, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 536, 0, 0, 0, 0, 586, 0, 537,
	0, 0, 581, 560, 564, 0, 0, 0, 0, 243,
	364, 380, 253, 355, 393, 258, 362, 248, 329, 352,
	0, 0, 245, 378, 361, 311, 294, 295, 244, 0,
	347, 273, 286, 270, 327, 561, 584, 588, 269, 650,
	582, 388, 247, 0, 387, 326, 374, 379, 312, 306,
	246, 376, 310, 305, 298, 277, 651, 290, 338, 304,
	339, 291, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 390, 0,
	0, 634, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 583, 0, 350, 332, 647, 526, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 238, 366,
	272, 313, 249, 251, 267, 274, 276, 278, 279, 322,
	323, 335, 354, 367, 368, 369, 271, 259, 349, 260,
	288, 261, 239, 264, 263, 265, 356, 266, 241, 336,
	373, 0, 284, 345, 309, 242, 308, 337, 372, 371,
	250, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	282, 235, 236, 441, 632, 328, 0, 0, 0, 0,
	646, 627, 629, 630, 633, 637, 638, 639, 640, 641,
	643, 645, 649, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 240, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 587, 0, 0, 318, 319, 320,
	321, 635, 0, 257, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 281, 287, 425, 289, 256,
	333, 283, 392, 296, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 292, 293, 357, 297, 303, 346, 391,
	331, 351, 254, 382, 358, 307, 0, 0, 657, 631,
	656, 658, 659, 655, 660, 661, 642, 544, 0, 591,
	653, 652, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 234, 262, 0,
	237, 0, 301, 0, 342, 280, 0, 0, 620, 597,
	598, 599, 543, 600, 594, 595, 596, 621, 589, 617,
	618, 568, 592, 601, 616, 602, 619, 622, 623, 662,
	663, 608, 664, 605, 624, 615, 614, 603, 590, 625,
	626, 575, 570, 606, 607, 593, 609, 610, 611, 571,
	572, 573, 574, 0, 585, 0, 398, 399, 400, 421,
	384, 0, 438, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 541, 0, 0, 0,
	275, 1490, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 576, 0, 0, 359, 314, 0, 0, 0, 0,
	636, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 0, 0, 566, 613, 612, 553, 563,
	0, 0, 252, 186, 433, 0, 434, 554, 0, 562,
	555, 559, 558, 556, 557, 0, 628, 0, 0, 0,
	0, 0, 0, 525, 538, 0, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	535, 536, 0, 0, 0, 0, 586, 0, 537, 0,
	0, 581, 560, 564, 0, 0, 0, 0, 243, 364,
	380, 253, 355, 393, 258, 362, 248, 329, 352, 0,
	0, 245, 378, 361, 311, 294, 295, 244, 0, 347,
	273, 286, 270, 327, 561, 584, 588, 269, 650, 582,
	388, 247, 0, 387, 326, 374, 379, 312, 306, 246,
	376, 310, 305, 298, 277, 651, 290, 338, 304, 339,
	291, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 579, 0, 0, 0, 390, 0, 0,
	634, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 583, 0, 350, 332, 647, 526, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 238, 366, 272,
	313, 249, 251, 267, 274, 276, 278, 279, 322, 323,
	335, 354, 367, 368, 369, 271, 259, 349, 260, 288,
	261, 239, 264, 263, 265, 356, 266, 241, 336, 373,
	0, 284, 345, 309, 242, 308, 337, 372, 371, 250,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 282,
	235, 236, 441, 632, 328, 0, 0, 0, 0, 646,
	627, 629, 630, 633, 637, 638, 639, 640, 641, 643,
	645, 649, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 240, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 648, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 587, 0, 0, 318, 319, 320, 321,
	635, 0, 257, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 281, 287, 425, 289, 256, 333,
	283, 392, 296, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 292, 293, 357, 297, 303, 346, 391, 331,
	351, 254, 382, 358, 307, 0, 0, 657, 631, 656,
	658, 659, 655, 660, 661, 642, 544, 0, 591, 653,
	652, 654, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 234, 262, 0, 237,
	0, 301, 0, 342, 280, 0, 0, 620, 597, 598,
	599, 543, 600, 594, 595, 596, 621, 589, 617, 618,
	568, 592, 601, 616, 602, 619, 622, 623, 662, 663,
	608, 664, 605, 624, 615, 614, 603, 590, 625, 626,
	575, 570, 606, 607, 593, 609, 610, 611, 571, 572,
	573, 574, 0, 585, 0, 398, 399, 400, 421, 384,
	0, 438, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 541, 0, 0, 0, 275,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	576, 0, 0, 359, 314, 0, 0, 0, 0, 636,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 0, 566, 613, 612, 553, 563, 0,
	0, 252, 186, 433, 0, 434, 554, 0, 562, 555,
	559, 558, 556, 557, 0, 628, 0, 0, 0, 0,
	0, 0, 525, 538, 0, 542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	536, 1243, 0, 0, 0, 586, 0, 537, 0, 0,
	581, 560, 564, 0, 0, 0, 0, 243, 364, 380,
	253, 355, 393, 258, 362, 248, 329, 352, 0, 0,
	245, 378, 361, 311, 294, 295, 244, 0, 347, 273,
	286, 270, 327, 561, 584, 588, 269, 650, 582, 388,
	247, 0, 387, 326, 374, 379, 312, 306, 246, 376,
	310, 305, 298, 277, 651, 290, 338, 304, 339, 291,
	316, 315, 317, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 579, 0, 0, 0, 390, 0, 0, 634,
	0, 0, 0, 363, 0, 0, 299, 0, 0, 0,
	583, 0, 350, 332, 647, 526, 0, 348, 302, 375,
	340, 381, 365, 389, 344, 341, 238, 366, 272, 313,
	249, 251, 267, 274, 276, 278, 279, 322, 323, 335,
	354, 367, 368, 369, 271, 259, 349, 260, 288, 261,
	239, 264, 263, 265, 356, 266, 241, 336, 373, 0,
	284, 345, 309, 242, 308, 337, 372, 371, 250, 397,
	403, 404, 0, 0, 409, 0, 0, 0, 417, 422,
	423, 424, 426, 427, 428, 429, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 402, 282, 235,
	236, 441, 632, 328, 0, 0, 0, 0, 646, 627,
	629, 630, 633, 637, 638, 639, 640, 641, 643, 645,
	649, 440, 0, 0, 0, 0, 0, 439, 334, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 383, 395, 412, 415, 0, 0,
	0, 0, 240, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 587, 0, 0, 318, 319, 320, 321, 635,
	0, 257, 413, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 281, 287, 425, 289, 256, 333, 283,
	392, 296, 0, 418, 0, 419, 0, 0, 0, 0,
	325, 292, 293, 357, 297, 303, 346, 391, 331, 351,
	254, 382, 358, 307, 0, 0, 657, 631, 656, 658,
	659, 655, 660, 661, 642, 544, 0, 591, 653, 652,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 234, 262, 0, 237, 0,
	301, 0, 342, 280, 0, 0, 620, 597, 598, 599,
	543, 600, 594, 595, 596, 621, 589, 617, 618, 568,
	592, 601, 616, 602, 619, 622, 623, 662, 663, 608,
	664, 605, 624, 615, 614, 603, 590, 625, 626, 575,
	570, 606, 607, 593, 609, 610, 611, 571, 572, 573,
	574, 0, 0, 0, 398, 399, 400, 421, 384, 585,
	438, 0, 1822, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 541, 0, 0, 0, 275, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 576, 0, 0, 359,
	314, 0, 0, 0, 0, 636, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 534, 0, 0,
	566, 613, 612, 553, 563, 0, 0, 252, 186, 433,
	0, 434, 554, 0, 562, 555, 559, 558, 556, 557,
	0, 628, 0, 0, 0, 0, 0, 0, 525, 538,
	0, 542, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 536, 0, 0, 0,
	0, 586, 0, 537, 0, 0, 581, 560, 564, 0,
	0, 0, 0, 243, 364, 380, 253, 355, 393, 258,
	362, 248, 329, 352, 0, 0, 245, 378, 361, 311,
	294, 295, 244, 0, 347, 273, 286, 270, 327, 561,
	584, 588, 269, 650, 582, 388, 247, 0, 387, 326,
	374, 379, 312, 306, 246, 376, 310, 305, 298, 277,
	651, 290, 338, 304, 339, 291, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 0,
	0, 0, 390, 0, 0, 634, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 583, 0, 350, 332,
	647, 526, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 238, 366, 272, 313, 249, 251, 267, 274,
	276, 278, 279, 322, 323, 335, 354, 367, 368, 369,
	271, 259, 349, 260, 288, 261, 239, 264, 263, 265,
	356, 266, 241, 336, 373, 0, 284, 345, 309, 242,
	308, 337, 372, 371, 250, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 282, 235, 236, 441, 632, 328,
	0, 0, 0, 0, 646, 627, 629, 630, 633, 637,
	638, 639, 640, 641, 643, 645, 649, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 240, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 587, 0,
	0, 318, 319, 320, 321, 635, 0, 257, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 281,
	287, 425, 289, 256, 333, 283, 392, 296, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 292, 293, 357,
	297, 303, 346, 391, 331, 351, 254, 382, 358, 307,
	0, 0, 657, 631, 656, 658, 659, 655, 660, 661,
	642, 544, 0, 591, 653, 652, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 234, 262, 0, 237, 0, 301, 0, 342, 280,
	0, 0, 620, 597, 598, 599, 543, 600, 594, 595,
	596, 621, 589, 617, 618, 568, 592, 601, 616, 602,
	619, 622, 623, 662, 663, 608, 664, 605, 624, 615,
	614, 603, 590, 625, 626, 575, 570, 606, 607, 593,
	609, 610, 611, 571, 572, 573, 574, 0, 585, 0,
	398, 399, 400, 421, 384, 0, 438, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	541, 0, 0, 0, 275, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 576, 0, 0, 359, 314,
	0, 0, 0, 0, 636, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 0, 0, 566,
	613, 612, 553, 563, 0, 0, 252, 186, 433, 0,
	434, 554, 0, 562, 555, 559, 558, 556, 557, 0,
	628, 0, 0, 0, 0, 0, 0, 525, 538, 0,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 535, 536, 0, 0, 0, 0,
	586, 0, 537, 0, 0, 581, 560, 564, 0, 0,
	0, 0, 243, 364, 380, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 561, 584,
	588, 269, 650, 582, 388, 247, 0, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 651,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 579, 0, 0,
	0, 390, 0, 0, 634, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 583, 0, 350, 332, 647,
	526, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 282, 235, 236, 441, 632, 328, 0,
	0, 0, 0, 646, 627, 629, 630, 633, 637, 638,
	639, 640, 641, 643, 645, 649, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 648, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 587, 0, 0,
	318, 319, 320, 321, 635, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 292, 293, 357, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 307, 0,
	0, 657, 631, 656, 658, 659, 655, 660, 661, 642,
	544, 0, 591, 653, 652, 654, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 0, 342, 280, 0,
	0, 620, 597, 598, 599, 543, 600, 594, 595, 596,
	621, 589, 617, 618, 568, 592, 601, 616, 602, 619,
	622, 623, 662, 663, 608, 664, 605, 624, 615, 614,
	603, 590, 625, 626, 575, 570, 606, 607, 593, 609,
	610, 611, 571, 572, 573, 574, 0, 585, 0, 398,
	399, 400, 421, 384, 0, 438, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 0, 0, 0, 541,
	0, 0, 0, 275, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 576, 0, 0, 359, 314, 0,
	0, 0, 0, 636, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 0, 0, 566, 613,
	612, 553, 563, 0, 0, 252, 186, 433, 0, 434,
	554, 0, 562, 555, 559, 558, 556, 557, 0, 628,
	0, 0, 0, 0, 0, 0, 0, 538, 0, 542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 536, 0, 0, 0, 0, 586,
	0, 537, 0, 0, 581, 560, 564, 0, 0, 0,
	0, 243, 364, 380, 253, 355, 393, 258, 362, 248,
	329, 352, 0, 0, 245, 378, 361, 311, 294, 295,
	244, 0, 347, 273, 286, 270, 327, 561, 584, 588,
	269, 650, 582, 388, 247, 0, 387, 326, 374, 379,
	312, 306, 246, 376, 310, 305, 298, 277, 651, 290,
	338, 304, 339, 291, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 579, 0, 0, 0,
	390, 0, 0, 634, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 583, 0, 350, 332, 647, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	238, 366, 272, 313, 249, 251, 267, 274, 276, 278,
	279, 322, 323, 335, 354, 367, 368, 369, 271, 259,
	349, 260, 288, 261, 239, 264, 263, 265, 356, 266,
	241, 336, 373, 0, 284, 345, 309, 242, 308, 337,
	372, 371, 250, 397, 1368, 1369, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 282, 235, 236, 441, 632, 328, 0, 0,
	0, 0, 646, 627, 629, 630, 633, 637, 638, 639,
	640, 641, 643, 645, 649, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 240, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 587, 0, 0, 318,
	319, 320, 321, 635, 0, 257, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 281, 287, 425,
	289, 256, 333, 283, 392, 296, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 292, 293, 357, 297, 303,
	346, 391, 331, 351, 254, 382, 358, 307, 0, 0,
	657, 631, 656, 658, 659, 655, 660, 661, 642, 544,
	0, 591, 653, 652, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 234,
	262, 0, 237, 0, 301, 0, 342, 280, 0, 0,
	620, 597, 598, 599, 543, 600, 594, 595, 596, 621,
	589, 617, 618, 568, 592, 601, 616, 602, 619, 622,
	623, 662, 663, 608, 664, 605, 624, 615, 614, 603,
	590, 625, 626, 575, 570, 606, 607, 593, 609, 610,
	611, 571, 572, 573, 574, 0, 585, 0, 398, 399,
	400, 421, 384, 0, 438, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 541, 0,
	0, 0, 275, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 576, 0, 0, 359, 314, 0, 0,
	0, 0, 636, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, 613, 612,
	553, 563, 0, 0, 252, 186, 433, 0, 434, 554,
	0, 562, 555, 559, 558, 556, 557, 0, 628, 0,
	0, 0, 0, 0, 0, 525, 538, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 586, 0,
	537, 0, 0, 581, 560, 564, 0, 0, 0, 0,
	243, 364, 380, 253, 355, 393, 258, 362, 248, 329,
	352, 0, 0, 245, 378, 361, 311, 294, 295, 244,
	0, 347, 273, 286, 270, 327, 561, 584, 588, 269,
	650, 582, 388, 247, 0, 387, 326, 374, 379, 312,
	306, 246, 376, 310, 305, 298, 277, 651, 290, 338,
	304, 339, 291, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 579, 0, 0, 0, 390,
	0, 0, 634, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 583, 0, 350, 332, 647, 526, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 238,
	366, 272, 313, 249, 251, 267, 274, 276, 278, 279,
	322, 323, 335, 354, 367, 368, 369, 271, 259, 349,
	260, 288, 261, 239, 264, 263, 265, 356, 266, 241,
	336, 373, 0, 284, 345, 309, 242, 308, 337, 372,
	371, 250, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 282, 235, 236, 441, 632, 328, 0, 0, 0,
	0, 646, 627, 629, 630, 633, 637, 638, 639, 640,
	641, 643, 645, 649, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 240, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 587, 0, 0, 318, 319,
	320, 321, 635, 0, 257, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 281, 287, 425, 289,
	256, 333, 283, 392, 296, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 292, 293, 357, 297, 303, 346,
	391, 331, 351, 254, 382, 358, 307, 0, 0, 657,
	631, 656, 658, 659, 655, 660, 661, 642, 544, 0,
	591, 653, 652, 654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 234, 262,
	0, 237, 0, 301, 0, 342, 280, 0, 0, 620,
	597, 598, 599, 543, 600, 594, 595, 596, 621, 589,
	617, 618, 568, 592, 601, 616, 602, 619, 622, 623,
	662, 663, 608, 664, 605, 624, 615, 614, 603, 590,
	625, 626, 575, 570, 606, 607, 593, 609, 610, 611,
	571, 572, 573, 574, 0, 585, 0, 398, 399, 400,
	421, 384, 0, 438, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 0,
	0, 275, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 576, 0, 0, 359, 314, 0, 0, 0,
	0, 636, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 0, 0, 566, 613, 612, 553,
	563, 0, 0, 252, 186, 433, 0, 434, 554, 0,
	562, 555, 559, 558, 556, 557, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 538, 0, 542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 536, 0, 0, 0, 0, 586, 0, 537,
	0, 0, 581, 560, 564, 0, 0, 0, 0, 243,
	364, 380, 253, 355, 393, 258, 362, 248, 329, 352,
	0, 0, 245, 378, 361, 311, 294, 295, 244, 0,
	347, 273, 286, 270, 327, 561, 584, 588, 269, 650,
	582, 388, 247, 0, 387, 326, 374, 379, 312, 306,
	246, 376, 310, 305, 298, 277, 651, 290, 338, 304,
	339, 291, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 0, 0, 0, 390, 0,
	0, 634, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 583, 0, 350, 332, 647, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 238, 366,
	272, 313, 249, 251, 267, 274, 276, 278, 279, 322,
	323, 335, 354, 367, 368, 369, 271, 259, 349, 260,
	288, 261, 239, 264, 263, 265, 356, 266, 241, 336,
	373, 0, 284, 345, 309, 242, 308, 337, 372, 371,
	250, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	282, 235, 236, 441, 632, 328, 0, 0, 0, 0,
	646, 627, 629, 630, 633, 637, 638, 639, 640, 641,
	643, 645, 649, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 240, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 587, 0, 0, 318, 319, 320,
	321, 635, 0, 257, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 281, 287, 425, 289, 256,
	333, 283, 392, 296, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 292, 293, 357, 297, 303, 346, 391,
	331, 351, 254, 382, 358, 307, 0, 0, 657, 631,
	656, 658, 659, 655, 660, 661, 642, 544, 0, 591,
	653, 652, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 234, 262, 0,
	237, 0, 301, 0, 342, 280, 0, 0, 620, 597,
	598, 599, 543, 600, 594, 595, 596, 621, 589, 617,
	618, 568, 592, 601, 616, 602, 619, 622, 623, 662,
	663, 608, 664, 605, 624, 615, 614, 603, 590, 625,
	626, 575, 570, 606, 607, 593, 609, 610, 611, 571,
	572, 573, 574, 0, 0, 0, 398, 399, 400, 421,
	384, 0, 438, 163, 50, 155, 131, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 148, 0,
	275, 0, 157, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 112, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
	0, 0, 160, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 252, 186, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 364,
	380, 253, 355, 393, 258, 362, 248, 329, 352, 0,
	0, 245, 378, 361, 311, 294, 295, 244, 0, 347,
	273, 286, 270, 327, 0, 377, 405, 269, 396, 0,
	388, 247, 0, 387, 326, 374, 379, 312, 306, 246,
	376, 310, 305, 298, 277, 420, 290, 338, 304, 339,
	291, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 130, 154, 161, 0,
	98, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	178, 0, 0, 0, 363, 0, 0, 299, 153, 147,
	146, 406, 0, 350, 332, 56, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 238, 366, 272,
	313, 249, 251, 267, 274, 276, 278, 279, 322, 323,
	335, 354, 367, 368, 369, 271, 259, 349, 260, 288,
	261, 239, 264, 263, 265, 356, 266, 241, 336, 373,
	0, 284, 345, 309, 242, 308, 337, 372, 371, 250,
	397, 403, 404, 0, 0, 409, 149, 150, 151, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 282,
	235, 236, 385, 268, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 181, 0,
	0, 430, 189, 0, 0, 0, 152, 0, 190, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 240, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	285, 0, 257, 413, 343, 110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 49, 0, 0, 0,
	0, 0, 407, 408, 281, 287, 425, 289, 256, 333,
	283, 392, 296, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 292, 293, 357, 297, 303, 346, 391, 331,
	351, 254, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 234, 262, 0, 237,
	0, 301, 132, 342, 280, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 0, 0, 230, 231,
	232, 233, 0, 330, 0, 398, 399, 400, 421, 384,
	0, 191, 38, 179, 182, 184, 183, 0, 48, 5,
	275, 0, 115, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1032, 0, 0, 185, 0, 0, 553, 563,
	0, 0, 252, 186, 433, 0, 434, 554, 0, 562,
	555, 559, 558, 556, 557, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 0, 0, 0, 0, 243, 364,
	380, 253, 355, 393, 258, 362, 248, 329, 352, 0,
	0, 245, 378, 361, 311, 294, 295, 244, 0, 347,
	273, 286, 270, 327, 561, 377, 405, 269, 396, 0,
	388, 247, 0, 387, 326, 374, 379, 312, 306, 246,
	376, 310, 305, 298, 277, 420, 290, 338, 304, 339,
	291, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 238, 366, 272,
	313, 249, 251, 267, 274, 276, 278, 279, 322, 323,
	335, 354, 367, 368, 369, 271, 259, 349, 260, 288,
	261, 239, 264, 263, 265, 356, 266, 241, 336, 373,
	0, 284, 345, 309, 242, 308, 337, 372, 371, 250,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 282,
	235, 236, 441, 268, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 240, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	285, 0, 257, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 281, 287, 425, 289, 256, 333,
	283, 392, 296, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 292, 293, 357, 297, 303, 346, 391, 331,
	351, 254, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 234, 262, 0, 237,
	0, 301, 0, 342, 280, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 0, 0, 230, 231,
	232, 233, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 163, 50, 155, 131, 0, 0, 0, 0,
	0, 0, 330, 458, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 252, 186, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 364, 380,
	253, 355, 393, 258, 362, 248, 329, 352, 0, 0,
	245, 378, 361, 311, 294, 295, 244, 0, 347, 273,
	286, 270, 327, 0, 377, 405, 269, 396, 0, 388,
	247, 0, 387, 326, 374, 379, 312, 306, 246, 376,
	310, 305, 298, 277, 420, 290, 338, 304, 339, 291,
	316, 315, 317, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 299, 0, 0, 0,
	406, 0, 350, 332, 0, 0, 0, 348, 302, 375,
	340, 381, 365, 389, 344, 341, 238, 366, 272, 313,
	249, 251, 267, 274, 276, 278, 279, 322, 323, 335,
	354, 367, 368, 369, 271, 259, 349, 260, 288, 261,
	239, 264, 263, 265, 356, 266, 241, 336, 373, 0,
	284, 345, 309, 242, 308, 337, 372, 371, 250, 397,
	403, 404, 0, 0, 409, 0, 0, 0, 417, 422,
	423, 424, 426, 427, 428, 429, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 402, 282, 235,
	236, 441, 268, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 401, 0, 0, 0,
	430, 440, 0, 0, 0, 0, 0, 439, 334, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 383, 395, 412, 415, 0, 0,
	0, 0, 240, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 410, 0, 0, 318, 319, 320, 321, 459,
	461, 257, 413, 343, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 281, 287, 425, 289, 256, 333, 283,
	392, 296, 0, 418, 0, 419, 0, 0, 0, 0,
	325, 292, 293, 357, 297, 303, 346, 391, 331, 351,
	254, 382, 358, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 234, 262, 0, 237, 0,
	301, 132, 342, 280, 0, 0, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 330, 0, 0, 230, 231, 232,
	233, 0, 860, 0, 398, 399, 400, 421, 384, 0,
	438, 275, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 0, 0, 0, 359, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 252, 186, 433, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 848, 0, 0, 0, 0, 0, 0, 243,
	364, 380, 253, 355, 393, 258, 362, 248, 329, 352,
	0, 0, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 0,
	1917, 1913, 1914, 1915, 1916, 0, 1900, 1901, 1902, 1903,
	846, 1886, 1906, 0, 1887, 326, 1888, 1889, 1890, 1891,
	1892, 1893, 1894, 1895, 1896, 1897, 1898, 1904, 338, 304,
	339, 291, 316, 315, 317, 871, 873, 875, 877, 880,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 1899, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 238, 366,
	272, 313, 249, 251, 267, 274, 276, 278, 279, 322,
	323, 335, 354, 367, 368, 369, 271, 259, 349, 260,
	288, 261, 239, 264, 263, 265, 356, 266, 241, 336,
	373, 0, 284, 345, 309, 242, 308, 337, 372, 371,
	250, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	282, 235, 236, 441, 268, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 240, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 285, 0, 257, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 281, 287, 425, 289, 256,
	333, 283, 392, 296, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 292, 293, 357, 297, 303, 346, 391,
	331, 351, 254, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 234, 262, 0,
	237, 870, 301, 0, 342, 280, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 330, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 398, 399, 400, 421,
	384, 0, 438, 275, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 252, 186, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	1980, 1983, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 364, 380, 253, 355, 393, 258, 362, 248,
	329, 352, 0, 0, 245, 378, 361, 311, 294, 295,
	244, 0, 347, 273, 286, 270, 327, 0, 377, 405,
	269, 396, 0, 388, 247, 0, 387, 326, 374, 379,
	312, 306, 246, 376, 310, 305, 298, 277, 420, 290,
	338, 304, 339, 291, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	390, 0, 0, 0, 1979, 0, 1978, 363, 1976, 1981,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	238, 366, 272, 313, 249, 251, 267, 274, 276, 278,
	279, 322, 323, 335, 354, 367, 368, 369, 271, 259,
	349, 260, 288, 261, 239, 264, 263, 265, 356, 266,
	241, 336, 373, 1982, 284, 345, 309, 242, 308, 337,
	372, 371, 250, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 282, 235, 236, 441, 268, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 240, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 285, 0, 257, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 281, 287, 425,
	289, 256, 333, 283, 392, 296, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 292, 293, 357, 297, 303,
	346, 391, 331, 351, 254, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 234,
	262, 0, 237, 0, 301, 0, 342, 280, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 330, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 0, 0, 1709, 0, 0,
	0, 0, 275, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	1710, 0, 0, 0, 252, 186, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 966, 967, 968, 965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 364, 380, 253, 355, 393, 258, 362, 248, 329,
	352, 0, 0, 245, 378, 361, 311, 294, 295, 244,
	0, 347, 273, 286, 270, 327, 0, 377, 405, 269,
	396, 0, 388, 247, 0, 387, 326, 374, 379, 312,
	306, 246, 376, 310, 305, 298, 277, 420, 290, 338,
	304, 339, 291, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 238,
	366, 272, 313, 249, 251, 267, 274, 276, 278, 279,
	322, 323, 335, 354, 367, 368, 369, 271, 259, 349,
	260, 288, 261, 239, 264, 263, 265, 356, 266, 241,
	336, 373, 0, 284, 345, 309, 242, 308, 337, 372,
	371, 250, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 282, 235, 236, 441, 268, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 240, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 285, 0, 257, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 281, 287, 425, 289,
	256, 333, 283, 392, 296, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 292, 293, 357, 297, 303, 346,
	391, 331, 351, 254, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 234, 262,
	0, 237, 0, 301, 0, 342, 280, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 330, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 275, 781, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	788, 789, 0, 0, 0, 0, 252, 186, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 364, 776, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 0, 377,
	405, 269, 396, 767, 388, 247, 766, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 420,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 779,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 282, 235, 236, 441, 268, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 780, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 783, 0, 0,
	318, 319, 320, 321, 285, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 790, 777, 786, 778, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 0, 342, 280, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 330,
	0, 0, 230, 231, 232, 233, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 275, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 252, 186,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 1999, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 364, 380, 253, 355, 393,
	258, 362, 248, 329, 352, 0, 0, 245, 378, 361,
	311, 294, 295, 244, 0, 347, 273, 286, 270, 327,
	0, 377, 405, 269, 396, 0, 388, 247, 0, 387,
	326, 374, 379, 312, 306, 246, 376, 310, 305, 298,
	277, 420, 290, 338, 304, 339, 291, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 390, 0, 0, 0, 2003, 2001, 0,
	363, 0, 2002, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 238, 366, 272, 313, 249, 251, 267,
	274, 276, 278, 279, 322, 323, 335, 354, 367, 368,
	369, 271, 259, 349, 260, 288, 261, 239, 264, 263,
	265, 356, 266, 241, 336, 373, 0, 284, 345, 309,
	242, 308, 337, 372, 371, 250, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 282, 235, 236, 441, 268,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 0, 0, 0, 0, 240,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 285, 0, 257, 413,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	281, 287, 425, 289, 256, 333, 283, 392, 296, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 292, 293,
	357, 297, 303, 346, 391, 331, 351, 254, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 234, 262, 0, 237, 0, 301, 0, 342,
	280, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 163, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 112, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 1753, 0,
	185, 0, 0, 0, 0, 0, 0, 252, 186, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 364, 380, 253, 355, 393, 258,
	362, 248, 329, 352, 0, 0, 245, 378, 361, 311,
	294, 295, 244, 0, 347, 273, 286, 270, 327, 0,
	377, 405, 269, 396, 0, 388, 247, 0, 387, 326,
	374, 379, 312, 306, 246, 376, 310, 305, 298, 277,
	420, 290, 338, 304, 339, 291, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 238, 366, 272, 313, 249, 251, 267, 274,
	276, 278, 279, 322, 323, 335, 354, 367, 368, 369,
	271, 259, 349, 260, 288, 261, 239, 264, 263, 265,
	356, 266, 241, 336, 373, 0, 284, 345, 309, 242,
	308, 337, 372, 371, 250, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 282, 235, 236, 441, 268, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 240, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 285, 0, 257, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 281,
	287, 425, 289, 256, 333, 283, 392, 296, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 292, 293, 357,
	297, 303, 346, 391, 331, 351, 254, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 234, 262, 0, 237, 0, 301, 132, 342, 280,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 0, 0, 230, 231, 232, 233, 163, 0, 0,
	398, 399, 400, 421, 384, 0, 438, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 112, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 1744, 0, 185,
	0, 0, 0, 0, 0, 0, 252, 186, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 364, 380, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 0, 377,
	405, 269, 396, 0, 388, 247, 0, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 420,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 282, 235, 236, 441, 268, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 285, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 292, 293, 357, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 132, 342, 280, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	0, 0, 230, 231, 232, 233, 163, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 112, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1647, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 252, 186, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 364, 380, 253, 355, 393, 258, 362, 248,
	329, 352, 0, 0, 245, 378, 361, 311, 294, 295,
	244, 0, 347, 273, 286, 270, 327, 0, 377, 405,
	269, 396, 0, 388, 247, 0, 387, 326, 374, 379,
	312, 306, 246, 376, 310, 305, 298, 277, 420, 290,
	338, 304, 339, 291, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	238, 366, 272, 313, 249, 251, 267, 274, 276, 278,
	279, 322, 323, 335, 354, 367, 368, 369, 271, 259,
	349, 260, 288, 261, 239, 264, 263, 265, 356, 266,
	241, 336, 373, 0, 284, 345, 309, 242, 308, 337,
	372, 371, 250, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 282, 235, 236, 441, 268, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 240, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 285, 0, 257, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 281, 287, 425,
	289, 256, 333, 283, 392, 296, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 292, 293, 357, 297, 303,
	346, 391, 331, 351, 254, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 234,
	262, 0, 237, 0, 301, 132, 342, 280, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 330, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 275, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 788, 789, 0, 0, 0, 0, 252, 186, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 364, 380, 253, 355, 393, 258,
	362, 248, 329, 352, 0, 0, 245, 378, 361, 311,
	294, 295, 244, 0, 347, 273, 286, 270, 327, 0,
	377, 405, 269, 396, 767, 388, 247, 766, 387, 326,
	374, 379, 312, 306, 246, 376, 310, 305, 298, 277,
	420, 290, 338, 304, 339, 291, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 238, 366, 272, 313, 249, 251, 267, 274,
	276, 278, 279, 322, 323, 335, 354, 367, 368, 369,
	271, 259, 349, 260, 288, 261, 239, 264, 263, 265,
	356, 266, 241, 336, 373, 0, 284, 345, 309, 242,
	308, 337, 372, 371, 250, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 282, 235, 236, 441, 268, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 240, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 285, 0, 257, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 281,
	287, 425, 289, 256, 333, 283, 392, 296, 0, 418,
	0, 419, 0, 0, 0, 0, 790, 1666, 786, 1667,
	297, 303, 346, 391, 331, 351, 254, 382, 358, 787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 234, 262, 0, 237, 0, 301, 0, 342, 280,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	330, 0, 0, 230, 231, 232, 233, 0, 0, 2398,
	398, 399, 400, 421, 384, 0, 438, 275, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 432, 0, 0, 0, 0,
	0, 359, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 252,
	186, 433, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 364, 380, 253, 355,
	393, 258, 362, 248, 329, 352, 0, 0, 245, 378,
	361, 311, 294, 295, 244, 0, 347, 273, 286, 270,
	327, 0, 377, 405, 269, 396, 0, 388, 247, 0,
	387, 326, 374, 379, 312, 306, 246, 376, 310, 305,
	298, 277, 420, 290, 338, 304, 339, 291, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 2401, 0, 0, 2400, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 238, 366, 272, 313, 249, 251,
	267, 274, 276, 278, 279, 322, 323, 335, 354, 367,
	368, 369, 271, 259, 349, 260, 288, 261, 239, 264,
	263, 265, 356, 266, 241, 336, 373, 0, 284, 345,
	309, 242, 308, 337, 372, 371, 250, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 282, 235, 236, 441,
	268, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	240, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 285, 0, 257,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 281, 287, 425, 289, 256, 333, 283, 392, 296,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 292,
	293, 357, 297, 303, 346, 391, 331, 351, 254, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 234, 262, 0, 237, 0, 301, 0,
	342, 280, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 330, 0, 0, 230, 231, 232, 233, 0,
	0, 0, 398, 399, 400, 421, 384, 0, 438, 275,
	1214, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 1212, 0, 0,
	0, 252, 186, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1210, 0, 0, 0, 0, 0, 0, 243, 364, 380,
	253, 355, 393, 258, 362, 248, 329, 352, 0, 0,
	245, 378, 361, 311, 294, 295, 244, 0, 347, 273,
	286, 270, 327, 0, 377, 405, 269, 396, 0, 388,
	247, 0, 387, 326, 374, 379, 312, 306, 246, 376,
	310, 305, 298, 277, 420, 290, 338, 304, 339, 291,
	316, 315, 317, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 299, 0, 0, 0,
	406, 0, 350, 332, 0, 0, 0, 348, 302, 375,
	340, 381, 365, 389, 344, 341, 238, 366, 272, 313,
	249, 251, 267, 274, 276, 278, 279, 322, 323, 335,
	354, 367, 368, 369, 271, 259, 349, 260, 288, 261,
	239, 264, 263, 265, 356, 266, 241, 336, 373, 0,
	284, 345, 309, 242, 308, 337, 372, 371, 250, 397,
	403, 404, 0, 0, 409, 0, 0, 0, 417, 422,
	423, 424, 426, 427, 428, 429, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 402, 282, 235,
	236, 441, 268, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 401, 0, 0, 0,
	430, 440, 0, 0, 0, 0, 0, 439, 334, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 383, 395, 412, 415, 0, 0,
	0, 0, 240, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 410, 0, 0, 318, 319, 320, 321, 285,
	0, 257, 413, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 281, 287, 425, 289, 256, 333, 283,
	392, 296, 0, 418, 0, 419, 0, 0, 0, 0,
	325, 292, 293, 357, 297, 303, 346, 391, 331, 351,
	254, 382, 358, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 234, 262, 0, 237, 0,
	301, 0, 342, 280, 0, 0, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 330, 0, 0, 230, 231, 232,
	233, 0, 0, 0, 398, 399, 400, 421, 384, 0,
	438, 275, 1208, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 0, 0, 0, 359, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 1212,
	0, 0, 0, 252, 186, 433, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1210, 0, 0, 0, 0, 0, 0, 243,
	364, 380, 253, 355, 393, 258, 362, 248, 329, 352,
	0, 0, 245, 378, 361, 311, 294, 295, 244, 0,
	347, 273, 286, 270, 327, 0, 377, 405, 269, 396,
	0, 388, 247, 0, 387, 326, 374, 379, 312, 306,
	246, 376, 310, 305, 298, 277, 420, 290, 338, 304,
	339, 291, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 406, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 238, 366,
	272, 313, 249, 251, 267, 274, 276, 278, 279, 322,
	323, 335, 354, 367, 368, 369, 271, 259, 349, 260,
	288, 261, 239, 264, 263, 265, 356, 266, 241, 336,
	373, 0, 284, 345, 309, 242, 308, 337, 372, 371,
	250, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	282, 235, 236, 441, 268, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 240, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 285, 0, 257, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 281, 287, 425, 289, 256,
	333, 283, 392, 296, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 292, 293, 357, 297, 303, 346, 391,
	331, 351, 254, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 370, 0, 234, 262, 0,
	237, 0, 301, 0, 342, 280, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 330, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 398, 399, 400, 421,
	384, 0, 438, 275, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3174, 0, 185, 613,
	0, 0, 0, 0, 0, 252, 186, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 364, 380, 253, 355, 393, 258, 362, 248,
	329, 352, 0, 0, 245, 378, 361, 311, 294, 295,
	244, 0, 347, 273, 286, 270, 327, 0, 377, 405,
	269, 396, 0, 388, 247, 0, 387, 326, 374, 379,
	312, 306, 246, 376, 310, 305, 298, 277, 420, 290,
	338, 304, 339, 291, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	238, 366, 272, 313, 249, 251, 267, 274, 276, 278,
	279, 322, 323, 335, 354, 367, 368, 369, 271, 259,
	349, 260, 288, 261, 239, 264, 263, 265, 356, 266,
	241, 336, 373, 0, 284, 345, 309, 242, 308, 337,
	372, 371, 250, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 282, 235, 236, 441, 268, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 240, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 285, 0, 257, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 281, 287, 425,
	289, 256, 333, 283, 392, 296, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 292, 293, 357, 297, 303,
	346, 391, 331, 351, 254, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 234,
	262, 0, 237, 0, 301, 0, 342, 280, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 330, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 275, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 1212, 0, 0, 0, 252, 186, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1210, 0, 0, 0,
	0, 0, 0, 243, 364, 380, 253, 355, 393, 258,
	362, 248, 329, 352, 0, 0, 245, 378, 361, 311,
	294, 295, 244, 0, 347, 273, 286, 270, 327, 0,
	377, 405, 269, 396, 0, 388, 247, 0, 387, 326,
	374, 379, 312, 306, 246, 376, 310, 305, 298, 277,
	420, 290, 338, 304, 339, 291, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 238, 366, 272, 313, 249, 251, 267, 274,
	276, 278, 279, 322, 323, 335, 354, 367, 368, 369,
	271, 259, 349, 260, 288, 261, 239, 264, 263, 265,
	356, 266, 241, 336, 373, 0, 284, 345, 309, 242,
	308, 337, 372, 371, 250, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 282, 235, 236, 441, 268, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 240, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 285, 0, 257, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 281,
	287, 425, 289, 256, 333, 283, 392, 296, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 292, 293, 357,
	297, 303, 346, 391, 331, 351, 254, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 234, 262, 0, 237, 0, 301, 0, 342, 280,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	330, 0, 0, 230, 231, 232, 233, 0, 0, 0,
	398, 399, 400, 421, 384, 0, 438, 275, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 432, 0, 0, 0, 0,
	0, 359, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 1212, 0, 0, 0, 252,
	186, 433, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2903, 0,
	0, 0, 0, 0, 0, 243, 364, 380, 253, 355,
	393, 258, 362, 248, 329, 352, 0, 0, 245, 378,
	361, 311, 294, 295, 244, 0, 347, 273, 286, 270,
	327, 0, 377, 405, 269, 396, 0, 388, 247, 0,
	387, 326, 374, 379, 312, 306, 246, 376, 310, 305,
	298, 277, 420, 290, 338, 304, 339, 291, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 344, 341, 238, 366, 272, 313, 249, 251,
	267, 274, 276, 278, 279, 322, 323, 335, 354, 367,
	368, 369, 271, 259, 349, 260, 288, 261, 239, 264,
	263, 265, 356, 266, 241, 336, 373, 0, 284, 345,
	309, 242, 308, 337, 372, 371, 250, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 282, 235, 236, 441,
	268, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	240, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 285, 0, 257,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 281, 287, 425, 289, 256, 333, 283, 392, 296,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 292,
	293, 357, 297, 303, 346, 391, 331, 351, 254, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 234, 262, 0, 237, 0, 301, 0,
	342, 280, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 0, 0, 230, 231, 232, 233, 330,
	0, 0, 398, 399, 400, 421, 384, 0, 438, 0,
	0, 2068, 0, 0, 0, 0, 275, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 2070, 0, 0, 0, 252, 186,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 364, 380, 253, 355, 393,
	258, 362, 248, 329, 352, 0, 0, 245, 378, 361,
	311, 294, 295, 244, 0, 347, 273, 286, 270, 327,
	0, 377, 405, 269, 396, 0, 388, 247, 0, 387,
	326, 374, 379, 312, 306, 246, 376, 310, 305, 298,
	277, 420, 290, 338, 304, 339, 291, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 238, 366, 272, 313, 249, 251, 267,
	274, 276, 278, 279, 322, 323, 335, 354, 367, 368,
	369, 271, 259, 349, 260, 288, 261, 239, 264, 263,
	265, 356, 266, 241, 336, 373, 0, 284, 345, 309,
	242, 308, 337, 372, 371, 250, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 282, 235, 236, 441, 268,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 0, 0, 0, 0, 240,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 285, 0, 257, 413,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	281, 287, 425, 289, 256, 333, 283, 392, 296, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 292, 293,
	357, 297, 303, 346, 391, 331, 351, 254, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 234, 262, 0, 237, 0, 301, 0, 342,
	280, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 330, 0, 0, 230, 231, 232, 233, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 275, 2089,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 1212, 0, 0, 0,
	252, 186, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 364, 380, 253,
	355, 393, 258, 362, 248, 329, 352, 0, 0, 245,
	378, 361, 311, 294, 295, 244, 0, 347, 273, 286,
	270, 327, 0, 377, 405, 269, 396, 0, 388, 247,
	0, 387, 326, 374, 379, 312, 306, 246, 376, 310,
	305, 298, 277, 420, 290, 338, 304, 339, 291, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 238, 366, 272, 313, 249,
	251, 267, 274, 276, 278, 279, 322, 323, 335, 354,
	367, 368, 369, 271, 259, 349, 260, 288, 261, 239,
	264, 263, 265, 356, 266, 241, 336, 373, 0, 284,
	345, 309, 242, 308, 337, 372, 371, 250, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 282, 235, 236,
	441, 268, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 240, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 285, 0,
	257, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 281, 287, 425, 289, 256, 333, 283, 392,
	296, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	292, 293, 357, 297, 303, 346, 391, 331, 351, 254,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 234, 262, 0, 237, 0, 301,
	0, 342, 280, 0, 0, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 330, 0, 0, 230, 231, 232, 233,
	0, 0, 0, 398, 399, 400, 421, 384, 0, 438,
	275, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3263, 0, 185, 0, 0, 0, 0,
	0, 0, 252, 186, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 364,
	380, 253, 355, 393, 258, 362, 248, 329, 352, 0,
	0, 245, 378, 361, 311, 294, 295, 244, 0, 347,
	273, 286, 270, 327, 0, 377, 405, 269, 396, 0,
	388, 247, 0, 387, 326, 374, 379, 312, 306, 246,
	376, 310, 305, 298, 277, 420, 290, 338, 304, 339,
	291, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 238, 366, 272,
	313, 249, 251, 267, 274, 276, 278, 279, 322, 323,
	335, 354, 367, 368, 369, 271, 259, 349, 260, 288,
	261, 239, 264, 263, 265, 356, 266, 241, 336, 373,
	0, 284, 345, 309, 242, 308, 337, 372, 371, 250,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 282,
	235, 236, 441, 268, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 240, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	285, 0, 257, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 281, 287, 425, 289, 256, 333,
	283, 392, 296, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 292, 293, 357, 297, 303, 346, 391, 331,
	351, 254, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 234, 262, 0, 237,
	0, 301, 0, 342, 280, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 330, 0, 0, 230, 231,
	232, 233, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 275, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 613, 0,
	0, 0, 0, 0, 252, 186, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 364, 380, 253, 355, 393, 258, 362, 248, 329,
	352, 0, 0, 245, 378, 361, 311, 294, 295, 244,
	0, 347, 273, 286, 270, 327, 0, 377, 405, 269,
	396, 0, 388, 247, 0, 387, 326, 374, 379, 312,
	306, 246, 376, 310, 305, 298, 277, 420, 290, 338,
	304, 339, 291, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 238,
	366, 272, 313, 249, 251, 267, 274, 276, 278, 279,
	322, 323, 335, 354, 367, 368, 369, 271, 259, 349,
	260, 288, 261, 239, 264, 263, 265, 356, 266, 241,
	336, 373, 0, 284, 345, 309, 242, 308, 337, 372,
	371, 250, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 282, 235, 236, 441, 268, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 240, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 285, 0, 257, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 281, 287, 425, 289,
	256, 333, 283, 392, 296, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 292, 293, 357, 297, 303, 346,
	391, 331, 351, 254, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 234, 262,
	0, 237, 0, 301, 0, 342, 280, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 330, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 275, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3189, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 252, 186, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 364, 380, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 0, 377,
	405, 269, 396, 0, 388, 247, 0, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 420,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 282, 235, 236, 441, 268, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 285, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 292, 293, 357, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 0, 342, 280, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 330,
	0, 0, 230, 231, 232, 233, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 275, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 252, 186,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 364, 380, 253, 355, 393,
	258, 362, 248, 329, 352, 0, 0, 245, 378, 361,
	311, 294, 295, 244, 0, 347, 273, 286, 270, 327,
	0, 377, 405, 269, 396, 0, 388, 247, 0, 387,
	326, 374, 379, 312, 306, 246, 376, 310, 305, 298,
	277, 420, 290, 338, 304, 339, 291, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 3119, 0, 0,
	363, 0, 0, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 238, 366, 272, 313, 249, 251, 267,
	274, 276, 278, 279, 322, 323, 335, 354, 367, 368,
	369, 271, 259, 349, 260, 288, 261, 239, 264, 263,
	265, 356, 266, 241, 336, 373, 0, 284, 345, 309,
	242, 308, 337, 372, 371, 250, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 282, 235, 236, 441, 268,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 0, 0, 0, 0, 240,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 285, 0, 257, 413,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	281, 287, 425, 289, 256, 333, 283, 392, 296, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 292, 293,
	357, 297, 303, 346, 391, 331, 351, 254, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 234, 262, 0, 237, 0, 301, 0, 342,
	280, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 330, 0, 0, 230, 231, 232, 233, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 275, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2899, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	252, 186, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 364, 380, 253,
	355, 393, 258, 362, 248, 329, 352, 0, 0, 245,
	378, 361, 311, 294, 295, 244, 0, 347, 273, 286,
	270, 327, 0, 377, 405, 269, 396, 0, 388, 247,
	0, 387, 326, 374, 379, 312, 306, 246, 376, 310,
	305, 298, 277, 420, 290, 338, 304, 339, 291, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 238, 366, 272, 313, 249,
	251, 267, 274, 276, 278, 279, 322, 323, 335, 354,
	367, 368, 369, 271, 259, 349, 260, 288, 261, 239,
	264, 263, 265, 356, 266, 241, 336, 373, 0, 284,
	345, 309, 242, 308, 337, 372, 371, 250, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 282, 235, 236,
	441, 268, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 240, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 285, 0,
	257, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 281, 287, 425, 289, 256, 333, 283, 392,
	296, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	292, 293, 357, 297, 303, 346, 391, 331, 351, 254,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 234, 262, 0, 237, 0, 301,
	0, 342, 280, 0, 0, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 330, 0, 0, 230, 231, 232, 233,
	0, 0, 0, 398, 399, 400, 421, 384, 0, 438,
	275, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 2764, 0,
	0, 0, 252, 186, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 364,
	380, 253, 355, 393, 258, 362, 248, 329, 352, 0,
	0, 245, 378, 361, 311, 294, 295, 244, 0, 347,
	273, 286, 270, 327, 0, 377, 405, 269, 396, 0,
	388, 247, 0, 387, 326, 374, 379, 312, 306, 246,
	376, 310, 305, 298, 277, 420, 290, 338, 304, 339,
	291, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 238, 366, 272,
	313, 249, 251, 267, 274, 276, 278, 279, 322, 323,
	335, 354, 367, 368, 369, 271, 259, 349, 260, 288,
	261, 239, 264, 263, 265, 356, 266, 241, 336, 373,
	0, 284, 345, 309, 242, 308, 337, 372, 371, 250,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 282,
	235, 236, 441, 268, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 240, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	285, 0, 257, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 281, 287, 425, 289, 256, 333,
	283, 392, 296, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 292, 293, 357, 297, 303, 346, 391, 331,
	351, 254, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 234, 262, 0, 237,
	0, 301, 0, 342, 280, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 330, 0, 0, 230, 231,
	232, 233, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 275, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 252, 186, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 364, 380, 253, 355, 393, 258, 362, 248, 329,
	352, 0, 0, 245, 378, 361, 311, 294, 295, 244,
	0, 347, 273, 286, 270, 327, 0, 377, 405, 269,
	396, 0, 388, 247, 0, 387, 326, 374, 379, 312,
	306, 246, 376, 310, 305, 298, 277, 420, 290, 338,
	304, 339, 291, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 2973, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 238,
	366, 272, 313, 249, 251, 267, 274, 276, 278, 279,
	322, 323, 335, 354, 367, 368, 369, 271, 259, 349,
	260, 288, 261, 239, 264, 263, 265, 356, 266, 241,
	336, 373, 0, 284, 345, 309, 242, 308, 337, 372,
	371, 250, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 282, 235, 236, 441, 268, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 240, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 285, 0, 257, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 281, 287, 425, 289,
	256, 333, 283, 392, 296, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 292, 293, 357, 297, 303, 346,
	391, 331, 351, 254, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 234, 262,
	0, 237, 0, 301, 0, 342, 280, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 330, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 275, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 252, 186, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 364, 380, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 0, 377,
	405, 269, 396, 0, 388, 247, 0, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 420,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 282, 235, 236, 441, 268, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 285, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 292, 293, 357, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 0, 342, 280, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 330,
	0, 0, 230, 231, 232, 233, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 275, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1647, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 252, 186,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 364, 380, 253, 355, 393,
	258, 362, 248, 329, 352, 0, 0, 245, 378, 361,
	311, 294, 295, 244, 0, 347, 273, 286, 270, 327,
	0, 377, 405, 269, 396, 0, 388, 247, 0, 387,
	326, 374, 379, 312, 306, 246, 376, 310, 305, 298,
	277, 420, 290, 338, 304, 339, 291, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 238, 366, 272, 313, 249, 251, 267,
	274, 276, 278, 279, 322, 323, 335, 354, 367, 368,
	369, 271, 259, 349, 260, 288, 261, 239, 264, 263,
	265, 356, 266, 241, 336, 373, 0, 284, 345, 309,
	242, 308, 337, 372, 371, 250, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 282, 235, 236, 441, 268,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 0, 0, 0, 0, 240,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 285, 0, 257, 413,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	281, 287, 425, 289, 256, 333, 283, 392, 296, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 292, 293,
	357, 297, 303, 346, 391, 331, 351, 254, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 234, 262, 0, 237, 0, 301, 0, 342,
	280, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 330, 0, 0, 230, 231, 232, 233, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 275, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 2274, 0, 0, 0,
	252, 186, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 364, 380, 253,
	355, 393, 258, 362, 248, 329, 352, 0, 0, 245,
	378, 361, 311, 294, 295, 244, 0, 347, 273, 286,
	270, 327, 0, 377, 405, 269, 396, 0, 388, 247,
	0, 387, 326, 374, 379, 312, 306, 246, 376, 310,
	305, 298, 277, 420, 290, 338, 304, 339, 291, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 238, 366, 272, 313, 249,
	251, 267, 274, 276, 278, 279, 322, 323, 335, 354,
	367, 368, 369, 271, 259, 349, 260, 288, 261, 239,
	264, 263, 265, 356, 266, 241, 336, 373, 0, 284,
	345, 309, 242, 308, 337, 372, 371, 250, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 282, 235, 236,
	441, 268, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 240, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 285, 0,
	257, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 281, 287, 425, 289, 256, 333, 283, 392,
	296, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	292, 293, 357, 297, 303, 346, 391, 331, 351, 254,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 234, 262, 0, 237, 0, 301,
	0, 342, 280, 0, 0, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 330, 0, 0, 230, 231, 232, 233,
	0, 0, 0, 398, 399, 400, 421, 384, 0, 438,
	275, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 252, 186, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 364,
	380, 253, 355, 393, 258, 362, 248, 329, 352, 0,
	0, 245, 378, 361, 311, 294, 295, 244, 0, 347,
	273, 286, 270, 327, 0, 377, 405, 269, 396, 0,
	388, 247, 0, 387, 326, 374, 379, 312, 306, 246,
	376, 310, 305, 298, 277, 420, 290, 338, 304, 339,
	291, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 238, 366, 272,
	313, 249, 251, 267, 274, 276, 278, 279, 322, 323,
	335, 354, 367, 368, 369, 271, 259, 349, 260, 288,
	261, 239, 264, 263, 265, 356, 266, 241, 336, 373,
	0, 284, 345, 309, 242, 308, 337, 372, 371, 250,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 282,
	235, 236, 441, 268, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 240, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	285, 0, 257, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 281, 287, 425, 289, 256, 333,
	283, 392, 296, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 292, 293, 357, 297, 303, 346, 391, 331,
	351, 254, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 234, 262, 0, 237,
	0, 301, 0, 342, 280, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 330, 0, 0, 230, 231,
	232, 233, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 275, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	2557, 0, 0, 0, 252, 186, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 364, 380, 253, 355, 393, 258, 362, 248, 329,
	352, 0, 0, 245, 378, 361, 311, 294, 295, 244,
	0, 347, 273, 286, 270, 327, 0, 377, 405, 269,
	396, 0, 388, 247, 0, 387, 326, 374, 379, 312,
	306, 246, 376, 310, 305, 298, 277, 420, 290, 338,
	304, 339, 291, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 238,
	366, 272, 313, 249, 251, 267, 274, 276, 278, 279,
	322, 323, 335, 354, 367, 368, 369, 271, 259, 349,
	260, 288, 261, 239, 264, 263, 265, 356, 266, 241,
	336, 373, 0, 284, 345, 309, 242, 308, 337, 372,
	371, 250, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 282, 235, 236, 441, 268, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 240, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 285, 0, 257, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 281, 287, 425, 289,
	256, 333, 283, 392, 296, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 292, 293, 357, 297, 303, 346,
	391, 331, 351, 254, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 234, 262,
	0, 237, 0, 301, 0, 342, 280, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 330, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 275, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 252, 186, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 364, 380, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 0, 377,
	405, 269, 396, 0, 388, 247, 0, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 420,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 282, 235, 236, 441, 268, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 285, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 292, 293, 357, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 0, 342, 280, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 330,
	0, 0, 230, 231, 232, 233, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 275, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 1212, 0, 0, 0, 252, 186,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 364, 380, 253, 355, 393,
	258, 362, 248, 329, 352, 0, 0, 245, 378, 361,
	311, 294, 295, 244, 0, 347, 273, 286, 270, 327,
	0, 377, 405, 269, 396, 0, 388, 247, 0, 387,
	326, 374, 379, 312, 306, 246, 376, 310, 305, 298,
	277, 420, 290, 338, 304, 339, 291, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 238, 366, 272, 313, 249, 251, 267,
	274, 276, 278, 279, 322, 323, 335, 354, 367, 368,
	369, 271, 259, 349, 260, 288, 261, 239, 264, 263,
	265, 356, 266, 241, 336, 373, 0, 284, 345, 309,
	242, 308, 337, 372, 371, 250, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 282, 235, 236, 441, 268,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 0, 0, 0, 0, 240,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 285, 0, 257, 413,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	281, 287, 425, 289, 256, 333, 283, 392, 296, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 292, 293,
	357, 297, 303, 346, 391, 331, 351, 254, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 234, 262, 0, 237, 0, 301, 0, 342,
	280, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 330, 0, 0, 230, 231, 232, 233, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 275, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 2070, 0, 0, 0,
	252, 186, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 364, 380, 253,
	355, 393, 258, 362, 248, 329, 352, 0, 0, 245,
	378, 361, 311, 294, 295, 244, 0, 347, 273, 286,
	270, 327, 0, 377, 405, 269, 396, 0, 388, 247,
	0, 387, 326, 374, 379, 312, 306, 246, 376, 310,
	305, 298, 277, 420, 290, 338, 304, 339, 291, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 238, 366, 272, 313, 249,
	251, 267, 274, 276, 278, 279, 322, 323, 335, 354,
	367, 368, 369, 271, 259, 349, 260, 288, 261, 239,
	264, 263, 265, 356, 266, 241, 336, 373, 0, 284,
	345, 309, 242, 308, 337, 372, 371, 250, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 282, 235, 236,
	441, 268, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 240, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 285, 0,
	257, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 281, 287, 425, 289, 256, 333, 283, 392,
	296, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	292, 293, 357, 297, 303, 346, 391, 331, 351, 254,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 234, 262, 0, 237, 0, 301,
	0, 342, 280, 0, 0, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 330, 0, 0, 230, 231, 232, 233,
	0, 0, 0, 398, 399, 400, 421, 384, 0, 438,
	275, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 252, 186, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 364,
	380, 253, 355, 393, 258, 362, 248, 329, 352, 0,
	0, 245, 378, 361, 311, 294, 295, 244, 0, 347,
	273, 286, 270, 327, 0, 377, 405, 269, 396, 0,
	388, 247, 0, 387, 326, 374, 379, 312, 306, 246,
	376, 310, 305, 298, 277, 420, 290, 338, 304, 339,
	291, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 238, 366, 272,
	313, 249, 251, 267, 274, 276, 278, 279, 322, 323,
	335, 354, 367, 368, 369, 271, 259, 349, 260, 288,
	261, 239, 264, 263, 265, 356, 266, 241, 336, 373,
	0, 284, 345, 309, 242, 308, 337, 372, 371, 250,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 282,
	235, 236, 441, 268, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 240, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	285, 0, 257, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 281, 287, 425, 289, 256, 333,
	283, 392, 296, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 292, 293, 357, 297, 303, 346, 391, 331,
	351, 254, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 234, 262, 0, 237,
	0, 301, 0, 342, 280, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 330, 0, 0, 230, 231,
	232, 233, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 275, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 252, 186, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 364, 380, 253, 355, 393, 258, 362, 248, 329,
	352, 0, 0, 245, 378, 361, 311, 294, 295, 244,
	0, 347, 273, 286, 270, 327, 0, 377, 405, 269,
	396, 0, 388, 247, 0, 387, 326, 374, 379, 312,
	306, 246, 376, 310, 305, 298, 277, 420, 290, 338,
	304, 339, 291, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 238,
	366, 272, 313, 249, 251, 267, 274, 276, 278, 279,
	322, 323, 335, 354, 367, 368, 369, 271, 259, 349,
	260, 288, 261, 239, 264, 263, 265, 356, 266, 241,
	336, 373, 0, 284, 345, 309, 242, 308, 337, 372,
	371, 250, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 282, 235, 236, 441, 268, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 240, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 285, 0, 257, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 281, 287, 425, 289,
	256, 333, 283, 392, 296, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 292, 293, 357, 297, 303, 346,
	391, 331, 351, 254, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 234, 262,
	0, 237, 0, 301, 0, 342, 280, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 330, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 275, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 2105, 0, 0, 0, 252, 186, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 364, 380, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 0, 377,
	405, 269, 396, 0, 388, 247, 0, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 420,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 282, 235, 236, 441, 268, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 285, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 292, 293, 357, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 0, 342, 280, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	1943, 0, 230, 231, 232, 233, 330, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 252, 186, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 364, 380, 253, 355, 393, 258, 362, 248,
	329, 352, 0, 0, 245, 378, 361, 311, 294, 295,
	244, 0, 347, 273, 286, 270, 327, 0, 377, 405,
	269, 396, 0, 388, 247, 0, 387, 326, 374, 379,
	312, 306, 246, 376, 310, 305, 298, 277, 420, 290,
	338, 304, 339, 291, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 344, 341,
	238, 366, 272, 313, 249, 251, 267, 274, 276, 278,
	279, 322, 323, 335, 354, 367, 368, 369, 271, 259,
	349, 260, 288, 261, 239, 264, 263, 265, 356, 266,
	241, 336, 373, 0, 284, 345, 309, 242, 308, 337,
	372, 371, 250, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 282, 235, 236, 441, 268, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 240, 414, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 285, 0, 257, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 281, 287, 425,
	289, 256, 333, 283, 392, 296, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 292, 293, 357, 297, 303,
	346, 391, 331, 351, 254, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 234,
	262, 0, 237, 0, 301, 0, 342, 280, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 330, 0,
	0, 230, 231, 232, 233, 0, 1634, 0, 398, 399,
	400, 421, 384, 0, 438, 275, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 252, 186, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 364, 380, 253, 355, 393, 258,
	362, 248, 329, 352, 0, 0, 245, 378, 361, 311,
	294, 295, 244, 0, 347, 273, 286, 270, 327, 0,
	377, 405, 269, 396, 0, 388, 247, 0, 387, 326,
	374, 379, 312, 306, 246, 376, 310, 305, 298, 277,
	420, 290, 338, 304, 339, 291, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 238, 366, 272, 313, 249, 251, 267, 274,
	276, 278, 279, 322, 323, 335, 354, 367, 368, 369,
	271, 259, 349, 260, 288, 261, 239, 264, 263, 265,
	356, 266, 241, 336, 373, 0, 284, 345, 309, 242,
	308, 337, 372, 371, 250, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 282, 235, 236, 441, 268, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 240, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 285, 0, 257, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 281,
	287, 425, 289, 256, 333, 283, 392, 296, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 292, 293, 357,
	297, 303, 346, 391, 331, 351, 254, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 234, 262, 0, 237, 0, 301, 0, 342, 280,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	330, 0, 0, 230, 231, 232, 233, 0, 0, 0,
	398, 399, 400, 421, 384, 0, 438, 275, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 431, 0, 432, 0, 0, 0, 0,
	0, 359, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 1212, 0, 0, 0, 252,
	186, 433, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 364, 380, 253, 355,
	393, 258, 362, 248, 329, 352, 0, 0, 245, 378,
	361, 311, 294, 295, 244, 0, 347, 273, 286, 270,
	327, 0, 377, 405, 269, 396, 0, 388, 247, 0,
	387, 326, 374, 379, 312, 306, 246, 376, 310, 305,
	298, 277, 420, 290, 338, 304, 339, 291, 316, 315,
	317, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 299, 0, 0, 0, 406, 0,
	350, 332, 0, 0, 0, 348, 302, 375, 340, 381,
	365, 389, 1547, 341, 238, 366, 272, 313, 249, 251,
	267, 274, 276, 278, 279, 322, 323, 335, 354, 367,
	368, 369, 271, 259, 349, 260, 288, 261, 239, 264,
	263, 265, 356, 266, 241, 336, 373, 0, 284, 345,
	309, 242, 308, 337, 372, 371, 250, 397, 403, 404,
	0, 0, 409, 0, 0, 0, 417, 422, 423, 424,
	426, 427, 428, 429, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 402, 282, 235, 236, 441,
	268, 328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 324, 401, 0, 0, 0, 430, 440,
	0, 0, 0, 0, 0, 439, 334, 0, 353, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 360, 383, 395, 412, 415, 0, 0, 0, 0,
	240, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 394, 0, 0, 0, 0, 0,
	410, 0, 0, 318, 319, 320, 321, 285, 0, 257,
	413, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 407,
	408, 281, 287, 425, 289, 256, 333, 283, 392, 296,
	0, 418, 0, 419, 0, 0, 0, 0, 325, 292,
	293, 357, 297, 303, 346, 391, 331, 351, 254, 382,
	358, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 0, 234, 262, 0, 237, 0, 301, 0,
	342, 280, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 330, 0, 0, 230, 231, 232, 233, 0,
	0, 0, 398, 399, 400, 421, 384, 0, 438, 275,
	0, 0, 300, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 431, 0, 432, 0, 0,
	0, 0, 0, 359, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 252, 186, 433, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 364, 380,
	253, 355, 393, 258, 362, 248, 329, 352, 0, 0,
	245, 378, 361, 311, 294, 295, 244, 0, 347, 273,
	286, 270, 327, 0, 377, 405, 269, 396, 0, 388,
	247, 0, 387, 326, 374, 379, 312, 306, 246, 376,
	310, 305, 298, 277, 420, 290, 338, 304, 339, 291,
	316, 315, 317, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 0, 0, 1238,
	0, 0, 0, 363, 0, 0, 299, 0, 0, 0,
	406, 0, 350, 332, 0, 0, 0, 348, 302, 375,
	340, 381, 365, 389, 344, 341, 238, 366, 272, 313,
	249, 251, 267, 274, 276, 278, 279, 322, 323, 335,
	354, 367, 368, 369, 271, 259, 349, 260, 288, 261,
	239, 264, 263, 265, 356, 266, 241, 336, 373, 0,
	284, 345, 309, 242, 308, 337, 372, 371, 250, 397,
	403, 404, 0, 0, 409, 0, 0, 0, 417, 422,
	423, 424, 426, 427, 428, 429, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 402, 282, 235,
	236, 441, 268, 328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 324, 401, 0, 0, 0,
	430, 440, 0, 0, 0, 0, 0, 439, 334, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 360, 383, 395, 412, 415, 0, 0,
	0, 0, 240, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 410, 0, 0, 318, 319, 320, 321, 285,
	0, 257, 413, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 407, 408, 281, 287, 425, 289, 256, 333, 283,
	392, 296, 0, 418, 0, 419, 0, 0, 0, 0,
	325, 292, 293, 357, 297, 303, 346, 391, 331, 351,
	254, 382, 358, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 370, 0, 234, 262, 0, 237, 0,
	301, 0, 342, 280, 0, 0, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 330, 0, 0, 230, 231, 232,
	233, 0, 0, 0, 398, 399, 400, 421, 384, 0,
	438, 275, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 431, 0, 432,
	0, 0, 0, 0, 0, 359, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 252, 186, 433, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	364, 380, 253, 355, 393, 258, 362, 248, 329, 352,
	0, 0, 245, 378, 361, 311, 294, 295, 244, 0,
	347, 273, 286, 270, 327, 0, 377, 405, 269, 396,
	0, 388, 247, 0, 387, 326, 374, 379, 312, 306,
	246, 376, 310, 305, 298, 277, 420, 290, 338, 304,
	339, 291, 316, 315, 317, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 390, 0,
	0, 0, 0, 0, 0, 363, 0, 0, 299, 0,
	0, 0, 406, 0, 350, 332, 0, 0, 0, 348,
	302, 375, 340, 381, 365, 389, 344, 341, 238, 366,
	272, 313, 249, 251, 267, 274, 276, 278, 279, 322,
	323, 335, 354, 367, 368, 369, 271, 259, 349, 260,
	288, 261, 239, 264, 263, 265, 356, 266, 241, 336,
	373, 0, 284, 345, 309, 242, 308, 337, 372, 371,
	250, 397, 403, 404, 0, 0, 409, 0, 0, 0,
	417, 422, 423, 424, 426, 427, 428, 429, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 402,
	282, 235, 236, 441, 268, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 324, 401, 0,
	0, 0, 430, 440, 0, 0, 0, 0, 0, 439,
	334, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 360, 383, 395, 412, 415,
	0, 0, 0, 0, 240, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 410, 0, 0, 318, 319, 320,
	321, 285, 0, 257, 413, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 407, 408, 281, 287, 425, 289, 256,
	333, 283, 392, 296, 0, 418, 0, 419, 0, 0,
	0, 0, 325, 292, 293, 357, 297, 303, 346, 391,
	331, 351, 254, 382, 358, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 722, 0, 0, 370, 0, 234, 262, 0,
	237, 0, 301, 0, 342, 280, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 330, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 398, 399, 400, 421,
	384, 0, 438, 275, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 431,
	0, 432, 0, 0, 0, 0, 0, 359, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 252, 186, 433, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 364, 380, 253, 355, 393, 258, 362, 248,
	329, 352, 0, 0, 245, 378, 361, 311, 294, 295,
	244, 0, 347, 273, 286, 270, 327, 0, 377, 405,
	269, 396, 0, 388, 247, 0, 387, 326, 374, 379,
	312, 306, 246, 376, 310, 305, 298, 277, 420, 290,
	338, 304, 339, 291, 316, 315, 317, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	299, 0, 0, 0, 406, 0, 350, 332, 0, 0,
	0, 348, 302, 375, 340, 381, 365, 389, 479, 341,
	238, 366, 272, 313, 249, 251, 267, 274, 276, 278,
	279, 322, 323, 335, 354, 367, 368, 369, 271, 259,
	349, 260, 288, 261, 239, 264, 263, 265, 356, 266,
	241, 336, 373, 0, 284, 345, 309, 242, 308, 337,
	372, 371, 250, 397, 403, 404, 0, 0, 409, 0,
	0, 0, 417, 422, 423, 424, 426, 427, 428, 429,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 402, 282, 235, 236, 441, 268, 328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 324,
	401, 0, 0, 0, 430, 440, 0, 0, 0, 0,
	0, 439, 334, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 360, 383, 395,
	412, 415, 0, 0, 0, 0, 240, 414, 0, 0,
	0, 0, 0, 0, 480, 0, 386, 0, 0, 0,
	394, 0, 0, 0, 0, 0, 410, 0, 0, 318,
	319, 320, 321, 285, 0, 257, 413, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 408, 281, 287, 425,
	289, 256, 333, 283, 392, 296, 0, 418, 0, 419,
	0, 0, 0, 0, 325, 292, 293, 357, 297, 303,
	346, 391, 331, 351, 254, 382, 358, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 370, 0, 234,
	262, 0, 237, 0, 301, 0, 342, 280, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 330, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 398, 399,
	400, 421, 384, 0, 438, 275, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 431, 0, 432, 0, 0, 0, 0, 0, 359,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 252, 186, 433,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 364, 380, 253, 355, 393, 258,
	362, 248, 329, 352, 0, 0, 245, 378, 361, 311,
	294, 295, 244, 0, 347, 273, 286, 270, 327, 0,
	377, 405, 269, 396, 0, 388, 247, 0, 387, 326,
	374, 379, 312, 306, 246, 376, 310, 305, 298, 277,
	420, 290, 338, 304, 339, 291, 316, 315, 317, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	0, 0, 390, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 299, 0, 0, 0, 406, 0, 350, 332,
	0, 0, 0, 348, 302, 375, 340, 381, 365, 389,
	344, 341, 238, 366, 272, 313, 249, 251, 267, 274,
	276, 278, 279, 322, 323, 335, 354, 367, 368, 369,
	271, 259, 349, 260, 288, 261, 239, 264, 263, 265,
	356, 266, 241, 336, 373, 0, 284, 345, 309, 242,
	308, 337, 372, 371, 250, 397, 403, 404, 0, 0,
	409, 0, 0, 0, 417, 422, 423, 424, 426, 427,
	428, 429, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 402, 282, 235, 236, 441, 268, 328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 324, 401, 0, 0, 0, 430, 440, 0, 0,
	0, 0, 0, 439, 334, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	383, 395, 412, 415, 0, 0, 0, 0, 240, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 410, 0,
	0, 318, 319, 320, 321, 285, 0, 257, 413, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 407, 408, 281,
	287, 425, 289, 256, 333, 283, 392, 296, 0, 418,
	0, 419, 0, 0, 0, 0, 325, 292, 293, 357,
	297, 303, 346, 391, 331, 351, 254, 382, 358, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 234, 262, 0, 237, 0, 301, 0, 342, 280,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 330, 0, 230, 231, 232, 233, 0, 0, 0,
	398, 399, 400, 421, 384, 0, 438, 446, 275, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 431, 0, 432, 0, 0, 0,
	0, 0, 359, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	252, 186, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 364, 380, 253,
	355, 393, 258, 362, 248, 329, 352, 0, 0, 245,
	378, 361, 311, 294, 295, 244, 0, 347, 273, 286,
	270, 327, 0, 377, 405, 269, 396, 0, 388, 247,
	0, 387, 326, 374, 379, 312, 306, 246, 376, 310,
	305, 298, 277, 420, 290, 338, 304, 339, 291, 316,
	315, 317, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 0, 0, 0, 0,
	0, 0, 363, 0, 0, 299, 0, 0, 0, 406,
	0, 350, 332, 0, 0, 0, 348, 302, 375, 340,
	381, 365, 389, 344, 341, 238, 366, 272, 313, 249,
	251, 267, 274, 276, 278, 279, 322, 323, 335, 354,
	367, 368, 369, 271, 259, 349, 260, 288, 261, 239,
	264, 263, 265, 356, 266, 241, 336, 373, 0, 284,
	345, 309, 242, 308, 337, 372, 371, 250, 397, 403,
	404, 0, 0, 409, 0, 0, 0, 417, 422, 423,
	424, 426, 427, 428, 429, 0, 0, 0, 0, 411,
	0, 0, 0, 0, 0, 0, 402, 282, 235, 236,
	441, 268, 328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 324, 401, 0, 0, 0, 430,
	440, 0, 0, 0, 0, 0, 439, 334, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 360, 383, 395, 412, 415, 0, 0, 0,
	0, 240, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 386, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 410, 0, 0, 318, 319, 320, 321, 285, 0,
	257, 413, 343, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 281, 287, 425, 289, 256, 333, 283, 392,
	296, 0, 418, 0, 419, 0, 0, 0, 0, 325,
	292, 293, 357, 297, 303, 346, 391, 331, 351, 254,
	382, 358, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 234, 262, 0, 237, 0, 301,
	0, 342, 280, 0, 0, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 330, 0, 0, 230, 231, 232, 233,
	0, 0, 0, 398, 399, 400, 421, 384, 0, 438,
	275, 0, 0, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 431, 0, 432, 0,
	0, 0, 0, 0, 359, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 252, 186, 433, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 364,
	380, 253, 355, 393, 258, 362, 248, 329, 352, 0,
	0, 245, 378, 361, 311, 294, 295, 244, 0, 347,
	273, 286, 270, 327, 0, 377, 405, 269, 396, 0,
	388, 247, 0, 387, 326, 374, 379, 312, 306, 246,
	376, 310, 305, 298, 277, 420, 290, 338, 304, 339,
	291, 316, 315, 317, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 299, 0, 0,
	0, 406, 0, 350, 332, 0, 0, 0, 348, 302,
	375, 340, 381, 365, 389, 344, 341, 238, 366, 272,
	313, 249, 251, 267, 274, 276, 278, 279, 322, 323,
	335, 354, 367, 368, 369, 271, 259, 349, 260, 288,
	261, 239, 264, 263, 265, 356, 266, 241, 336, 373,
	0, 284, 345, 309, 242, 308, 337, 372, 371, 250,
	397, 403, 404, 0, 0, 409, 0, 0, 0, 417,
	422, 423, 424, 426, 427, 428, 429, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 0, 0, 402, 282,
	235, 236, 441, 268, 328, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 324, 401, 0, 0,
	0, 430, 440, 0, 0, 0, 0, 0, 439, 334,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 360, 383, 395, 412, 415, 0,
	0, 0, 0, 240, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 394, 0, 0,
	0, 0, 0, 410, 0, 0, 318, 319, 320, 321,
	285, 0, 257, 413, 343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 281, 287, 425, 289, 256, 333,
	283, 392, 296, 0, 418, 0, 419, 0, 0, 0,
	0, 325, 292, 293, 357, 297, 303, 346, 391, 331,
	351, 254, 382, 358, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 234, 262, 0, 237,
	0, 301, 0, 342, 280, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 330, 0, 0, 230, 231,
	232, 233, 0, 0, 0, 398, 399, 400, 421, 384,
	0, 438, 275, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 431, 0,
	432, 0, 0, 0, 0, 0, 359, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 252, 186, 433, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 364, 1192, 253, 355, 393, 258, 362, 248, 329,
	352, 0, 0, 245, 378, 361, 311, 294, 295, 244,
	0, 347, 273, 286, 270, 327, 0, 377, 405, 269,
	396, 0, 388, 247, 0, 387, 326, 374, 379, 312,
	306, 246, 376, 310, 305, 298, 277, 420, 290, 338,
	304, 339, 291, 316, 315, 317, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 390,
	0, 0, 0, 0, 0, 0, 363, 0, 0, 299,
	0, 0, 0, 406, 0, 350, 332, 0, 0, 0,
	348, 302, 375, 340, 381, 365, 389, 344, 341, 238,
	366, 272, 313, 249, 251, 267, 274, 276, 278, 279,
	322, 323, 335, 354, 367, 368, 369, 271, 259, 349,
	260, 288, 261, 239, 264, 263, 265, 356, 266, 241,
	336, 373, 0, 284, 345, 309, 242, 308, 337, 372,
	371, 250, 397, 403, 404, 0, 0, 409, 0, 0,
	0, 417, 422, 423, 424, 426, 427, 428, 429, 0,
	0, 0, 0, 411, 0, 0, 0, 0, 0, 0,
	402, 282, 235, 236, 441, 268, 328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 324, 401,
	0, 0, 0, 430, 440, 0, 0, 0, 0, 0,
	439, 334, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 360, 383, 395, 412,
	415, 0, 0, 0, 0, 240, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 410, 0, 0, 318, 319,
	320, 321, 285, 0, 257, 413, 343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 281, 287, 425, 289,
	256, 333, 283, 392, 296, 0, 418, 0, 419, 0,
	0, 0, 0, 325, 292, 293, 357, 297, 303, 346,
	391, 331, 351, 254, 382, 358, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 234, 262,
	0, 237, 0, 301, 0, 342, 280, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 330, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 398, 399, 400,
	421, 384, 0, 438, 275, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	431, 0, 432, 0, 0, 0, 0, 0, 359, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 252, 186, 433, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 364, 1190, 253, 355, 393, 258, 362,
	248, 329, 352, 0, 0, 245, 378, 361, 311, 294,
	295, 244, 0, 347, 273, 286, 270, 327, 0, 377,
	405, 269, 396, 0, 388, 247, 0, 387, 326, 374,
	379, 312, 306, 246, 376, 310, 305, 298, 277, 420,
	290, 338, 304, 339, 291, 316, 315, 317, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 0, 0, 363, 0,
	0, 299, 0, 0, 0, 406, 0, 350, 332, 0,
	0, 0, 348, 302, 375, 340, 381, 365, 389, 344,
	341, 238, 366, 272, 313, 249, 251, 267, 274, 276,
	278, 279, 322, 323, 335, 354, 367, 368, 369, 271,
	259, 349, 260, 288, 261, 239, 264, 263, 265, 356,
	266, 241, 336, 373, 0, 284, 345, 309, 242, 308,
	337, 372, 371, 250, 397, 403, 404, 0, 0, 409,
	0, 0, 0, 417, 422, 423, 424, 426, 427, 428,
	429, 0, 0, 0, 0, 411, 0, 0, 0, 0,
	0, 0, 402, 282, 235, 236, 441, 268, 328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	324, 401, 0, 0, 0, 430, 440, 0, 0, 0,
	0, 0, 439, 334, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 360, 383,
	395, 412, 415, 0, 0, 0, 0, 240, 414, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 394, 0, 0, 0, 0, 0, 410, 0, 0,
	318, 319, 320, 321, 285, 0, 257, 413, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 281, 287,
	425, 289, 256, 333, 283, 392, 296, 0, 418, 0,
	419, 0, 0, 0, 0, 325, 292, 293, 357, 297,
	303, 346, 391, 331, 351, 254, 382, 358, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	234, 262, 0, 237, 0, 301, 0, 342, 280, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 330,
	0, 0, 230, 231, 232, 233, 0, 0, 0, 398,
	399, 400, 421, 384, 0, 438, 275, 0, 0, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 431, 0, 432, 0, 0, 0, 0, 0,
	359, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 252, 186,
	433, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 364, 380, 253, 355, 393,
	258, 362, 248, 329, 352, 0, 0, 245, 378, 361,
	311, 294, 295, 244, 0, 347, 273, 286, 270, 327,
	0, 377, 405, 269, 396, 0, 388, 247, 0, 387,
	326, 374, 379, 312, 306, 246, 376, 310, 305, 298,
	277, 420, 290, 338, 304, 339, 291, 316, 315, 317,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 390, 0, 0, 0, 0, 0, 0,
	363, 0, 0, 299, 0, 0, 0, 406, 0, 350,
	332, 0, 0, 0, 348, 302, 375, 340, 381, 365,
	389, 344, 341, 238, 366, 272, 313, 249, 251, 520,
	274, 276, 278, 279, 322, 323, 335, 354, 367, 368,
	369, 271, 259, 349, 260, 288, 261, 239, 264, 263,
	265, 356, 266, 241, 336, 373, 0, 284, 345, 309,
	242, 308, 337, 372, 371, 250, 397, 403, 404, 0,
	0, 409, 0, 0, 0, 417, 422, 423, 424, 426,
	427, 428, 429, 0, 0, 0, 0, 411, 0, 0,
	0, 0, 0, 0, 402, 282, 235, 236, 441, 268,
	328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1622, 324, 401, 0, 0, 0, 430, 440, 0,
	0, 0, 0, 0, 439, 334, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	360, 383, 395, 412, 415, 1624, 0, 0, 0, 240,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 0, 394, 0, 0, 0, 0, 0, 410,
	0, 0, 318, 319, 320, 321, 285, 0, 257, 413,
	343, 0, 0, 0, 0, 0, 3280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1599, 0, 407, 408,
	281, 287, 425, 289, 256, 333, 283, 392, 296, 0,
	418, 0, 419, 0, 0, 0, 0, 325, 292, 293,
	357, 297, 303, 346, 391, 331, 351, 254, 382, 358,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 0, 0, 0, 0, 0, 0,
	370, 0, 234, 262, 0, 237, 0, 301, 0, 342,
	280, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 0, 0,
	0, 398, 399, 400, 421, 384, 0, 438, 0, 0,
	1603, 499, 498, 505, 495, 0, 0, 0, 0, 0,
	0, 1609, 0, 502, 503, 0, 504, 508, 0, 0,
	490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	513, 1597, 1631, 0, 0, 1598, 1600, 1602, 0, 1604,
	1605, 1606, 1610, 1611, 1612, 1614, 1617, 1618, 1619, 0,
	0, 0, 0, 0, 0, 0, 1607, 1616, 1608, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 517, 0, 0, 519, 0, 0, 0,
	0, 518, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1620,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1596, 0, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 1601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 491, 493, 492, 0, 0, 0,
	0, 0, 0, 0, 497, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 500, 506, 0, 507, 509,
	0, 0, 510, 511, 512, 0, 0, 514, 515,
}

var yyPact = [...]int{
	3228, -1000, -1000, -1000, -318, 10751, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35791, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35791, -316,
	35249, 35249, -1000, -1000, 2121, -1000, 34706, 11870, 35791, 302,
	295, 35791, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 633, -1000,
	34164, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 532, 37989,
	37417, 8505, -269, -1000, 2938, -114, 788, 794, 866, 866,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4115, 725, 33622, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3079, 277, 725, 14045, 3, 1, 2938,
	325, 247, -1000, 872, 3323, 155, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8505, 8505, 10751,
	-325, 10751, 8505, 35791, 35791, -1000, -1000, -1000, -1000, 532,
	37989, 8505, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3923, -1000, 1213, -1000, -1000,
	-1000, -1000, 2544, 1208, 2019, 491, 35791, -1000, 1183, 491,
	-1000, -1000, -1000, 2938, 2938, -1000, 35791, 35791, 67, 1440,
	-1000, 311, 301, 300, 1168, -1000, -1000, -1000, -1000, -1000,
	-1000, 411, 2919, -1000, 35791, 35791, 2564, 35791, -1000, 1929,
	444, 4342, 2770, 1005, 636, 2577, -1000, -1000, 2543, -1000,
	190, 161, 179, 356, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 202, -1000, 2849, -1000, -1000, 187, -1000, -1000, 163,
	-1000, -1000, -1000, -1, -1000, -1000, -1000, -1000, -1000, -1000,
	-89, -1000, -1000, 860, 1933, 8505, -1000, 2250, -1000, 1751,
	-1000, -1000, -1000, -1000, 5703, 10182, 10182, 10182, 10182, -1000,
	-1000, 2374, 8505, 2529, 2518, -1000, -1000, -1000, -1000, -1000,
	1166, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1624, -1000, -1000, -1000, 9623, -1000, 2515, 2514, 2513, 2512,
	2511, 2510, 2505, 2503, 2501, 2499, 2498, 2497, 2493, 2491,
	2229, 11301, 2490, 2018, 2012, 2489, 2488, 2482, 2008, 2229,
	2229, 2481, 2479, 2478, 2475, 2472, 2471, 2468, 2467, 2461,
	2460, 2459, 2443, 2439, 2438, 2435, 2434, 2431, 2430, 2429,
	2422, 2421, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1108, -1000, 2418, 2734, 2870,
	2252, 2902, 2828, 2812, 2809, 2806, 1826, -1000, -1000, -1000,
	-119, -1000, -1000, 791, -1000, 733, -1000, 35791, 35791, 35791,
	656, 529, 529, 529, 529, 529, 529, 607, 529, 35791,
	-161, 625, 621, 620, 529, -1000, -1000, -1000, -1000, -1000,
	-1000, -112, -1000, 1438, 1434, 2604, 722, -1000, -1000, -1000,
	-1000, 1070, 35791, -1000, 2302, 1289, 1289, 2867, 466, 460,
	452, 1289, 326, -1000, 1420, 1420, 1420, 1420, 1289, 372,
	455, 2870, 2870, -17, 1420, -18, 1289, 1289, -18, 1289,
	1289, 1289, 171, -312, -1000, -1000, -1000, 1420, 1420, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2841, 2839, 532, 35791,
	116, 35791, 532, 532, 532, 543, -61, 36875, 36333, 1929,
	438, 434, 1082, 1450, -1000, 1330, 35791, 35791, 1330, 1330,
	18432, 17890, -1000, 35791, -1000, 2870, 2252, -1000, 2192, 2277,
	2178, 2252, 532, 532, 532, 532, 532, 146, 532, 532,
	532, 532, 532, 35791, 35791, 33080, 532, 532, 7380, 7380,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10751,
	1724, 1684, 148, -77, -321, 177, -1000, -1000, 35791, 2715,
	164, -1000, -1000, -1000, 2255, -1000, 2288, 2288, 2288, 2288,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2346,
	2414, -1000, -1000, 2287, 2287, 2287, 2255, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2341, 2341, 2345, 2345, 2341, 35791, 8505, 35791,
	2739, 319, 2411, -1000, 35791, 315, 2870, 2734, 2870, -1000,
	-1000, 1165, 1825, 2007, -1000, -1000, 311, 1380, -1000, 858,
	-1000, -1000, -1000, -1000, 35791, -89, 296, -1000, -1000, 1994,
	2400, -1000, 483, 958, 1130, -1000, 157, 3483, 28737, 1929,
	28737, 35791, -1000, -1000, -1000, -1000, -1000, -1000, -5, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 172, -1000, 8505, 8505, 8505, 8505, 8505, -1000,
	510, 9064, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10182,
	10182, 10182, 10182, 10182, 10182, 10182, 10182, 10182, 10182, 10182,
	10182, 2366, 1436, 10182, 10182, 10182, 10182, 2277, 2674, 1076,
	224, -1000, -1000, -1000, -1000, -1000, 1442, 1933, 8505, 8505,
	35791, -1000, -1000, 3893, 8505, 8505, 3793, 8505, 2804, 8505,
	8505, 8505, 2176, 4585, 35791, 8505, -1000, 2168, 2152, -1000,
	-1000, 1617, 8505, -1000, -1000, 8505, -1000, -1000, 8505, 10182,
	8505, -1000, -1000, -1000, 2470, 2804, 2804, 1389, 8505, 8505,
	2804, 2804, 2804, 1372, 2804, 2804, 2804, 2804, 2804, 2804,
	2804, 2804, 2151, 2141, 2140, 2870, -269, 6821, -1000, -274,
	2734, 8505, -1000, -1000, 8505, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2002, -45, 779, 751, 762, -1000, 2799,
	-1000, 2399, 2392, 1164, 529, -1000, -113, 35791, 1471, 35791,
	28737, 35791, 35791, 1929, 35791, 35791, -175, 529, -160, 529,
	529, 529, 35791, -1000, 2689, 28737, 2684, 543, -1000, 35791,
	1070, 2794, 35791, 2910, 10182, 10182, -1000, 32538, 1420, 1289,
	1289, -1000, -1000, 35791, -1000, -1000, -1000, 1420, 35791, 1420,
	1420, 2910, 1420, -1000, -1000, -1000, 1289, 1289, -1000, -1000,
	-1000, -1000, 1420, 1420, -1000, -1000, 2910, 35791, -8, 2910,
	2910, -15, -1000, -1000, -1000, 35791, 35791, 529, 35791, -1000,
	35791, 35791, -1000, -1000, 35791, 3645, 35791, 31996, 2838, -1000,
	28737, 35791, 35791, 26027, -1000, 1034, -1000, -76, -1000, -47,
	-61, 1330, -61, 1330, -1000, 478, 473, 16806, 416, 28737,
	5144, -1000, -1000, 1330, 1330, 5144, 5144, 1220, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1068, -1000, 169, 2734, -1000,
	-1000, -1000, -1000, -1000, 35791, 35791, 28737, 1929, 35791, 532,
	35791, 35791, 35791, 35791, 35791, -1000, 2375, -1000, 2768, 35791,
	35791, 1114, -1000, -1000, 13503, 1163, 1114, -1000, 1504, -1000,
	8505, 10751, -289, 8505, 10751, 10751, 8505, 10751, -1000, 8505,
	142, -1000, -1000, -1000, -1000, 1822, -1000, 1816, -1000, -1000,
	-1000, 2001, 2001, -1000, 1814, -1000, -1000, -1000, -1000, 1780,
	-1000, -1000, 1778, -1000, -1000, -1000, 2137, 860, -1000, 1999,
	2576, -271, -1000, 15705, 35791, 35791, -1000, -1000, -271, -1000,
	15146, 35791, 2734, -1000, 2734, 35791, -1000, 2863, -1000, 311,
	265, -1000, -1000, -1000, -1000, -1000, -1000, 1162, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1056, -1000, 35791,
	-1000, -1000, 157, 28737, 29821, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 185, -1000, -1000, 159, -1000, 575, 99, 1379,
	-1000, -1000, 121, 165, 630, 1933, -1000, 1515, 1515, 1510,
	-1000, 522, -1000, -1000, -1000, -1000, 2374, -1000, -1000, -1000,
	2561, 1518, -1000, 1448, 1448, 1132, 1132, 1132, 1132, 1132,
	1400, 1400, -1000, -1000, -1000, 5703, 2366, 10182, 10182, 10182,
	10182, 500, 500, 2027, 2390, -1000, 8505, 1486, -1000, 8505,
	1805, 1095, 1159, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2135, 2131, 1926, 2918, 2129, 8505, -1000,
	-1000, 1377, 1369, 1368, -1000, 1846, 7946, -1000, -1000, -1000,
	2127, 1158, 2122, -1000, -1000, -1000, 2112, 1348, 936, 2110,
	1499, 2107, 1043, 8505, 8505, 8505, 2100, 1346, 1345, 8505,
	8505, 8505, 8505, 2098, 8505, 8505, 8505, 8505, 8505, 8505,
	8505, 8505, 23, 23, 23, -1000, -1000, 1343, -1000, 1933,
	-1000, 1996, -1000, 1109, 1041, -1000, 1867, -1000, -1000, -1000,
	-1000, 773, 729, 745, 35791, 830, 12412, 35791, 35791, -1000,
	2302, 2745, 131, -1000, 943, -1000, 99, -101, 307, 884,
	2563, 2917, 2365, 35791, 529, 35791, 35791, 35791, 2793, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 31454, -1000, 2364,
	1323, -1000, -1000, 8505, -1000, -1000, 2562, 35791, 35791, 2910,
	2910, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35791, 2910,
	2910, 1289, 1420, -1000, -1000, 1420, -1000, -1000, 1420, -1000,
	1154, -1000, 35791, -1000, -1000, -1000, 2302, 1040, -1000, 837,
	525, 525, 776, 672, 2899, 14587, -1000, 1310, 1059, 556,
	2667, 168, -1000, 1310, -219, 1310, 1310, 1310, 1310, 1310,
	1310, 1310, 403, 395, 1310, 1310, 1310, 1310, 1310, 1310,
	1310, 1310, 1310, 1310, 1310, 780, 1310, 1310, 1310, 1310,
	1310, -1000, 1310, 2354, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 436, 127, 2837, 235, 230, 943, 2836, 249, 2720,
	999, -1000, -1000, -1000, -1000, 20607, 20607, 16264, 20607, -1000,
	1293, -61, -56, -1000, -1000, 1034, 5144, 1034, 5144, -1000,
	-1000, 552, -1000, -1000, 884, -1000, 35791, 35791, -1000, -1000,
	2349, 1431, -1000, -1000, 11301, -1000, 5144, 5144, -1000, -1000,
	21149, 35791, -1000, -95, -1000, -81, 2855, 1019, -1000, -1000,
	1026, 884, 2575, 35791, 1019, 1019, 1019, -1000, -1000, 12412,
	35791, -1000, -1000, 2910, 7380, -1000, 26027, -1000, -1000, 30905,
	-1000, 30363, 2910, 1417, -1000, 10751, 1611, 141, -1000, 173,
	-322, 139, 1587, 138, 1933, -1000, -1000, 2096, 2094, 1316,
	-1000, 1299, 2093, 1286, 1277, -1000, -37, -1000, 2690, 912,
	-1000, 2348, -1000, 1275, 2612, -1000, 1009, -1000, 1429, 1272,
	-1000, 912, 1255, 2610, 1009, 2855, -1000, 1140, 66, -1000,
	-1000, 35791, 1994, 1232, 29821, 973, -1000, 549, 1139, 1135,
	-1000, 28737, 178, 28737, -1000, 28737, -1000, -1000, 322, -1000,
	35791, 2730, -1000, -1000, -1000, 1931, -347, -1000, -1000, -1000,
	-1000, -1000, 1223, -1000, 500, 500, 2027, 2185, -1000, 10182,
	-1000, 10182, 2665, 1364, -1000, 8505, 1575, 3581, 1419, 19516,
	35791, -1000, -1000, 8505, 8505, -1000, 2654, -1000, -1000, -1000,
	-1000, 8505, 8505, 1854, -1000, 35791, -1000, -1000, -1000, -1000,
	19516, -1000, 10182, -1000, 8505, 1069, 2582, 1222, 23, 23,
	23, 2574, 2519, 2495, 1221, 23, 2457, 2436, 2397, 2376,
	2355, 2351, 2343, 2333, -1000, 2347, -1000, -1000, 6821, -1000,
	-37, 8505, 8505, 8505, 2645, -1000, -1000, -1000, -1000, -1000,
	726, 156, 2076, 1008, -1000, -1000, 35791, -1000, -1000, -1000,
	2075, 990, -1000, -1000, -1000, 4015, 2288, 2288, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2346, -1000, -1000,
	2287, 2287, 2287, 2255, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2341, 2341, 2345, 2345, 2341, -1000, 2302,
	2783, -1000, 36, 1310, 485, 28737, 422, -1000, 35791, 1753,
	1415, 2572, 328, 2705, 35791, 26569, 254, 35791, 2337, 2336,
	2326, 287, 4015, 35791, 1032, -1000, 1133, 3323, -1000, 35791,
	1933, -1000, 1929, -1000, 1289, -1000, -1000, 2910, 1138, -1000,
	-1000, 2910, 1289, 1289, 1420, 35791, -1000, 2780, 3645, -1000,
	35791, -1000, -1000, -1000, 568, -1000, 737, 529, 35791, 1564,
	737, 1563, 2324, -1000, -1000, 35791, 35791, 35791, 35791, -1000,
	-1000, 35791, -1000, 35791, 35791, 35791, 35791, -1000, 35791, 35791,
	-1000, 35791, 1559, 1545, 2759, -1000, 1310, 1310, 683, -1000,
	-1000, 449, -1000, 1772, 1771, 1770, 1765, 1986, 1985, 1984,
	1310, 1310, 1745, 1981, 29279, 1980, 910, 1741, 1734, 1733,
	1782, 1974, 635, -1000, 1971, 1768, 1760, 1750, 35791, 2303,
	1914, -1000, -1000, 36, 1310, 227, 35791, 1413, 485, 304,
	1836, 17348, 35791, 26027, 26027, 26027, 26027, -1000, 2585, 2573,
	-1000, 2602, 2596, 2649, 35791, 26027, 2302, -1000, 29279, -1000,
	-1000, -1000, 2277, 1216, 2814, 708, 8505, -1000, -1000, -71,
	-52, -1000, -1000, -1000, 28737, 1962, 416, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2939, 35791, 35791, 615, 2073,
	-1000, 2908, -1000, 978, -1000, -1000, 1122, -1000, 2908, 1456,
	-323, 10751, 1446, 1160, -1000, 8505, 10751, 8505, -290, 213,
	-292, -1000, -1000, -1000, 1961, -1000, -1000, -1000, 1731, -1000,
	1721, 38, 46, 1543, -271, 6821, 320, 35791, -271, 35791,
	6821, -1000, 35791, 306, -271, -1000, 35791, 1711, -1000, -1000,
	-1000, 2916, 28737, 1929, 1266, 28195, -1000, 186, -1000, 180,
	443, 1959, -1000, 619, 97, -1000, 1395, 1931, -1000, -1000,
	-1000, 10182, -1000, -1000, -1000, -1000, 1933, 8505, 2072, -1000,
	777, 777, 2070, -1000, 2288, 2288, -1000, 2255, 2287, 2255,
	777, 777, 2069, -1000, 1790, 2300, -1000, 2191, 2160, 8505,
	-1000, 2068, 3179, 865, -128, 23, 23, -1000, -1000, -1000,
	-1000, 23, 23, 23, 23, -1000, 23, 23, 23, 23,
	23, 23, 23, 23, 494, -1000, 38, 1933, 1933, -1000,
	-1000, 2714, -1000, 1951, 1946, 830, 4015, 641, 12412, 2709,
	2777, 317, 1841, -1000, -1000, -1000, 27653, 433, -1000, -1000,
	-1000, 544, 174, 1710, 412, -1000, 35791, 249, 2625, 1393,
	1944, 35791, -1000, -1000, -1000, -1000, -1000, 2705, -1000, 589,
	279, 1169, -1000, 1310, 1310, 12954, 2776, 2276, 2275, 12954,
	12954, 12954, 282, 1414, -1000, 491, 991, 1121, 26027, 35791,
	-1000, 25485, 2067, -1000, 884, 2910, -1000, 35791, -1000, 2910,
	2910, 1289, -1000, 317, -1000, 2681, 4015, -1000, 35791, -1000,
	35791, -1000, 35791, 35791, 529, 8505, 2681, 35791, 545, -1000,
	-1000, 848, 266, 550, 550, 975, -1000, 2765, -1000, -1000,
	-1000, 35791, -1000, -1000, -1000, -1000, -1000, -1000, 19516, 19516,
	2831, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1942, 1941, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35791, 1156, -1000, 1362, 1841, 27653,
	1342, 1330, 1940, 433, 1753, 1334, -1000, 1936, -1000, 931,
	35791, 35791, -1000, 993, -1000, 1333, 2555, 2571, 2555, -1000,
	-1000, -1000, -1000, 2450, -1000, 2357, -1000, -1000, 993, -1000,
	-1000, -1000, -1000, -1000, 708, -1000, 2853, 737, 737, 737,
	2066, -1000, -1000, -1000, 973, 2062, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2906, 2898, 27111, 2906, -1000,
	-323, 1349, -1000, 1467, 137, 1568, 35791, -1000, -1000, -1000,
	2060, 2059, -276, 42, 2897, 2895, 2937, -1000, 2057, 955,
	-271, -1000, -1000, 912, -1000, -1000, -1000, -271, -1000, 912,
	-1000, -1000, 1929, -1000, 166, -1000, -1000, -1000, -1000, -1000,
	-1000, 83, -1000, 35791, -1000, 1931, 1930, 96, -1000, 1933,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8505, -1000, -1000, -1000, 2144,
	-1000, -1000, 8505, 2055, 1925, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2920,
	-1000, 2894, -276, -1000, -1000, -1000, -1000, -1000, -1000, 4015,
	-1000, 1292, 317, -177, -1000, 1918, 98, -1000, -1000, -1000,
	1917, 1916, 1703, -1000, -1000, 1691, 1096, 120, -1000, -1000,
	-1000, -1000, -1000, -1000, 1836, 1832, 1327, -349, -1000, 2274,
	-1000, 1310, 1310, 1310, 35791, -1000, 26569, 1292, 1292, 2049,
	941, -1000, -1000, -1000, -1000, 317, 24401, 12954, 2046, 2038,
	2034, 484, 1407, 1376, -1000, 1692, 20607, 26027, 25485, 986,
	-1000, 1120, -1000, -1000, -1000, 2910, -1000, -1000, 2910, -1000,
	-1000, -1000, 35791, 250, 2272, -1000, 2271, 2558, 331, 2268,
	2267, 35791, 2119, -1000, 2681, 35791, 558, 2675, -1000, -1000,
	-1000, -1000, -1000, 355, -1000, 35791, -1000, -1000, 1173, -1000,
	19516, -1000, -1000, 1146, -1000, 1914, 1906, -1000, 98, 1904,
	5144, -1000, -1000, 2625, 1903, -1000, 35791, 931, 931, 2920,
	35791, 6821, -1000, -1000, 8505, 2265, -1000, 8505, -1000, -1000,
	-1000, -1000, -1000, 2262, 2719, -1000, -1000, -1000, -1000, -1000,
	-1000, 8505, 8505, -1000, -1000, 528, 10751, -294, 204, -1000,
	-1000, -1000, -278, 1898, -1000, -1000, 2893, 1897, 1852, 35791,
	-1000, 912, 912, 884, -1000, -1000, -15, -1000, -1000, -1000,
	2014, -1000, 1900, 23, -1000, 134, 8505, -278, -172, -1000,
	-1000, -177, -1000, 329, -1000, -1000, 313, -1000, -1000, 245,
	-1000, -1000, 1690, 459, -1000, -1000, -1000, 1894, 1586, 1864,
	23859, 19516, 20058, 1893, -1000, -1000, -1000, -1000, -178, 12954,
	-1000, 1131, -1000, 1310, 1310, 2033, 4270, 172, 4270, 800,
	1361, -1000, 1688, -1000, 1687, -1000, 2910, 986, 1120, -1000,
	-1000, 1231, -1000, -1000, -1000, -1000, 250, -1000, -1000, 1579,
	10182, -1000, -1000, 1887, 20058, 640, 1320, 1317, 657, 2260,
	-1000, 366, 2929, -1000, -1000, -1000, 680, 2257, -1000, 1525,
	1516, -1000, 35791, -1000, 23859, 23859, 321, 321, 23859, 23859,
	2256, 550, -1000, -1000, 10182, -1000, -1000, -1000, -1000, 1310,
	1150, -1000, -1000, -1000, -1000, -1000, -1000, 1832, -1000, -1000,
	2870, -1000, -1000, 1933, 35791, 1933, 24943, -1000, 2892, 2891,
	1933, 860, -1000, -323, 35791, 35791, -281, 1658, -1000, 1886,
	57, -1000, -1000, 877, -283, 31, 37, -1000, -1000, -1000,
	2032, -1000, 972, -1000, -1000, -1000, 860, -281, 35791, -1000,
	362, -1000, -1000, 441, 1883, -1000, -1000, 243, -1000, -1000,
	-1000, -1000, -1000, 95, -1000, 1315, 1129, -1000, 2255, 8505,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 24401, 1292,
	1292, -178, 486, 4218, -1000, 1059, -1000, -15, 486, 442,
	234, -1000, 1646, -1000, -1000, 2920, -1000, -1000, -1000, 2027,
	-1000, -1000, -1000, -1000, -1000, -1000, 1882, 1881, -1000, -1000,
	-1000, -1000, -1000, 1637, 2254, -115, 2827, 1874, -1000, -1000,
	2238, 1127, 1125, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1107, 1103, 23859, -1000, -1000, 2027, 19516, 1310, -1000, -1000,
	1088, 1083, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2234,
	-1000, -1000, 2890, -1000, 1865, 536, 41, 37, -1000, 2888,
	45, 2887, 2886, -1000, -1000, 450, -272, 19, 18, 17,
	-1000, -1000, -1000, 8505, -1000, 2775, -1000, 182, -1000, 79,
	-1000, -1000, -1000, 1864, 1862, -1000, 23859, 2765, 1837, -1000,
	-1000, -1000, -1000, 318, 2884, 4270, -1000, 1310, -1000, 318,
	-1000, 284, -1000, 1326, -1000, 1627, -1000, 2870, -1000, -1000,
	2029, 8505, 2229, 1310, 2028, -167, 23859, 2556, 2552, 2521,
	2335, 1067, -1000, 19516, -1000, -1000, 23317, 35791, 1852, -1000,
	2216, 1622, 42, 40, 2881, -1000, 1852, 2880, 1852, 1852,
	1476, -1000, 15, 13, 8, -1000, -1000, -1000, -1000, 1856,
	-1000, -1000, -1000, -1000, 231, -1000, -1000, 2765, -1000, 2877,
	425, -1000, 19516, -1000, -1000, -1000, 1619, -1000, -1000, -1000,
	1798, -1000, 35791, -1000, 2570, -1000, 151, 1025, 231, 321,
	231, 321, 231, 321, 231, 321, 175, -1000, -1000, -1000,
	1022, -1000, -1000, 2816, 18974, 29, -1000, -1000, -1000, 1853,
	-1000, 1852, -1000, -1000, 450, -1000, -1000, -1000, -1000, -1000,
	1310, 1847, 270, -1000, -1000, -1000, 22775, 339, 360, 358,
	-1000, 507, -1000, -1000, -1000, 550, -1000, -1000, 2567, 2566,
	2915, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 35791, -1000, 35791, -1000, 1014, -1000, -1000, -1000, 1100,
	-1000, -1000, -1000, -1000, -1000, 1618, -1000, 35791, -1000, 35791,
	324, 1613, 10182, 2212, 10182, 2198, 343, 2197, -1000, -1000,
	2925, -1000, 2923, 669, 669, 231, 231, 231, 231, -1000,
	826, -1000, 1288, -1000, 22233, 35791, -1000, -1000, 1007, 2194,
	2874, -1000, 2866, 35791, 2476, 35791, 2020, 1251, 10182, -1000,
	-1000, -1000, 1663, 373, -1000, 35791, 6262, -1000, 911, -1000,
	-1000, 481, 341, -1000, 1002, -1000, 987, 21691, 1612, 1473,
	-1000, -1000, -1000, -1000, -1000, 1933, 35791, 983, -1000, 35791,
	308, -1000, -1000, -1000, 979, -1000, -1000, -1000, -1000, 481,
	2600, -1000, 1608, -1000, -1000, 37765, 617, -1000, -1000, 37765,
	323, -1000, 477, 2000, -1000, -1000, 934, -1000, 35791, 678,
	8505, -1000, 323, 4270, -1000, 8505, 920, -1000, 4270, 919,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 156, 2954, 237, 154, 3488, 73, 235, 208, 204,
	234, 3487, 3486, 2711, 2680, 3485, 3479, 3478, 3474, 3473,
	3472, 3471, 3470, 3469, 3468, 3467, 3466, 3464, 3463, 3462,
	3460, 3459, 3458, 3456, 3452, 3451, 3450, 3448, 3447, 3446,
	3445, 233, 3444, 3443, 3440, 3439, 3438, 3437, 3435, 3434,
	3433, 3432, 3431, 3429, 3428, 3426, 3425, 3424, 3423, 3422,
	3421, 3418, 3417, 3416, 3414, 3413, 3412, 3411, 3410, 3409,
	3408, 3407, 3406, 201, 3405, 2678, 3401, 3400, 3399, 3397,
	3396, 3395, 3394, 215, 3393, 3392, 3391, 3390, 3387, 3380,
	3379, 3376, 3375, 3374, 3373, 219, 3372, 3371, 3370, 3368,
	3367, 3366, 210, 3365, 152, 177, 3363, 3362, 3361, 3359,
	3358, 223, 216, 64, 3357, 44, 3356, 205, 3355, 131,
	3354, 126, 3352, 3351, 3350, 3349, 3348, 3346, 3344, 3343,
	3342, 3341, 3340, 3334, 3333, 3332, 3331, 3330, 84, 3329,
	245, 3328, 66, 3327, 3313, 106, 128, 175, 241, 2126,
	247, 238, 170, 159, 78, 3308, 2696, 3307, 143, 218,
	137, 23, 3306, 162, 3305, 145, 43, 33, 236, 123,
	54, 140, 114, 3302, 211, 96, 95, 3299, 3290, 169,
	242, 171, 3287, 108, 3286, 3285, 3284, 3281, 188, 168,
	3280, 3277, 109, 3274, 3272, 81, 3271, 61, 200, 146,
	183, 3266, 1767, 116, 115, 105, 3264, 3263, 97, 3262,
	3259, 3255, 3254, 163, 3252, 3251, 125, 65, 3250, 3246,
	3245, 60, 3244, 45, 3239, 3237, 26, 3236, 56, 3235,
	3233, 3231, 3230, 3228, 3225, 3223, 3222, 3221, 3219, 3218,
	68, 3217, 3214, 15, 16, 18, 3213, 22, 3212, 150,
	3211, 3210, 3209, 82, 77, 3208, 75, 2, 41, 79,
	3207, 213, 254, 89, 139, 3206, 411, 3205, 3201, 3200,
	142, 3199, 434, 3197, 3196, 3195, 3189, 3187, 121, 3186,
	206, 46, 3183, 85, 127, 3181, 36, 42, 209, 192,
	3180, 3175, 3171, 138, 187, 80, 110, 0, 3170, 136,
	3169, 3167, 3165, 240, 3163, 221, 197, 141, 129, 263,
	212, 3162, 3161, 71, 3160, 144, 50, 48, 122, 9,
	19, 207, 3159, 373, 164, 3158, 194, 3157, 228, 1,
	132, 3155, 3153, 27, 279, 3151, 3150, 3149, 103, 3148,
	3145, 104, 90, 3143, 3141, 3136, 3135, 34, 3134, 32,
	25, 3133, 92, 3132, 227, 3131, 181, 124, 165, 149,
	135, 217, 220, 67, 69, 3130, 1582, 134, 91, 17,
	3129, 214, 3128, 191, 151, 3127, 120, 3126, 232, 369,
	199, 3124, 166, 8, 40, 31, 3123, 10, 3122, 174,
	189, 3121, 3120, 21, 47, 3118, 29, 3117, 3116, 3115,
	3114, 5, 3113, 3112, 3110, 4, 7, 3109, 3, 198,
	3108, 3107, 3104, 3102, 53, 118, 3101, 161, 172, 160,
	3100, 83, 3099, 3098, 3097, 1665, 3096, 239, 3095, 3094,
	3092, 3086, 3085, 3083, 3082, 3078, 3072, 86, 38, 3069,
	3068, 3067, 3066, 74, 130, 3064, 3063, 3062, 3060, 35,
	158, 3059, 20, 3056, 28, 24, 37, 3055, 117, 3053,
	12, 167, 3052, 3046, 14, 3044, 3042, 11, 13, 3040,
	3039, 107, 3038, 94, 30, 148, 93, 3037, 3036, 76,
	202, 119, 3035, 3030, 222, 226, 190, 3029, 112, 224,
	243, 3027, 195, 3026, 3025, 3021, 3020, 3019, 3016, 982,
	3014, 3013, 231, 63, 87, 100, 2996, 2995, 2994, 72,
	147, 99, 102, 55, 70, 2991, 98, 173, 2990, 179,
	2989, 2988, 88, 2987, 2986, 2985, 2983, 2982, 178, 2981,
	2980, 176, 225, 2971, 2970, 2966, 2965, 229, 304, 2964,
}

//line mysql_sql.y:10333
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 527, 535, 535, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 109, 525, 525, 525, 526, 526, 106, 126,
	125, 128, 128, 127, 127, 124, 124, 120, 123, 123,
	122, 122, 121, 116, 118, 118, 117, 119, 119, 107,
	95, 108, 470, 470, 469, 469, 468, 468, 422, 422,
	467, 467, 467, 466, 466, 466, 465, 465, 464, 464,
	463, 463, 461, 461, 462, 460, 459, 459, 459, 457,
	457, 457, 453, 453, 455, 454, 454, 456, 448, 448,
	451, 451, 449, 449, 449, 449, 452, 447, 447, 447,
	446, 446, 94, 94, 94, 368, 368, 93, 93, 382,
	382, 382, 382, 382, 380, 380, 380, 380, 380, 380,
	379, 379, 378, 378, 383, 383, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 84, 84, 84, 84,
	84, 89, 89, 89, 532, 532, 531, 531, 533, 533,
	533, 533, 534, 534, 87, 87, 87, 88, 377, 377,
	377, 85, 86, 86, 367, 367, 372, 372, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 376, 376, 376, 374, 374, 373, 373, 375, 375,
	78, 78, 78, 81, 80, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 79, 79, 79, 79, 79, 79,
	74, 74, 74, 74, 74, 73, 73, 75, 75, 364,
	364, 363, 90, 90, 91, 529, 529, 528, 530, 530,
	530, 530, 92, 98, 98, 98, 98, 98, 98, 98,
	97, 97, 100, 100, 99, 101, 83, 83, 83, 83,
	83, 83, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 495, 495, 495, 497, 497, 301, 302, 536, 304,
	300, 300, 300, 491, 491, 492, 493, 494, 494, 494,
	96, 11, 11, 11, 11, 11, 11, 11, 72, 77,
	248, 248, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 236, 236, 236, 231, 231, 231,
	231, 232, 232, 233, 233, 234, 234, 234, 234, 235,
	235, 294, 294, 253, 253, 253, 255, 255, 254, 252,
	250, 250, 250, 250, 250, 250, 251, 251, 251, 256,
	256, 70, 76, 76, 76, 508, 508, 71, 519, 519,
	425, 425, 315, 315, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	430, 431, 311, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 48, 51, 47, 47, 47, 353, 353, 46,
	537, 537, 289, 289, 59, 58, 50, 60, 61, 62,
	63, 64, 65, 45, 57, 57, 57, 57, 57, 57,
	57, 57, 68, 68, 442, 442, 539, 539, 539, 66,
	67, 424, 424, 424, 56, 55, 54, 53, 52, 52,
	44, 44, 43, 43, 49, 132, 133, 308, 308, 308,
	310, 310, 306, 538, 538, 396, 396, 309, 309, 42,
	42, 42, 42, 69, 307, 307, 288, 305, 305, 305,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 361,
	361, 358, 25, 18, 17, 17, 20, 20, 16, 16,
	19, 21, 22, 22, 9, 9, 9, 9, 13, 13,
	14, 153, 153, 203, 203, 503, 503, 499, 499, 500,
	500, 500, 501, 501, 502, 502, 102, 436, 436, 436,
	436, 436, 436, 8, 175, 175, 435, 435, 435, 435,
	435, 435, 365, 365, 480, 480, 480, 481, 174, 174,
	169, 169, 437, 437, 330, 482, 482, 445, 445, 444,
	444, 443, 443, 172, 172, 173, 173, 156, 156, 112,
	112, 450, 450, 450, 450, 458, 458, 421, 421, 240,
	240, 281, 281, 282, 282, 146, 146, 147, 147, 147,
	147, 147, 147, 488, 488, 490, 490, 489, 171, 171,
	167, 167, 168, 168, 168, 166, 166, 165, 164, 164,
	163, 161, 161, 161, 162, 162, 162, 179, 179, 149,
	149, 149, 148, 148, 148, 148, 148, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 150,
	150, 496, 496, 496, 426, 426, 426, 433, 433, 263,
	263, 264, 264, 262, 262, 151, 151, 152, 152, 152,
	152, 261, 261, 260, 154, 154, 160, 159, 159, 155,
	155, 155, 155, 271, 271, 270, 270, 270, 270, 105,
	110, 110, 111, 178, 178, 269, 268, 268, 268, 177,
	177, 176, 176, 170, 170, 158, 158, 158, 158, 267,
	157, 265, 524, 524, 523, 523, 522, 520, 520, 520,
	521, 521, 521, 521, 472, 472, 472, 472, 472, 295,
	295, 295, 299, 299, 298, 298, 298, 298, 298, 303,
	7, 7, 7, 7, 7, 7, 30, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 36, 187, 188, 37,
	189, 189, 190, 190, 191, 191, 192, 193, 194, 194,
	194, 194, 35, 180, 180, 181, 181, 182, 182, 183,
	184, 184, 184, 186, 185, 34, 34, 27, 139, 139,
	140, 140, 140, 140, 142, 142, 237, 237, 237, 141,
	141, 143, 143, 143, 504, 507, 505, 505, 509, 509,
	509, 510, 510, 510, 510, 511, 511, 28, 129, 134,
	514, 514, 514, 513, 513, 515, 515, 516, 516, 285,
	285, 286, 286, 137, 138, 138, 136, 131, 145, 145,
	145, 145, 145, 130, 135, 506, 512, 512, 512, 362,
	362, 359, 360, 360, 357, 356, 356, 356, 518, 518,
	517, 517, 517, 296, 296, 29, 352, 352, 354, 355,
	355, 355, 346, 346, 346, 346, 33, 350, 350, 351,
	351, 351, 351, 351, 347, 347, 349, 349, 345, 345,
	345, 345, 345, 32, 144, 144, 344, 344, 341, 341,
	339, 339, 340, 340, 338, 338, 338, 342, 342, 40,
	39, 39, 39, 343, 343, 31, 31, 31, 114, 113,
	113, 113, 284, 284, 283, 283, 115, 38, 215, 215,
	410, 410, 410, 410, 410, 428, 428, 428, 411, 411,
	411, 412, 412, 412, 413, 413, 413, 413, 413, 427,
	427, 429, 429, 429, 384, 384, 385, 385, 385, 388,
	388, 402, 402, 403, 403, 401, 401, 408, 408, 407,
	407, 406, 406, 405, 405, 404, 404, 404, 404, 399,
	399, 398, 398, 386, 386, 386, 386, 386, 387, 387,
	387, 397, 397, 400, 400, 225, 225, 259, 259, 223,
	223, 224, 224, 258, 258, 221, 221, 222, 222, 222,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 478, 478, 479, 227, 227,
	238, 238, 238, 238, 238, 238, 226, 226, 228, 228,
	204, 204, 202, 202, 195, 195, 196, 196, 197, 197,
	197, 201, 201, 200, 200, 200, 200, 198, 198, 199,
	199, 199, 199, 199, 199, 370, 370, 475, 475, 476,
	476, 471, 471, 471, 474, 474, 474, 474, 474, 477,
	477, 477, 473, 473, 205, 279, 279, 279, 297, 297,
	297, 297, 278, 278, 278, 220, 220, 219, 219, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 369, 369, 312, 312, 313, 313, 247, 246, 246,
	246, 246, 246, 244, 245, 243, 243, 243, 243, 243,
	242, 242, 241, 241, 241, 348, 348, 239, 239, 230,
	230, 230, 229, 229, 229, 409, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	277, 277, 277, 322, 322, 327, 327, 487, 487, 486,
	206, 206, 206, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 216, 216, 216, 393, 393, 393, 393, 394,
	394, 394, 394, 395, 395, 395, 391, 391, 392, 392,
	331, 332, 332, 434, 434, 389, 389, 390, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 441, 441, 441,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 498, 498, 498, 483,
	483, 483, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 275, 275, 275, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 333,
	333, 334, 334, 438, 438, 438, 438, 438, 438, 439,
	439, 440, 440, 440, 440, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 320, 272, 272, 272, 335, 328,
	328, 329, 329, 323, 323, 323, 323, 323, 323, 323,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 324, 324, 326, 326, 337, 337, 337, 336,
	336, 336, 336, 336, 336, 336, 218, 218, 218, 218,
	317, 317, 317, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 208, 208, 208, 208, 212,
	212, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 213, 213, 213, 213, 213,
	211, 211, 211, 211, 211, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 103, 104, 104, 210, 280, 280, 414, 414, 417,
	417, 415, 415, 416, 418, 418, 418, 419, 419, 419,
	420, 420, 420, 423, 423, 287, 287, 287, 293, 293,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 4, 5, 5, 6, 5, 5, 3,
	2, 2, 1, 3, 4, 3, 7, 5, 8, 2,
	2, 1, 3, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 2, 1, 3, 2, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 5, 3, 3, 2, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 6, 7,
	4, 4, 7, 8, 3, 3, 3, 0, 2, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 4, 3, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 6, 4, 4, 4, 4, 4,
	3, 6, 3, 5, 1, 1, 2, 2, 11, 8,
	9, 1, 3, 2, 4, 0, 2, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 4, 2, 1, 5,
	4, 4, 2, 5, 1, 3, 2, 1, 5, 4,
	4, 2, 0, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 1, 3, 4, 0, 1, 0, 1, 1,
	3, 1, 1, 0, 4, 1, 3, 2, 1, 0,
	8, 0, 4, 7, 4, 0, 2, 0, 2, 0,
	2, 0, 4, 1, 3, 1, 1, 5, 3, 4,
	6, 4, 5, 2, 3, 1, 3, 6, 0, 3,
	0, 1, 2, 4, 4, 0, 1, 3, 1, 3,
	3, 0, 1, 1, 0, 2, 2, 0, 2, 3,
	3, 3, 1, 3, 3, 3, 3, 1, 2, 2,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 7,
	7, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 2, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	4, 4, 3, 2, 2, 2, 3, 2, 3, 4,
	1, 3, 4, 0, 2, 1, 1, 2, 2, 0,
	1, 2, 4, 1, 3, 1, 3, 2, 3, 1,
	4, 3, 0, 1, 1, 2, 5, 2, 2, 2,
	0, 2, 3, 3, 0, 1, 3, 1, 3, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 1, 7,
	1, 3, 0, 1, 1, 3, 1, 3, 0, 1,
	1, 1, 12, 1, 3, 0, 1, 1, 3, 1,
	1, 2, 4, 1, 1, 9, 8, 7, 1, 2,
	2, 3, 3, 3, 0, 4, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 4, 1, 1, 3, 4,
	3, 0, 1, 1, 1, 0, 2, 7, 8, 8,
	0, 3, 3, 0, 2, 0, 3, 0, 5, 1,
	3, 0, 3, 3, 0, 2, 9, 6, 0, 2,
	2, 3, 3, 4, 4, 1, 0, 2, 2, 1,
	3, 2, 1, 3, 2, 1, 3, 2, 0, 1,
	3, 4, 3, 1, 1, 4, 1, 3, 1, 1,
	1, 1, 0, 1, 1, 1, 11, 0, 2, 3,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 6, 0, 4, 1, 1, 0, 3,
	0, 1, 1, 2, 4, 4, 4, 0, 1, 7,
	9, 10, 8, 0, 2, 11, 9, 11, 2, 2,
	4, 5, 1, 3, 0, 3, 5, 10, 0, 2,
	0, 3, 2, 4, 3, 0, 2, 1, 0, 2,
	3, 0, 2, 3, 0, 3, 2, 4, 3, 0,
	1, 0, 1, 1, 0, 6, 0, 3, 5, 0,
	4, 0, 3, 1, 3, 4, 5, 0, 3, 1,
	3, 2, 3, 1, 2, 0, 4, 6, 5, 0,
	2, 0, 2, 4, 5, 4, 5, 1, 5, 6,
	5, 0, 3, 0, 1, 1, 3, 3, 3, 0,
	4, 1, 3, 3, 3, 0, 1, 1, 3, 2,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 5, 4, 1, 3, 3, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 0, 1, 1, 3, 1, 1,
	1, 1, 1, 7, 9, 7, 9, 2, 1, 7,
	9, 7, 9, 8, 5, 0, 1, 0, 1, 1,
	1, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 3, 1, 3, 5, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 2, 1,
	2, 2, 1, 1, 2, 2, 2, 3, 3, 2,
	2, 1, 5, 6, 4, 1, 1, 1, 5, 4,
	1, 1, 2, 0, 1, 1, 2, 5, 0, 1,
	1, 2, 2, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 2, 2, 0, 3, 0, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 3, 5, 2, 2, 2, 2, 1, 1,
	2, 5, 6, 6, 6, 1, 1, 1, 1, 1,
	4, 4, 4, 0, 2, 0, 1, 1, 2, 4,
	1, 2, 2, 1, 2, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 5, 0, 1,
	3, 0, 1, 0, 2, 0, 1, 6, 8, 6,
	6, 5, 5, 5, 6, 6, 6, 6, 5, 6,
	6, 6, 6, 6, 6, 6, 6, 1, 1, 1,
	4, 4, 6, 8, 6, 4, 5, 4, 4, 4,
	3, 4, 6, 6, 7, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 8, 4, 2, 3, 2, 4, 2,
	2, 4, 6, 2, 2, 4, 6, 4, 2, 0,
	1, 2, 3, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 0,
	1, 1, 3, 3, 3, 3, 3, 2, 1, 1,
	3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	1, 3, 4, 4, 5, 4, 5, 3, 4, 5,
	6, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	1, 2, 3, 5, 1, 1, 3, 0, 1, 0,
	3, 0, 3, 3, 0, 3, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 1, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -527, -535, -2, -5, 588, -1, -4, -104, -78,
	-7, -106, -107, -8, -102, -9, -10, -12, -82, -97,
	-99, -101, -100, -41, -11, -96, -73, -74, -84, -90,
	-93, -94, -95, -108, -103, -105, -146, -109, 581, -79,
	-80, -81, -30, -29, -28, -27, -129, -134, 587, 435,
	13, 484, -13, -14, -488, -15, 254, -300, -301, -302,
	-304, -536, -42, -43, -44, -52, -53, -54, -55, -56,
	-66, -67, -68, -45, -46, -47, -50, -48, -59, -58,
	-60, -61, -62, -63, -64, -65, -49, -132, -133, -69,
	-51, -71, -70, -76, -72, -77, -131, -136, 229, -75,
	75, -85, -86, -87, -88, -89, -91, -92, 361, 367,
	424, 580, 60, -147, -149, 591, 157, 158, 160, 161,
	-31, -32, -33, -34, -35, -36, -38, -37, -39, -40,
	225, 15, 521, -16, -19, -17, -20, -18, -25, -26,
	-24, -21, -23, -130, -22, -135, 249, 248, 37, 315,
	316, 317, 365, 247, 226, 14, 30, 41, 341, -148,
	81, 227, -150, 12, 593, -6, -3, -2, -116, -120,
	-124, -127, -128, -125, -126, -4, -104, 115, 239, 582,
	-297, 357, 583, 585, 584, 84, 92, -290, -292, 361,
	367, 580, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 487,
	567, 568, 569, 570, 515, 339, 340, 518, 266, 290,
	392, 296, 303, 157, 176, 170, 198, 190, 165, 270,
	308, 271, 91, 160, 470, 105, 447, 421, 163, 285,
	287, 289, 516, 292, 291, 293, 295, 272, 342, 186,
	181, 284, 268, 179, 273, 39, 274, 203, 275, 276,
	523, 443, 338, 449, 300, 419, 180, 444, 288, 446,
	205, 209, 461, 462, 174, 175, 451, 464, 202, 246,
	42, 520, 258, 465, 207, 201, 197, 473, 304, 302,
	200, 173, 196, 269, 64, 211, 210, 212, 415, 416,
	417, 418, 277, 278, 355, 460, 193, 182, 343, 166,
	22, 468, 253, 448, 368, 279, 297, 305, 206, 208,
	260, 265, 522, 423, 264, 301, 466, 178, 257, 286,
	252, 469, 167, 370, 280, 161, 294, 463, 472, 63,
	383, 172, 164, 243, 158, 262, 267, 281, 282, 283,
	513, 307, 306, 298, 194, 259, 199, 184, 171, 195,
	159, 261, 471, 384, 578, 341, 402, 192, 189, 263,
	236, 467, 450, 162, 406, 385, 187, 309, 574, 575,
	576, 356, 337, 310, 311, 185, 250, 441, 442, 314,
	412, 330, 386, 422, 393, 387, 218, 318, 453, 455,
	204, 577, 319, 320, 321, 445, 322, 323, 324, 325,
	360, 55, 57, 93, 95, -375, -373, -297, 580, 367,
	361, 341, -189, -297, 592, -156, 38, -202, -297, -156,
	-75, -14, -13, -148, -149, -202, 233, -305, 23, 419,
	-83, 420, 229, 81, -297, -9, -95, -8, -102, -73,
	-146, 424, -303, -297, 315, 315, -303, 233, -297, 264,
	400, -425, 239, -379, -352, 265, -378, -354, -381, -355,
	31, 225, 227, 226, 261, 15, 365, 235, 13, 12,
	366, 247, 24, 25, 27, 14, 367, 369, 28, 370,
	373, 374, 375, 41, 378, 379, 254, 84, 92, 87,
	272, -188, -297, -329, -323, 112, 255, -325, -318, -319,
	-321, -467, -461, -316, 81, 139, 140, 147, 113, -320,
	-409, 35, 115, 530, 485, -273, -274, -275, -276, -277,
	-297, -462, -460, 87, 96, 99, 102, 103, 101, 100,
	151, 183, 98, 88, 152, -149, 84, -483, 539, -291,
	560, 567, 568, 569, 570, 559, 60, -432, -440, 232,
	-438, 150, 188, 250, 184, 13, 145, 412, 185, 536,
	556, 487, 540, 563, 532, 533, 534, 527, 528, 529,
	531, 541, 543, 555, -441, 551, 561, 562, 549, 564,
	565, 566, 86, 85, 554, 553, 542, 537, 538, 544,
	526, 535, 545, 546, 552, 557, 558, 349, 105, 350,
	351, 477, 342, 352, 239, 419, 69, 353, 354, 355,
	356, 357, 484, 358, 70, 359, 348, 254, 402, 360,
	187, 204, 489, 488, 490, 481, 478, 476, 479, 480,
	482, 483, 547, 548, 550, -110, -111, 572, -165, -166,
	-266, 11, 6, 7, 8, 9, -525, 421, 522, 162,
	159, -366, 162, 111, 167, 166, -366, 318, 260, 362,
	-139, 236, 339, 402, 322, 93, 264, -346, -344, 516,
	-343, -427, 312, 308, 234, -140, 244, 243, 106, 477,
	232, 108, 376, 303, 55, 57, -499, -500, 222, 223,
	224, -490, 510, -489, -297, 351, 95, 26, 233, 362,
	260, 455, 453, 454, 456, 457, 458, 459, -57, -442,
	-424, 450, 449, -309, 442, 448, 440, 452, 443, 340,
	324, 323, 225, 589, 511, -287, 386, 422, 474, 475,
	363, 423, 461, 463, 444, 105, 191, 188, 236, 233,
	339, 477, 402, 93, 322, -499, 159, 461, 463, 264,
	400, 40, -372, 412, -371, -373, 462, 473, 85, 86,
	460, -287, 105, 441, 441, -166, -266, -165, -147, -149,
	-105, -488, 234, 339, 402, 264, 235, 233, 514, 236,
	516, 477, 232, 315, 362, 260, 322, 93, -426, -496,
	31, -433, 219, 220, 221, 32, 33, -1, 119, 593,
	-323, -323, -6, 594, -6, -323, -297, -297, 154, -208,
	-212, -209, -211, -210, -214, -213, 188, 189, 150, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	30, 204, 250, 184, 185, 186, 187, 205, 170, 190,
	519, 213, 171, 214, 172, 215, 173, 216, 174, 175,
	217, 176, 179, 180, 181, 182, 178, 153, 81, 153,
	87, -172, 256, -202, 153, -172, -166, -165, -166, -202,
	-278, -297, 421, 122, -83, -83, 420, -491, -492, -493,
	-495, 229, 420, 419, 153, 272, 16, -303, -303, 79,
	-202, -354, 264, -379, -352, 35, 78, 154, 237, 154,
	78, 81, 363, 339, 402, 364, 477, 233, 376, 236,
	264, 377, 339, 402, 233, 236, 477, 264, 339, 233,
	236, 402, 264, 377, 440, 441, 236, 26, 368, 371,
	372, 441, -446, 473, 154, 111, 108, 109, 110, -323,
	129, -336, 122, 123, 124, 125, 126, 127, 128, 136,
	135, 146, 139, 140, 141, 142, 143, 144, 145, 137,
	138, 132, 112, 130, 134, 131, 114, -149, -323, -329,
	60, -321, -321, -321, -321, -409, -327, -323, 81, 81,
	153, 100, 87, -323, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, -439, 81, 81, -333,
	-334, 81, 81, -316, -278, 81, 87, 87, 81, 81,
	81, 87, -334, -334, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, -166, 154, 81, -112, 38,
	-168, 21, -150, -149, 20, 31, 32, 31, 32, 31,
	32, 31, 32, 96, 466, 521, 165, 166, 167, -187,
	-297, -189, -180, -297, 236, -140, 108, -341, 239, -341,
	-341, -341, -341, -341, 235, -341, -202, 514, 513, 233,
	233, 233, -341, 484, 122, 122, 58, -501, 169, 154,
	-490, -171, 81, -308, 130, 134, -308, 23, 262, 262,
	262, -308, 302, -537, -538, 16, 132, -306, -538, -306,
	-306, -308, -539, 235, 451, 42, 263, 262, -167, -168,
	-167, 445, 441, -396, 446, 447, -310, -538, -309, -308,
	-308, -309, -308, -308, -308, 233, 236, 477, 322, 590,
	-537, -537, 30, 30, -425, -202, -425, 511, -288, -297,
	-425, -425, -425, -502, 238, -532, -531, 464, -534, 466,
	159, -373, 159, -373, -354, 264, 264, 154, 122, 23,
	-374, 122, 133, -373, -373, -374, -374, -226, 40, -296,
	150, -297, 87, -226, 40, -529, -528, -202, -167, -150,
	-149, 82, 82, 82, -425, -425, -425, -425, -425, -427,
	-425, -425, -425, -425, -425, -303, -180, -189, 239, -425,
	-425, -151, -152, 141, -323, -297, -151, -3, -118, -117,
	116, 117, 119, 583, 357, 582, 586, 580, -373, 40,
	-420, 384, 383, -414, -416, 81, -415, 81, -415, -415,
	-415, 81, 81, -417, 81, -417, -417, -414, -418, 81,
	-418, -419, 81, -419, -418, -297, -328, -329, -297, 38,
	-435, 60, -146, 81, 30, 81, -297, -436, 60, -146,
	81, 30, -167, -112, -168, 153, 96, 87, -83, 82,
	154, -494, 102, 103, -497, 202, 194, -297, -98, 87,
	-7, -8, -9, -10, -41, -73, -146, -463, -461, 81,
	31, 411, 78, 16, -380, 233, 477, 362, 260, 236,
	339, -378, -361, -358, -356, -296, -354, -357, -356, -383,
	-278, 441, -113, 425, 314, -323, -323, -323, -323, -323,
	101, 112, 337, 102, 103, -318, -337, 31, 310, 311,
	-319, -319, -319, -319, -319, -319, -319, -319, -319, -319,
	-319, -319, -326, -335, -409, 81, 132, 130, 134, 131,
	114, -321, -321, -319, -319, 82, 154, -487, -486, 116,
	-323, -323, -297, -484, -485, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 353, 348, 354, 352,
	342, 360, 355, 356, 187, 508, 509, 502, 503, 504,
	505, 506, 507, -328, -328, -323, -484, -328, -272, 32,
	31, -329, -329, -329, 82, -323, -498, 335, 334, 336,
	-169, -297, -328, 82, 82, 82, 96, -329, -329, -328,
	-319, -328, -485, -272, -272, -272, 141, -329, -329, -272,
	-272, -272, -272, 141, -272, -272, -272, -272, -272, -272,
	-272, -272, 82, 82, 82, -167, -111, -444, -443, -323,
	40, 573, -112, -323, -164, -163, -323, -526, 87, 467,
	468, 163, 166, 165, 34, 81, 81, 153, -341, 484,
	-202, 112, -504, -297, -362, -359, -356, -297, -297, -352,
	-297, -297, 521, -341, 514, -341, -341, -341, -202, -237,
	52, 53, 54, -356, -141, 55, 56, -502, -489, 34,
	-170, -297, -262, 17, -321, -321, -356, 264, -537, -308,
	-308, -289, -288, -310, -305, -310, -310, -262, -538, -308,
	-308, -310, -306, -262, -297, 441, -262, -262, -396, -307,
	-297, -307, -341, -288, -289, -289, -202, -248, -249, 230,
	346, 347, 228, 226, 11, 227, -257, 303, -342, 485,
	-232, -233, 76, 41, -235, 388, 381, 266, 270, 91,
	271, 421, 272, 235, 274, 275, 276, 291, 293, 246,
	277, 278, 279, 412, 280, 158, 292, 281, 282, 283,
	364, -227, 6, 325, 40, 50, 51, 434, 433, 524,
	521, 267, -504, -504, 30, 30, -362, -297, -297, -159,
	-154, -158, -155, -160, -265, -267, -157, 81, -202, -149,
	-297, 154, 465, 467, 468, -532, -374, -532, -374, 31,
	411, -377, 411, 31, -352, -371, 461, 463, -367, 87,
	412, -357, -376, 78, 150, -443, -374, -374, -376, -376,
	149, 154, -530, 466, 467, 222, -112, -204, -202, -504,
	-361, -352, -297, -425, -204, -204, -204, -297, -297, 81,
	35, -297, -297, -261, 154, -260, 16, -298, -297, 34,
	87, 153, -261, -119, -117, 118, -323, -6, 582, -323,
	-6, -6, -323, -6, -323, -423, 385, 96, 96, -280,
	87, -280, 96, 96, 96, 82, 87, -365, 78, -437,
	-330, -482, 572, -174, 82, -169, -480, -481, -169, -173,
	-297, -437, -174, 82, -480, -112, -112, -297, 23, -83,
	-492, 153, 154, -170, -380, -360, -357, -382, 141, -297,
	-368, 154, 521, 597, 85, 237, -518, -517, 403, 82,
	154, -447, 238, 484, 87, 595, 218, 101, 337, 102,
	103, -409, -329, -326, -321, -321, -319, -319, -324, 251,
	-324, 111, -323, -322, -486, 118, -323, 34, 154, 79,
	153, 82, 82, 16, 16, 82, -323, 82, 82, 82,
	82, 16, 16, -323, 82, 153, 82, 82, 82, 82,
	79, 82, 154, 82, 154, -329, -323, -329, 82, 82,
	82, -323, -323, -323, -329, 82, -323, -323, -323, -323,
	-323, -323, -323, -323, -390, 436, -390, -390, 154, 82,
	87, 154, 22, 154, -161, 36, 37, 164, 167, 167,
	166, -188, -190, -191, -192, -193, -194, 132, 155, 156,
	-181, -182, -183, -184, -208, -278, 189, 192, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 250,
	184, 185, 186, 187, 205, 170, 190, 171, 172, 173,
	174, 175, 176, 179, 180, 181, 182, 178, -297, -202,
	-171, 35, -507, 389, -519, 154, 40, -517, 477, -137,
	314, -345, 79, -144, 16, 81, -202, -341, -202, -202,
	-202, -215, 34, 16, -153, -203, -297, 81, 82, 154,
	-323, -353, 79, -297, -289, -262, -262, -202, -297, -262,
	-262, -308, -310, -310, -306, 153, -288, -171, 154, -201,
	-294, -198, -200, 241, -313, -199, 244, -476, 242, 240,
	106, 245, 299, 107, 235, -294, -294, 241, -236, 237,
	34, -294, -251, 235, 299, 242, 20, -250, 235, 107,
	-297, 241, 245, 240, -293, 122, -287, 149, 237, 42,
	364, -293, 525, -293, -293, -293, -293, -293, -293, -293,
	273, 273, -293, -293, -293, -293, -293, -293, -293, -293,
	-293, -293, -293, 159, -293, -293, -293, -293, -293, -293,
	81, 268, 269, -508, 389, 30, 345, 345, -519, 30,
	-145, 339, 30, -268, -269, -270, -271, 67, 71, 73,
	68, 69, 70, 74, 30, 154, -295, -299, 34, -297,
	87, -295, -149, -154, -159, -295, 81, -531, -533, 469,
	466, 472, -376, -376, 237, 81, 122, -376, -376, 40,
	-296, -528, 473, 467, -179, 23, 154, 78, -204, -181,
	-189, -262, -152, -154, -297, 87, -297, 141, -262, 119,
	-6, 117, -123, -122, -121, 120, 580, 586, 119, 119,
	119, 82, 82, 82, 154, 82, 82, 82, 154, 82,
	154, -450, 446, 39, 154, 81, 82, 154, 60, 154,
	122, 82, 154, 82, 60, -179, 153, 421, -297, -461,
	82, -382, 154, 237, 153, 153, -358, 367, -296, -360,
	20, 521, -278, 38, -284, -283, 87, 595, 82, -324,
	-324, 111, -321, -318, 82, 119, -323, 117, -206, -208,
	383, 384, -207, -213, 150, 188, 250, 187, 186, 184,
	383, 384, -226, -297, -323, -323, 82, -323, -323, 16,
	-297, -226, -319, -323, -166, 82, 82, -389, -390, -389,
	-389, 82, 82, 82, 82, -389, 82, 82, 82, 82,
	82, 82, 82, 82, 81, -443, -450, -323, -323, -163,
	-162, 43, 167, 375, 82, 154, -278, 82, 154, -208,
	-171, 34, -510, 448, 391, 401, -293, -315, -314, 341,
	41, -430, 412, 397, 398, -359, 264, -297, -516, 94,
	122, 78, 329, 330, 331, 332, -339, -340, -338, -342,
	-504, -225, -259, -297, 87, 81, -223, 521, -202, 81,
	81, 81, -410, 319, -208, -202, -153, -297, 16, 154,
	-503, 153, -1, -297, -352, -308, -262, -538, -262, -308,
	-308, -310, -297, 34, -249, -205, -278, -199, -475, -476,
	-341, -297, 107, -475, 107, 81, -205, -278, -278, -252,
	-307, -278, -297, -297, -297, -255, -254, -278, -297, -297,
	-297, 107, 107, -231, 40, 47, 48, 49, -293, -293,
	191, -234, 40, 411, 413, 414, 96, 96, 96, 96,
	87, 87, 87, -293, -293, 96, 87, -299, 87, -477,
	166, 44, 45, 96, 96, 96, 96, 40, 87, -238,
	40, 284, 288, 285, 286, 287, 87, 96, 40, 96,
	40, 96, 40, -297, 81, -478, -479, 87, -510, -293,
	345, -373, 122, -315, -515, 314, -138, 91, 31, -175,
	230, 227, -504, -364, -363, -278, -158, -158, -158, -158,
	67, 67, 67, 72, 67, 72, 67, -270, -364, -160,
	-171, -299, 82, -524, -523, -522, -520, 75, 238, 76,
	-328, 466, 470, 471, -360, -311, 87, -367, 14, -202,
	-202, -429, 294, 295, 82, -264, 18, 153, -264, 115,
	-6, -119, -121, -323, -6, -323, 582, 357, 583, 87,
	96, 96, -458, 431, 426, 428, 107, -330, -445, -444,
	60, -146, -169, -437, -481, -443, -297, 60, -146, -437,
	-297, 96, 16, -357, -352, 141, 141, -297, 368, -368,
	87, 390, 87, 233, 596, 154, 122, -284, -318, -323,
	82, -216, 175, 174, -216, 82, -415, -415, -414, -417,
	-414, -216, -216, 82, 82, 23, 82, 82, 82, -323,
	82, 82, 154, -434, 486, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -332,
	-331, 256, -458, 44, 45, 87, 87, -192, -208, 231,
	-183, 40, 34, -146, -511, 91, -505, 87, -297, -512,
	91, 392, 152, 343, 40, 393, 394, 409, 338, 96,
	96, 399, -506, -297, -145, -514, 51, 122, 87, -202,
	-338, -287, 149, 275, 322, 82, 154, -293, -293, -195,
	-196, -197, -205, -198, -200, 34, 81, 81, -195, -195,
	-195, -411, 321, 20, 96, 140, -172, 79, 153, -154,
	-203, -297, 141, 82, -262, -297, -262, -262, -308, -146,
	-253, 44, 46, -208, -473, -297, -471, -473, -297, -471,
	-471, -341, -323, -253, -205, 237, 30, 227, -256, 327,
	328, -369, 300, 112, -369, 154, -161, -297, -226, -226,
	30, 87, 87, -204, 82, 154, 122, -511, -505, 122,
	-374, 87, -512, -516, 122, 87, 154, -175, -175, -262,
	154, 122, -177, -176, 78, 79, -178, 78, -176, 67,
	67, -262, -522, -521, 23, -476, -476, -476, 82, 82,
	-263, 19, 20, 141, -263, 119, 117, 119, 119, -297,
	82, 82, -421, 574, -454, -456, 426, 20, 20, 14,
	82, -437, -437, -352, -368, 412, -202, -283, 87, 596,
	-323, 82, -323, 82, 87, -166, 20, -421, -185, -208,
	-316, -146, -142, 521, 87, -509, 403, 87, 87, 96,
	40, 96, 152, 395, -431, -138, -513, 91, 122, 595,
	81, -293, -293, -293, -297, -259, -316, -316, 82, 154,
	-146, -224, -258, -297, 87, -195, 82, 82, 82, -412,
	255, 96, 140, 96, 140, 96, -295, -154, -297, -262,
	-503, 153, -262, -262, -278, -220, -219, -217, 101, 112,
	40, 381, -218, 91, 149, 289, 292, 291, 267, 290,
	-247, -312, 78, 387, 327, 328, -342, 574, 515, 240,
	106, 107, 369, -313, 81, 81, 79, 309, 81, 81,
	-473, 82, -253, -278, 40, -256, 40, 300, -254, 149,
	-226, 82, -479, 87, -509, 87, -376, -514, 87, -504,
	-166, -363, -443, -323, 81, -323, 81, 67, 11, 18,
	-323, -329, 239, -6, 583, 357, -240, 575, 87, 20,
	87, -452, 87, -364, -115, -448, -396, 82, 82, -389,
	-392, -391, -395, 432, 301, 439, -329, -240, 520, -142,
	-143, 59, 473, 20, 521, 342, 40, 96, 40, 396,
	87, 102, 103, -285, -286, 87, -347, -349, -278, 81,
	-226, -228, -296, 150, 87, -223, -197, 82, 154, -293,
	-293, 82, -221, -222, -257, -342, -114, -113, -221, -413,
	158, 96, 140, 96, 96, -262, -262, -217, 101, -319,
	87, -228, -229, 40, 288, 284, 122, 122, -230, 40,
	268, 269, -239, 81, 299, 14, 191, 81, 107, 107,
	-202, -347, -347, -474, 329, 330, 331, 333, 332, -474,
	-347, -347, 81, -370, -369, -319, -293, 149, -513, -167,
	-170, -472, -297, 240, 20, 20, -297, -297, -281, 576,
	96, 87, 428, -422, 577, -457, 431, -451, -449, 426,
	427, 428, 429, 82, -394, 114, 395, 399, -317, -320,
	96, 99, 183, 152, -281, -186, -297, 299, 87, 390,
	87, 342, 596, 154, 122, 82, 154, -414, -323, -258,
	-316, -316, -223, -384, 256, 154, -257, -287, -115, -384,
	-428, 166, 320, 521, 96, 140, 96, -166, 87, 87,
	96, 81, -438, 30, 87, -348, 81, 82, 82, 82,
	82, -347, -226, -293, 82, 82, 154, 81, 20, 87,
	-459, 238, -455, -456, 430, -449, 20, 428, 20, 20,
	-393, -394, 399, -317, -320, 572, 437, 437, 437, 34,
	368, 412, -286, 87, -350, -349, -161, 82, -385, 308,
	20, -257, -293, -385, 320, 96, 140, 96, -167, 82,
	-323, -333, -293, 82, -242, -241, 517, -347, -350, 79,
	-350, 79, -350, 79, -350, 79, 82, -226, -297, 240,
	-282, -297, -452, -466, 81, 96, -454, -453, -455, 20,
	-452, 20, -452, -452, 111, 438, 438, 438, 87, -351,
	246, 91, 521, 327, 328, -161, 20, -386, 301, 302,
	-387, -400, 304, -226, 96, 82, -297, -246, -244, -245,
	78, 444, 297, 298, 82, -474, -474, -474, -474, -247,
	82, 154, -470, 30, 82, -465, -464, -279, -460, -297,
	431, 432, 87, -452, -393, -293, 87, 326, -278, 81,
	-398, 305, 81, -396, 81, -396, 107, 330, -369, -245,
	78, -244, 78, 15, 14, -350, -350, -350, -350, -297,
	-469, -468, -467, 82, 154, 153, 96, -297, -383, -388,
	306, 96, -319, 81, -319, 81, -397, 303, 81, -243,
	294, 295, 30, 166, -243, 154, 122, -464, -297, 82,
	-402, 81, 20, 82, -383, 82, -383, 81, 122, -319,
	101, 40, 296, -468, 40, -323, 153, -403, -401, 256,
	-387, 82, 82, 82, -383, 96, 82, -297, 82, 154,
	-297, -399, 307, 82, -401, -404, 60, 96, -408, -405,
	81, -257, 258, 132, -408, -257, -407, -406, 306, 259,
	81, 82, 154, -297, 255, 81, -329, -406, -405, -329,
	82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 820, 821, 822, 823, 824, 825, 0, 0,
	0, 0, 594, 595, 0, 562, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 351, 352, 353, 354, 355, 356, 357, 0, 285,
	281, 206, 207, 208, 209, 210, 292, 293, 430, 0,
	0, 0, 0, 675, -2, 53, 274, 0, 265, 265,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	-2, 607, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 340, 341, 342, 336,
	337, 339, 338, -2, 0, 607, 0, 0, 0, 695,
	0, 0, 712, 734, 23, 0, 7, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 0, 0, 19,
	0, 19, 0, 0, 0, 1188, 1189, 1190, 1191, -2,
	1680, 1658, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850,
	1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1873, 1874, 1875, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 0, 258, 256, 1658, 1680,
	1740, 1773, 0, 840, 0, 653, 0, 658, 1142, 653,
	286, 596, 597, 695, 695, 560, 0, 322, 0, 1671,
	326, 0, 0, 0, 557, 316, 317, 318, 319, 320,
	321, 0, 0, 819, 0, 0, 312, 0, 280, 1731,
	0, 0, 0, 0, 0, 0, 150, 946, 152, 948,
	156, 163, 0, 0, 168, 169, 172, 173, 174, 175,
	176, 0, 180, 0, 182, 185, 0, 187, 188, 0,
	191, 192, 193, 0, 203, 204, 205, 949, 950, 951,
	-2, 81, 838, 1591, 1481, 0, 1488, 1489, 1500, 1511,
	1268, 1269, 1270, 1271, 0, 0, 0, 0, 0, 1278,
	1279, 0, 1295, 1837, 0, 1285, 1286, 1287, 1288, 1289,
	90, 102, 103, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	0, 1541, 1542, 1543, 1454, 1255, 1188, 0, 1846, 0,
	1866, 1871, 1872, 1873, 1874, 1865, 0, 0, 1439, 0,
	1429, 0, 0, -2, -2, 0, 0, 1798, -2, 1843,
	1862, 1870, 1847, 1869, 1839, 1840, 1841, 1834, 1835, 1836,
	1838, 1848, 1850, 1861, 0, 1857, 1867, 1868, 0, 0,
	0, 0, 104, 105, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1445, -2, 1447,
	1448, 1450, -2, 1452, 1453, -2, 1456, 1457, 1458, -2,
	-2, 1461, 1462, 1463, 1464, 1465, 1466, 1469, -2, -2,
	-2, -2, 1441, 1442, 1443, 1444, 1433, 1434, 1435, 1436,
	1437, 1438, -2, -2, -2, 695, 770, 0, -2, 0,
	0, 0, 717, 720, 723, 726, 0, 54, 55, 275,
	276, 264, 266, 0, 270, 0, 263, 0, 0, 0,
	0, 978, 978, 978, 978, 978, 978, 0, 978, 0,
	0, 0, 0, 0, 978, 868, 953, 954, 955, 976,
	977, 0, 1030, 0, 0, 0, 612, 608, 609, 610,
	611, 683, 0, 685, 688, 537, 537, 484, 0, 0,
	0, 537, 0, 498, 490, 0, 0, 0, 537, 0,
	0, 690, 690, 0, 540, 547, 537, 537, -2, 537,
	537, 537, 0, 0, 504, 505, 506, 490, 490, 509,
	510, 511, 522, 523, 548, 1615, 0, 0, 430, 0,
	430, 0, 430, 430, 430, 614, 1768, 1678, 1745, 1731,
	0, 0, 231, 1798, 236, 0, 1679, 1694, 0, 0,
	1712, 0, -2, 0, 302, 690, 0, 696, 0, 695,
	0, 0, 430, 430, 430, 430, 430, 1029, 430, 430,
	430, 430, 430, 0, 0, 0, 430, 430, 0, 0,
	735, 736, 731, 732, 733, 737, 738, 5, 6, 19,
	0, 0, 0, 0, 0, 0, 60, 59, 0, 1592,
	1610, 1546, 1547, 1548, 1597, 1550, 1601, 1601, 1601, 1601,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 0,
	0, 1590, 1570, 1599, 1599, 1599, 1597, 1594, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1604, 1604, 1607, 1607, 1604, 0, 1479, 0,
	0, 0, 0, 657, 0, 0, 690, -2, 0, 561,
	323, 1192, 0, 0, 327, 328, 0, 0, 343, 0,
	346, 331, 332, 333, 0, 130, 0, 314, 315, 0,
	0, 282, 0, 0, 0, 431, 0, 0, 0, 0,
	0, 0, 160, 157, 164, 167, 177, 184, 0, 196,
	198, 201, 158, 165, 170, 171, 178, 199, 159, 161,
	162, 166, 200, 202, 179, 183, 197, 181, 186, 189,
	190, 195, 0, 131, 0, 0, 0, 0, 0, 1487,
	0, 0, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 1481, 0,
	0, 1274, 1275, 1276, 1277, 1280, 0, 1296, 0, 0,
	0, 1540, 1544, 0, 1479, 1479, 0, 1479, 1475, 0,
	0, 0, 0, 0, 0, 1479, 1415, 0, 0, 1417,
	1430, 0, 0, 1419, 1420, 0, 1423, 1424, 1479, 0,
	1479, 1428, 1411, 1412, 0, 1475, 1475, 1475, 0, 0,
	1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475, 1475,
	1475, 1475, 0, 0, 0, 690, 0, 0, 678, 0,
	659, 0, 714, 716, 0, 718, 719, 721, 722, 724,
	725, 727, 728, 56, 0, 0, 268, 0, 273, 0,
	837, 0, 0, 853, 978, 869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 978, 0, 978,
	978, 978, 0, -2, 0, 0, 0, 614, 613, 0,
	684, 0, 0, 743, 0, 0, 483, 0, 490, 537,
	537, 496, 497, 492, 491, 543, 544, 540, 0, 540,
	540, 743, 0, 516, 517, 518, 537, 537, 524, 691,
	525, 526, 540, 0, 545, 546, 743, 0, 0, 743,
	743, 0, 534, 535, 536, 0, 0, 978, 0, 553,
	492, 492, 1616, 1617, 0, 987, 0, 0, 0, 556,
	0, 0, 0, 0, 615, 211, 214, 0, 217, 0,
	1768, 0, 1768, 0, 224, 0, 0, 0, 0, 0,
	0, 254, 255, 0, 0, 0, 0, 245, 248, 1136,
	1137, 943, 944, 249, 250, 294, 295, 0, 659, 713,
	715, 709, 710, 711, 0, 0, 0, 0, 0, 430,
	0, 0, 0, 0, 0, 590, 0, 592, 0, 0,
	0, 751, 745, 747, 814, 90, 751, 8, 77, 74,
	0, 19, 0, 0, 19, 19, 0, 19, 259, 0,
	1613, 1611, 1612, 1549, 1598, 0, 1575, 0, 1576, 1577,
	1578, 0, 0, 1571, 0, 1572, 1573, 1574, 1565, 0,
	1566, 1567, 0, 1568, 1569, 257, 0, 1480, 841, 0,
	632, 645, 627, 0, 634, 0, 1143, 616, 645, 618,
	0, 634, 659, 681, 659, 0, 324, 0, 329, 0,
	0, 345, 347, 348, 349, 334, 335, 558, 310, 311,
	303, 304, 305, 306, 307, 308, 309, 313, 100, 0,
	283, 284, 0, 0, 0, 144, 145, 146, 147, 148,
	149, 151, 135, 579, 581, 935, 947, 0, 938, 0,
	154, 194, 127, 0, 0, 1482, 1483, 1484, 1485, 1486,
	1490, 0, 1492, 1494, 1496, 1498, 0, 1516, -2, -2,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1501, 1514, 1515, 0, 0, 0, 0, 0,
	0, 1512, 1512, 1507, 0, 1272, 0, 1293, 1297, 0,
	0, 0, 91, 1474, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 0, 0, 1481, 0, 0, 0, 1476,
	1477, 0, 0, 0, 1370, 0, 0, 1376, 1377, 1378,
	0, 640, 0, 1440, 1416, 1431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 771, 0, 649, 651,
	652, 0, 679, 692, 697, 698, 701, 52, 57, 277,
	278, 0, 0, 272, 0, -2, 855, 0, 0, 870,
	688, 0, 0, 884, 428, 929, 0, 0, 0, 945,
	968, 974, 0, 0, 978, 0, 0, 0, 1008, 871,
	876, 877, 878, 872, 873, 879, 880, 0, 686, 0,
	0, 783, 482, 0, 538, 539, 487, 1731, 492, 743,
	743, 499, 493, 500, 542, 501, 502, 503, 0, 743,
	743, 537, 540, 527, 541, 540, 530, 531, 0, 549,
	554, 550, 0, 552, 507, 508, 688, 359, 360, 401,
	401, 401, 384, 401, 0, 0, 372, 1618, 0, 0,
	0, 0, 381, 1618, 0, 1618, 1618, 1618, 1618, 1618,
	1618, 1618, 0, 0, 1618, 1618, 1618, 1618, 1618, 1618,
	1618, 1618, 1618, 1618, 1618, 0, 1618, 1618, 1618, 1618,
	1618, 1122, 1618, 0, 988, 391, 392, 393, 394, 399,
	400, 0, 425, 0, 0, 0, 428, 0, 918, 756,
	0, 757, 758, 754, 785, 809, 809, 0, 809, 789,
	1142, 0, 0, 222, 223, 212, 0, 213, 0, 225,
	226, 0, 228, 229, 230, 237, 1678, 1745, 232, 234,
	0, 0, 238, 251, 252, 253, 0, 0, 243, 244,
	0, 0, 297, 298, 300, 0, 707, 576, 1140, 577,
	578, 582, 0, 0, 585, 586, 587, 588, 589, 855,
	0, 923, 924, 743, 0, 752, 0, 748, 815, 0,
	817, 0, 743, 0, 75, 19, 0, 68, 65, 0,
	0, 0, 0, 0, 1593, 1545, 1614, 0, 0, 0,
	1595, 0, 0, 0, 0, 58, 661, 623, 0, 626,
	642, 0, 646, 0, 0, 638, 631, 635, 0, 0,
	655, 617, 0, 0, 622, 707, 682, 1193, 0, 330,
	344, 0, 0, 0, 0, 138, 932, 0, 139, 143,
	133, 0, 0, 0, 937, 0, 934, 939, 0, 153,
	0, 0, 128, 129, 999, 1004, 0, 1491, 1493, 1495,
	1497, 1499, 0, 1502, 1512, 1512, 1508, 0, 1503, 0,
	1505, 0, 1482, 0, 1298, 0, 0, 0, 0, 0,
	0, 1360, 1361, 0, 0, 1365, 0, 1367, 1368, 1369,
	1371, 0, 0, 0, 1375, 0, 1414, 1432, 1418, 1421,
	0, 1425, 0, 1427, 0, 695, 0, 0, 1335, 1335,
	1335, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 1290, 0, 1291, 1292, 0, 772,
	661, 0, 0, 0, 704, 702, 703, 279, 267, 269,
	0, 0, 0, 843, 844, 846, 0, 849, 850, 851,
	0, 856, 857, 859, 860, 0, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1663, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 854, 688,
	0, 979, 891, 1618, 432, 0, 0, 931, 0, 907,
	0, 0, 0, -2, 0, 0, 1079, 0, 0, 0,
	0, 1010, 0, 0, 0, 601, 605, 23, 689, 0,
	744, 485, 0, 486, 537, 494, 495, 743, 1142, 519,
	520, 743, 537, 537, 540, 0, 551, 0, 987, 362,
	0, 1151, 1152, 402, 0, 1158, 1167, 978, 1225, 0,
	1167, 0, 0, 1169, 1170, 0, 0, 0, 0, 385,
	386, 0, 371, 0, 0, 0, 0, 370, 0, 0,
	412, 0, 0, 0, 0, 1619, 1618, 1618, 0, 379,
	380, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	1618, 1618, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1113, 0, 0, 0, 0, 0, 0,
	0, 1128, 1129, 891, 1618, 0, 0, 0, 432, 905,
	914, 0, 0, 0, 0, 0, 0, 776, 0, 0,
	775, 0, 0, 0, 0, 0, 688, 810, 0, 812,
	813, 787, -2, 0, 756, 792, 1479, 215, 216, 0,
	0, 221, 239, 241, 0, 0, 0, 240, 242, 246,
	247, 296, 299, 301, 677, 0, 0, 0, 1031, 0,
	593, 741, 746, 753, 816, 818, 91, 749, 741, 0,
	78, 19, 77, 69, 70, 0, 19, 0, 0, 0,
	0, 1603, 1602, 1588, 0, 1589, 1600, 1605, 0, 1608,
	0, 665, 0, 0, 645, 647, 0, 0, 645, 0,
	0, 654, 0, 0, 645, 680, 0, 0, 559, 101,
	350, 0, 0, 0, 0, 0, 580, 0, 936, 135,
	0, 0, 155, 0, 0, 1002, 0, 1004, 1478, 1504,
	1506, 0, 1513, 1509, 1273, 1281, 1294, 0, 0, 1300,
	1312, 1312, 0, 1303, 1601, 1601, 1306, 1597, 1599, 1597,
	1312, 1312, 0, 92, 0, 0, 1366, 0, 0, 0,
	641, 0, 0, 0, 1333, 1335, 1335, 1341, 1336, 1342,
	1343, 1335, 1335, 1335, 1335, 1348, 1335, 1335, 1335, 1335,
	1335, 1335, 1335, 1335, 1331, 650, 665, 693, 694, 699,
	700, 0, 271, 0, 0, 848, 0, 0, 0, 861,
	0, 0, 895, 892, 893, 894, 0, 926, 433, 434,
	435, 436, 0, 0, 0, 930, 0, 918, 900, 0,
	0, 0, 969, 970, 971, 972, 973, -2, 982, 0,
	0, 0, 1075, 1618, 1618, 1144, 0, 0, 0, 1144,
	1144, 1144, 1018, 0, 1009, 653, 0, -2, 0, 0,
	603, 0, 0, 784, 488, 743, 512, 0, 528, 743,
	743, 537, 555, 0, 361, 403, 0, 1157, 1182, 1168,
	1182, 1226, 1182, 1182, 978, 0, 403, 0, 0, 373,
	409, 0, 0, 0, 0, 369, 406, 701, 410, 411,
	413, 0, 415, 375, 387, 388, 389, 390, 0, 0,
	0, 382, 395, 396, 397, 398, 1090, 1091, 1092, 1095,
	1096, 1097, 1098, 0, 0, 1101, 1102, 1103, 1104, 1105,
	1179, 1180, 1181, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1130, 1131, 1132, 1133, 1134, 1135, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 0, 0, 1125, 0, 895, 0,
	0, 0, 0, 926, 907, 0, 917, 0, 919, 920,
	0, 0, 624, 743, 289, 0, 779, 773, 0, 762,
	777, 778, 765, 0, 767, 0, 763, 764, 743, 755,
	786, 811, 788, 791, 793, 794, 800, 0, 0, 0,
	0, 218, 219, 220, 227, 0, 452, 233, 708, 1141,
	583, 584, 1032, 1033, 591, 739, 0, 0, 739, 73,
	76, 0, 71, 0, 0, 0, 0, 63, 61, 1596,
	0, 0, 667, 115, 0, 0, 0, 643, 0, 648,
	645, 630, 639, 629, 636, 637, 656, 645, 621, 620,
	1194, 325, 0, 933, 135, 140, 141, 142, 136, 134,
	940, 0, 942, 0, 1000, 1004, 0, 0, 1510, 1299,
	1282, 1301, 1313, 1314, 1302, 1283, 1304, 1305, 1307, 1308,
	1309, 1310, 1311, 1284, 1362, 0, 1364, 1372, 1373, 0,
	1422, 1426, 0, 0, 0, 1339, 1340, 1344, 1345, 1346,
	1347, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 695,
	1332, 0, 667, 705, 706, 836, 839, 845, 847, 0,
	858, 0, 0, 874, 867, 0, 0, 886, 887, 897,
	0, 0, 0, 438, 439, 0, 0, 0, 451, 447,
	448, 449, 429, 925, 914, 903, 0, 0, 913, 0,
	983, 1618, 1618, 1618, 0, 989, 0, 0, 0, 0,
	1145, 1146, 1148, 1149, 1150, 0, 0, 1144, 0, 0,
	0, 1021, 0, 0, 1012, 0, 809, 0, 0, 743,
	602, 605, 606, 687, 489, 743, 532, 529, 743, 358,
	374, 404, 0, -2, 0, 1183, 0, 1171, 1183, 0,
	0, 1182, 0, 363, 403, 0, 0, 0, 416, 419,
	420, 417, 1221, 0, 418, 0, 408, 414, 1093, 1094,
	0, 1099, 1100, 0, 1124, 0, 0, 421, 0, 0,
	0, 422, 427, 900, 0, 915, 0, 921, 922, 695,
	0, 0, 759, 780, 0, 0, 760, 0, 761, 766,
	768, 288, 795, 0, 0, 797, 798, 799, 790, 235,
	729, 0, 0, 750, 730, 0, 19, 0, 0, 66,
	1606, 1609, 669, 0, 666, 116, 0, 0, 0, 0,
	644, 628, 619, 137, 132, 941, 118, 1003, 1005, 1001,
	0, 1374, 0, 1335, 1334, 1328, 0, 669, 0, 864,
	862, 874, 866, 881, 896, 885, 0, 927, 928, 0,
	440, 441, 0, 444, 450, 898, 899, 0, 0, 911,
	0, 0, 0, 0, 975, 1076, 1077, 1078, 1079, 0,
	992, 0, 1081, 1618, 1618, 0, -2, 0, -2, 1024,
	0, 1019, 0, 1011, 0, 1014, 743, 743, -2, 599,
	604, 0, 513, 533, 405, 1184, -2, 1197, 1199, 0,
	988, 1202, 1203, 0, 0, 0, 0, 0, 0, 1247,
	1211, 0, 0, 1215, 1216, 1217, 0, 0, 1220, 0,
	1528, 1529, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 1165, 364, 365, 0, 367, 368, 1222, 407, 1618,
	377, 1123, 1126, 1127, 426, 423, 424, 903, 906, 625,
	690, 290, 291, 781, 0, 774, 804, 801, 0, 0,
	740, 742, 67, 72, 0, 0, 671, 0, 668, 0,
	662, 664, 126, 633, 88, 109, 0, 1363, 1413, 1338,
	0, 1329, 0, 1323, 1324, 1325, 1330, 671, 0, 865,
	0, 882, 883, 0, 0, 437, 442, 0, 445, 446,
	904, 901, 902, 0, 909, 0, 0, 964, 1597, 0,
	984, 985, 1138, 1139, 986, 990, 1147, 1080, 0, 0,
	0, 1079, 1034, -2, 1087, 0, 996, 118, 1034, 1015,
	0, 1022, 0, 1020, 1013, 695, 600, 1198, 1200, 1201,
	1204, 1205, 1206, 1252, 1253, 1254, 0, 0, 1209, 1249,
	1250, 1251, 1210, 0, 0, 0, 0, 0, 1526, 1527,
	1245, 0, 0, 1172, 1174, 1175, 1176, 1177, 1178, 1173,
	0, 0, 0, 1164, 1166, 366, 0, 1618, 916, 287,
	0, 0, 805, 807, 802, 803, 62, 64, 79, 0,
	670, 117, 0, 80, 0, 106, 0, 119, 120, 0,
	0, 0, 0, 1337, 1326, 0, 0, 0, 0, 0,
	1530, 1531, 1532, 0, 660, 0, 863, 0, 888, 0,
	890, 443, 908, 911, 0, 957, 0, 701, 0, 1082,
	1083, 1084, 991, 1036, 0, 987, 1089, 1618, 998, 1036,
	1007, 0, 1017, 0, 1026, 0, 1023, 690, 1207, 1208,
	0, 0, 1429, 1618, 0, 1240, 0, 957, 957, 957,
	957, 0, 376, 0, 782, 796, 0, 0, 0, 89,
	93, 0, 115, 112, 0, 121, 0, 0, 0, 0,
	0, 1315, 0, 0, 0, 1319, 1320, 1321, 1322, 0,
	875, 889, 910, 912, 956, 965, 966, 701, 995, 0,
	1073, 1088, 0, 997, 1016, 1025, 0, 1028, 598, 1248,
	0, 1214, 0, 1219, 1228, 1241, 0, 0, 1153, 0,
	1155, 0, 1159, 0, 1161, 0, 0, 378, 806, 808,
	0, 673, 663, 82, 0, 0, 110, 111, 113, 0,
	122, 0, 124, 125, 0, 1316, 1317, 1318, 852, 958,
	1618, 0, 0, 962, 963, 967, 0, 1061, 0, 0,
	1067, 0, 1074, 1093, 1027, 1212, 1218, 1227, 1229, 1230,
	0, 1242, 1243, 1244, 1246, 957, 957, 957, 957, 1163,
	672, 0, 1006, 0, 94, 0, 96, 98, 99, 1185,
	107, 108, 114, 123, 1327, 0, 960, 0, 1037, 0,
	1039, 0, 0, 0, 0, 0, 1071, 0, 1213, 1231,
	0, 1232, 0, 0, 0, 1154, 1156, 1160, 1162, 674,
	83, 84, 0, 95, 0, 0, 959, 961, 0, 1041,
	0, 1062, 0, 0, 0, 0, 0, 0, 0, 1233,
	1235, 1236, 0, 0, 1234, 0, 0, 97, 1186, 1038,
	1035, 0, 1073, 1063, 0, 1065, 0, 0, 0, 0,
	1237, 1239, 1238, 85, 86, 87, 0, 0, 1043, 0,
	1059, 1064, 1066, 1068, 0, 1072, 1070, 1187, 1042, 0,
	1055, 1040, 0, 1069, 1044, -2, 0, 1060, 1045, -2,
	0, 1053, 0, 0, 1046, 1054, 0, 1049, 0, 0,
	0, 1048, 0, -2, 1056, 0, 0, 1050, -2, 0,
	1058, 1057,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 594, 593,
	123, 122, 124, 3, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 595, 135, 596, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:749
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:756
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:762
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:770
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:776
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:795
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:805
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:810
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:846
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:853
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:873
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:879
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:886
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:894
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:900
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:909
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:919
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:927
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:935
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:943
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:953
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:961
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:971
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:978
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:987
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1001
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1007
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1011
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1017
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1036
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1040
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1055
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1059
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1065
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1086
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1099
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1110
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1116
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1120
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1126
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1133
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1141
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1145
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1159
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1163
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1167
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1180
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1186
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1195
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1206
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1210
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1216
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1220
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1226
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1230
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1236
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1260
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1279
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1283
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1287
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1292
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1296
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1303
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1311
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1318
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1323
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1330
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1339
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1363
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1367
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1373
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1379
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1397
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1414
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1437
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1441
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1450
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1454
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1460
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1473
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1484
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1497
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1501
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1511
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1524
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1537
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1543
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1549
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1556
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1564
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1573
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1577
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1581
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1585
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1589
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1593
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1600
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1604
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1610
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1617
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1626
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1630
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1636
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1845
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1852
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1859
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1869
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1873
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1879
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1886
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1894
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1898
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1906
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1912
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1916
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1922
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1929
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1936
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1945
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1975
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1989
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1995
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2006
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2012
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2016
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2022
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2030
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2039
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2048
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2056
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2064
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2087
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2110
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2117
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2124
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2132
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2155
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2159
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2163
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2169
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2173
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2179
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2183
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2189
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2193
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2204
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2210
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2215
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2219
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2223
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2227
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2231
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2235
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2239
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2253
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2270
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2275
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2281
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2288
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2301
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2318
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2347
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2351
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2357
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2367
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2373
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2377
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2383
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2389
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2393
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2397
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2401
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2407
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2419
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2425
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2429
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2435
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2445
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2451
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2476
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2496
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2504
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2514
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2555
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2559
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2565
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2571
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2576
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2577
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2578
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2583
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2599
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2610
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2619
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2623
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2629
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2636
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2645
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2655
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2664
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2674
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2684
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2693
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2701
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2709
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2713
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2717
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2726
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2732
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2736
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2740
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2744
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2748
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2756
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2765
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2796
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2800
		{
			yyVAL.str = string("COLUMN")
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2805
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2811
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2817
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2826
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2830
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2836
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2843
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2851
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2858
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2865
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2879
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2886
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2901
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2917
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2921
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2928
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2940
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2948
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2956
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2969
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2975
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2986
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:2997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3001
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3006
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3010
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3015
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3019
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3035
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3039
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3043
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3051
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3101
		{
			yyVAL.item = nil
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3106
		{
			yyVAL.item = nil
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3146
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3152
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3160
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3164
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3168
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3181
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3187
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3192
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3196
		{
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3201
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3211
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3221
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3229
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3235
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3247
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3253
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3259
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3265
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3278
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3325
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3327
		{
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3336
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3346
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3359
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3363
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3369
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3381
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3387
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3396
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3406
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3418
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3428
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3440
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3454
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3460
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3467
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3472
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3476
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3480
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3485
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3489
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3495
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3508
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3512
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3518
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3523
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3527
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3537
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3543
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3547
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3553
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3559
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3563
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3567
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3573
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3577
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3601
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3610
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3619
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3628
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3632
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3638
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3647
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3656
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3666
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3670
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3677
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3682
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3688
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3692
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3698
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3713
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3720
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3731
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3736
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3743
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3759
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3772
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3783
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3787
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3793
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3798
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3805
		{
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3807
		{
		}
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3810
		{
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3819
		{
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3823
		{
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3828
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3837
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3844
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3850
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3858
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3865
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3872
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3892
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3902
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3906
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3912
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3919
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3925
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3933
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3940
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3947
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3966
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3970
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3979
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3983
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3989
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3998
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4002
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4008
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4012
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4018
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4022
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4028
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4033
		{
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4044
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4048
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4055
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4064
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4070
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4074
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4080
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4084
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4093
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4106
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4113
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4120
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4138
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4157
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4163
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4170
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4174
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4187
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4191
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4196
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4200
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4207
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4212
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4219
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4225
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4229
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4237
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4241
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4245
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4251
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4258
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4267
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4271
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4277
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4285
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4289
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4298
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4304
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4308
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4312
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4321
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4327
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4333
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4337
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4343
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4348
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4352
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4356
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4361
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4365
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4369
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4378
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4386
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4390
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4394
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4408
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4412
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4422
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4432
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4442
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4454
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4462
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4470
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4479
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4487
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4495
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4503
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4511
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4519
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4527
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4535
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4543
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4553
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4578
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4582
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4586
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4591
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4595
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4599
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4612
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4621
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4630
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4636
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4640
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4646
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4650
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4655
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4659
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4664
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4672
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4678
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4686
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4694
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4704
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4710
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4719
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4728
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4737
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4747
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4751
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4761
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4765
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4769
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4773
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4779
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4789
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4793
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4799
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4805
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4809
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4815
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4821
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4825
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4829
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4835
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4839
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4845
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4849
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4855
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4859
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4865
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4869
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4879
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4892
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4904
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4917
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4935
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4939
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4945
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4955
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4959
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4963
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4968
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4972
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4976
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4980
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4989
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4993
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4997
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5001
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5006
		{
			yyVAL.str = ""
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5010
		{
			yyVAL.str = yyDollar[1].str
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5014
		{
			yyVAL.str = yyDollar[2].str
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5020
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5026
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5030
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5034
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5038
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5042
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5048
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 836:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5084
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5094
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5100
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 839:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5106
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5116
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5121
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5127
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5134
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5138
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5144
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5150
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5155
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5159
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5163
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5167
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5174
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5186
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5191
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5197
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5204
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5208
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5214
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5220
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5224
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5228
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5234
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5240
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5246
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5255
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5266
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5278
		{
			yyVAL.str = yyDollar[1].str
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5282
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5288
		{
			yyVAL.str = "OR REPLACE"
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5292
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5296
		{
			yyVAL.str = "DEFINER = "
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5300
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5305
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5309
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5323
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5331
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5337
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5347
		{
			yyVAL.str = yyDollar[1].str
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5351
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5357
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5364
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5370
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5378
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5384
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5391
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5412
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5421
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5433
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5445
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5457
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5463
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5470
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5478
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5484
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5498
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5506
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5512
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5521
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5525
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5530
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5534
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5541
		{
			yyVAL.str = yyDollar[3].str
		}
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5546
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5550
		{
			yyVAL.str = yyDollar[2].str
		}
	case 916:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5556
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5570
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5580
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5584
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5590
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5596
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5602
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5611
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5620
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5629
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5634
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5640
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5648
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5754
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5758
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5764
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5774
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5778
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5784
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5794
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5798
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5802
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5811
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5817
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5824
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5830
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5839
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5846
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5855
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5859
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5865
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5879
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5883
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5887
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5892
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5896
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5900
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5904
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5910
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5929
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5933
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5955
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5959
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5963
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5967
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5971
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5977
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5981
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5987
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5997
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6001
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6005
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6009
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6013
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6019
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6034
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6044
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6048
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6057
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6063
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6067
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6073
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6077
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6081
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6096
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6105
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6116
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6127
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6138
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6142
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6148
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6160
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6169
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6182
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6189
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6199
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6207
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6218
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6222
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6227
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6231
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6238
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6249
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6262
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6276
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6284
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6291
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6298
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6305
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6312
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6316
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6320
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6328
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6335
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6342
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6346
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6353
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6364
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6371
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6378
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6385
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6396
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6405
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6409
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6414
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6418
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6428
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6432
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6439
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6450
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6459
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6463
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6469
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6473
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6479
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6488
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6498
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6502
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6508
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6512
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6518
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6525
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6534
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6538
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6547
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6552
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6556
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6561
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6565
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6575
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6579
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6590
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6598
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6606
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6614
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6625
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6634
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6644
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6654
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6658
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6667
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6673
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6677
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6683
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6687
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6696
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6702
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6706
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6712
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6716
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6725
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6731
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6735
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6739
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6745
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6749
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6753
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6757
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6761
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6765
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6769
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6798
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6802
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6806
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6810
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6814
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6818
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6822
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6826
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6830
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6834
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6838
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6842
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6846
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6850
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6854
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6858
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6862
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6866
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6870
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6874
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6878
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6882
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6888
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6892
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6898
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6904
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6908
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6914
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6918
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6922
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6926
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6930
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6934
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6948
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6952
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6961
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6966
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6972
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6979
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6983
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6989
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6993
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6997
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7003
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7007
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7013
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7022
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7031
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7054
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7079
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7093
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7099
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7108
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7117
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7126
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7135
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7145
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7153
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7159
		{
			yyVAL.str = ""
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7163
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7173
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7179
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7185
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7204
		{
			yyVAL.str = ""
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7208
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7214
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7220
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7224
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7228
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7234
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7238
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7242
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7246
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7252
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7256
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7260
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7269
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7275
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7279
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7289
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7293
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7297
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7301
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7305
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7310
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7326
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7330
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7334
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7338
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7342
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7346
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7359
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7363
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7367
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7375
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7379
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7385
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7389
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7394
		{
			yyVAL.str = ""
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7398
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7404
		{
			yyVAL.str = ""
		}
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7408
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1227:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7414
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7426
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7433
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7440
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7447
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7454
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7463
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7469
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7475
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7479
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7483
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7487
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7491
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7496
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7503
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7507
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7511
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7516
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7520
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7525
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7529
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7545
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7551
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7555
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7563
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7567
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7571
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7575
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7579
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7583
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7587
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7591
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7595
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7599
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7605
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7609
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7617
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7621
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7625
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7629
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7633
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7637
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7641
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7645
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7649
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7654
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7662
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7667
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7671
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7680
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7684
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7688
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7692
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7696
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7702
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7710
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7718
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7727
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7731
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7740
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7746
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7750
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7756
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7765
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7777
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7794
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7811
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7824
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7837
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7849
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7863
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7878
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7893
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7910
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7925
		{
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7932
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7936
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7940
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7946
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7950
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7954
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7958
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7964
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7968
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7972
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7978
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7986
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8000
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8007
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8016
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8021
		{
			yyVAL.str = ","
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8025
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8037
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8063
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8074
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8084
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8094
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8104
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8113
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8122
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8132
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8142
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8152
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8162
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8172
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8182
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8192
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8202
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8212
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8222
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8232
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8242
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8261
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8269
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8277
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8285
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8293
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8303
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8311
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8320
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8328
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8336
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8344
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8352
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8363
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8373
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8385
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8396
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8418
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8454
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8466
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8478
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8489
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8497
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8504
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8511
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8523
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8531
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8541
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8551
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8559
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8570
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8579
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8588
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8596
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8606
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8614
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8624
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8628
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8638
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8657
		{
		}
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8659
		{
		}
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8700
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8711
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8715
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8719
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8725
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8734
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8740
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8744
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8751
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8755
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8759
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8767
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8771
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8775
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8779
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8785
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8789
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8793
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8797
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8801
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8805
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8809
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8813
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8817
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8821
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8829
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8833
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8837
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8841
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8845
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8849
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8853
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8857
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8861
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8865
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8871
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8875
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8881
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8885
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8892
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8896
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8900
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8906
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8910
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8914
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8918
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8922
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8926
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8930
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8936
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8940
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8944
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8948
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8954
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8967
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8972
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8978
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8982
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8995
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9000
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9004
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9008
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9012
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9016
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9023
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9027
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9041
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9045
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9052
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9063
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9068
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9074
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9086
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9098
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9110
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9136
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9149
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9162
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9175
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9188
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9201
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9214
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9227
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9240
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9255
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9282
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9324
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9360
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9396
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9413
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9425
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9445
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9465
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9485
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9501
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9514
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9527
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9540
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9553
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9565
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9577
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9589
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9601
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9613
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9625
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9637
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9649
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9661
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9674
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9687
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9702
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9710
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9719
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9752
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9757
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9763
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9770
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9774
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9779
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9783
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9789
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9795
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9802
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9809
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9818
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9825
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9832
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9845
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9849
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9855
		{
		}
	case 1614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9857
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9867
		{
			yyVAL.str = ""
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9871
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
