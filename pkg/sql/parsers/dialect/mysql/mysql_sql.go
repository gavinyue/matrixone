// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const GEOMETRY = 57530
const POINT = 57531
const LINESTRING = 57532
const POLYGON = 57533
const GEOMETRYCOLLECTION = 57534
const MULTIPOINT = 57535
const MULTILINESTRING = 57536
const MULTIPOLYGON = 57537
const INT1 = 57538
const INT2 = 57539
const INT3 = 57540
const INT4 = 57541
const INT8 = 57542
const S3OPTION = 57543
const SQL_SMALL_RESULT = 57544
const SQL_BIG_RESULT = 57545
const SQL_BUFFER_RESULT = 57546
const LOW_PRIORITY = 57547
const HIGH_PRIORITY = 57548
const DELAYED = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const RETURNS = 57556
const SCHEMA = 57557
const TABLE = 57558
const SEQUENCE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const CONSTRAINT = 57567
const SPATIAL = 57568
const FULLTEXT = 57569
const FOREIGN = 57570
const KEY_BLOCK_SIZE = 57571
const SHOW = 57572
const DESCRIBE = 57573
const EXPLAIN = 57574
const DATE = 57575
const ESCAPE = 57576
const REPAIR = 57577
const OPTIMIZE = 57578
const TRUNCATE = 57579
const MAXVALUE = 57580
const PARTITION = 57581
const REORGANIZE = 57582
const LESS = 57583
const THAN = 57584
const PROCEDURE = 57585
const TRIGGER = 57586
const STATUS = 57587
const VARIABLES = 57588
const ROLE = 57589
const PROXY = 57590
const AVG_ROW_LENGTH = 57591
const STORAGE = 57592
const DISK = 57593
const MEMORY = 57594
const CHECKSUM = 57595
const COMPRESSION = 57596
const DATA = 57597
const DIRECTORY = 57598
const DELAY_KEY_WRITE = 57599
const ENCRYPTION = 57600
const ENGINE = 57601
const MAX_ROWS = 57602
const MIN_ROWS = 57603
const PACK_KEYS = 57604
const ROW_FORMAT = 57605
const STATS_AUTO_RECALC = 57606
const STATS_PERSISTENT = 57607
const STATS_SAMPLE_PAGES = 57608
const DYNAMIC = 57609
const COMPRESSED = 57610
const REDUNDANT = 57611
const COMPACT = 57612
const FIXED = 57613
const COLUMN_FORMAT = 57614
const AUTO_RANDOM = 57615
const ENGINE_ATTRIBUTE = 57616
const SECONDARY_ENGINE_ATTRIBUTE = 57617
const INSERT_METHOD = 57618
const RESTRICT = 57619
const CASCADE = 57620
const ACTION = 57621
const PARTIAL = 57622
const SIMPLE = 57623
const CHECK = 57624
const ENFORCED = 57625
const RANGE = 57626
const LIST = 57627
const ALGORITHM = 57628
const LINEAR = 57629
const PARTITIONS = 57630
const SUBPARTITION = 57631
const SUBPARTITIONS = 57632
const CLUSTER = 57633
const TYPE = 57634
const ANY = 57635
const SOME = 57636
const EXTERNAL = 57637
const LOCALFILE = 57638
const URL = 57639
const PREPARE = 57640
const DEALLOCATE = 57641
const RESET = 57642
const EXTENSION = 57643
const INCREMENT = 57644
const CYCLE = 57645
const MINVALUE = 57646
const PUBLICATION = 57647
const SUBSCRIPTIONS = 57648
const PUBLICATIONS = 57649
const PROPERTIES = 57650
const PARSER = 57651
const VISIBLE = 57652
const INVISIBLE = 57653
const BTREE = 57654
const HASH = 57655
const RTREE = 57656
const BSI = 57657
const ZONEMAP = 57658
const LEADING = 57659
const BOTH = 57660
const TRAILING = 57661
const UNKNOWN = 57662
const EXPIRE = 57663
const ACCOUNT = 57664
const ACCOUNTS = 57665
const UNLOCK = 57666
const DAY = 57667
const NEVER = 57668
const PUMP = 57669
const MYSQL_COMPATIBILITY_MODE = 57670
const MODIFY = 57671
const CHANGE = 57672
const SECOND = 57673
const ASCII = 57674
const COALESCE = 57675
const COLLATION = 57676
const HOUR = 57677
const MICROSECOND = 57678
const MINUTE = 57679
const MONTH = 57680
const QUARTER = 57681
const REPEAT = 57682
const REVERSE = 57683
const ROW_COUNT = 57684
const WEEK = 57685
const REVOKE = 57686
const FUNCTION = 57687
const PRIVILEGES = 57688
const TABLESPACE = 57689
const EXECUTE = 57690
const SUPER = 57691
const GRANT = 57692
const OPTION = 57693
const REFERENCES = 57694
const REPLICATION = 57695
const SLAVE = 57696
const CLIENT = 57697
const USAGE = 57698
const RELOAD = 57699
const FILE = 57700
const TEMPORARY = 57701
const ROUTINE = 57702
const EVENT = 57703
const SHUTDOWN = 57704
const NULLX = 57705
const AUTO_INCREMENT = 57706
const APPROXNUM = 57707
const SIGNED = 57708
const UNSIGNED = 57709
const ZEROFILL = 57710
const ENGINES = 57711
const LOW_CARDINALITY = 57712
const AUTOEXTEND_SIZE = 57713
const ADMIN_NAME = 57714
const RANDOM = 57715
const SUSPEND = 57716
const ATTRIBUTE = 57717
const HISTORY = 57718
const REUSE = 57719
const CURRENT = 57720
const OPTIONAL = 57721
const FAILED_LOGIN_ATTEMPTS = 57722
const PASSWORD_LOCK_TIME = 57723
const UNBOUNDED = 57724
const SECONDARY = 57725
const RESTRICTED = 57726
const USER = 57727
const IDENTIFIED = 57728
const CIPHER = 57729
const ISSUER = 57730
const X509 = 57731
const SUBJECT = 57732
const SAN = 57733
const REQUIRE = 57734
const SSL = 57735
const NONE = 57736
const PASSWORD = 57737
const SHARED = 57738
const EXCLUSIVE = 57739
const MAX_QUERIES_PER_HOUR = 57740
const MAX_UPDATES_PER_HOUR = 57741
const MAX_CONNECTIONS_PER_HOUR = 57742
const MAX_USER_CONNECTIONS = 57743
const FORMAT = 57744
const VERBOSE = 57745
const CONNECTION = 57746
const TRIGGERS = 57747
const PROFILES = 57748
const LOAD = 57749
const INFILE = 57750
const TERMINATED = 57751
const OPTIONALLY = 57752
const ENCLOSED = 57753
const ESCAPED = 57754
const STARTING = 57755
const LINES = 57756
const ROWS = 57757
const IMPORT = 57758
const DISCARD = 57759
const MODUMP = 57760
const OVER = 57761
const PRECEDING = 57762
const FOLLOWING = 57763
const GROUPS = 57764
const DATABASES = 57765
const TABLES = 57766
const SEQUENCES = 57767
const EXTENDED = 57768
const FULL = 57769
const PROCESSLIST = 57770
const FIELDS = 57771
const COLUMNS = 57772
const OPEN = 57773
const ERRORS = 57774
const WARNINGS = 57775
const INDEXES = 57776
const SCHEMAS = 57777
const NODE = 57778
const LOCKS = 57779
const ROLES = 57780
const TABLE_NUMBER = 57781
const COLUMN_NUMBER = 57782
const TABLE_VALUES = 57783
const TABLE_SIZE = 57784
const NAMES = 57785
const GLOBAL = 57786
const PERSIST = 57787
const SESSION = 57788
const ISOLATION = 57789
const LEVEL = 57790
const READ = 57791
const WRITE = 57792
const ONLY = 57793
const REPEATABLE = 57794
const COMMITTED = 57795
const UNCOMMITTED = 57796
const SERIALIZABLE = 57797
const LOCAL = 57798
const EVENTS = 57799
const PLUGINS = 57800
const CURRENT_TIMESTAMP = 57801
const DATABASE = 57802
const CURRENT_TIME = 57803
const LOCALTIME = 57804
const LOCALTIMESTAMP = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const REPLACE = 57809
const CONVERT = 57810
const SEPARATOR = 57811
const TIMESTAMPDIFF = 57812
const CURRENT_DATE = 57813
const CURRENT_USER = 57814
const CURRENT_ROLE = 57815
const SECOND_MICROSECOND = 57816
const MINUTE_MICROSECOND = 57817
const MINUTE_SECOND = 57818
const HOUR_MICROSECOND = 57819
const HOUR_SECOND = 57820
const HOUR_MINUTE = 57821
const DAY_MICROSECOND = 57822
const DAY_SECOND = 57823
const DAY_MINUTE = 57824
const DAY_HOUR = 57825
const YEAR_MONTH = 57826
const SQL_TSI_HOUR = 57827
const SQL_TSI_DAY = 57828
const SQL_TSI_WEEK = 57829
const SQL_TSI_MONTH = 57830
const SQL_TSI_QUARTER = 57831
const SQL_TSI_YEAR = 57832
const SQL_TSI_SECOND = 57833
const SQL_TSI_MINUTE = 57834
const RECURSIVE = 57835
const CONFIG = 57836
const DRAINER = 57837
const SOURCE = 57838
const STREAM = 57839
const HEADERS = 57840
const CONNECTOR = 57841
const MATCH = 57842
const AGAINST = 57843
const BOOLEAN = 57844
const LANGUAGE = 57845
const WITH = 57846
const QUERY = 57847
const EXPANSION = 57848
const WITHOUT = 57849
const VALIDATION = 57850
const ADDDATE = 57851
const BIT_AND = 57852
const BIT_OR = 57853
const BIT_XOR = 57854
const CAST = 57855
const COUNT = 57856
const APPROX_COUNT = 57857
const APPROX_COUNT_DISTINCT = 57858
const APPROX_PERCENTILE = 57859
const CURDATE = 57860
const CURTIME = 57861
const DATE_ADD = 57862
const DATE_SUB = 57863
const EXTRACT = 57864
const GROUP_CONCAT = 57865
const MAX = 57866
const MID = 57867
const MIN = 57868
const NOW = 57869
const POSITION = 57870
const SESSION_USER = 57871
const STD = 57872
const STDDEV = 57873
const MEDIAN = 57874
const STDDEV_POP = 57875
const STDDEV_SAMP = 57876
const SUBDATE = 57877
const SUBSTR = 57878
const SUBSTRING = 57879
const SUM = 57880
const SYSDATE = 57881
const SYSTEM_USER = 57882
const TRANSLATE = 57883
const TRIM = 57884
const VARIANCE = 57885
const VAR_POP = 57886
const VAR_SAMP = 57887
const AVG = 57888
const RANK = 57889
const ROW_NUMBER = 57890
const DENSE_RANK = 57891
const NEXTVAL = 57892
const SETVAL = 57893
const CURRVAL = 57894
const LASTVAL = 57895
const ARROW = 57896
const ROW = 57897
const OUTFILE = 57898
const HEADER = 57899
const MAX_FILE_SIZE = 57900
const FORCE_QUOTE = 57901
const PARALLEL = 57902
const UNUSED = 57903
const BINDINGS = 57904
const DO = 57905
const DECLARE = 57906
const LOOP = 57907
const WHILE = 57908
const LEAVE = 57909
const ITERATE = 57910
const UNTIL = 57911
const CALL = 57912
const SPBEGIN = 57913
const BACKEND = 57914
const SERVERS = 57915
const KILL = 57916
const QUERY_RESULT = 57917

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"KILL",
	"QUERY_RESULT",
	"';'",
	"':'",
	"'{'",
	"'}'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10327

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 114,
	21, 694,
	-2, 675,
	-1, 130,
	233, 1028,
	235, 951,
	-2, 992,
	-1, 153,
	42, 514,
	235, 514,
	262, 521,
	263, 521,
	451, 514,
	-2, 547,
	-1, 189,
	594, 1737,
	-2, 430,
	-1, 519,
	314, 130,
	425, 130,
	-2, 1649,
	-1, 582,
	81, 1447,
	-2, 1791,
	-1, 583,
	81, 1465,
	-2, 1762,
	-1, 587,
	81, 1466,
	-2, 1790,
	-1, 613,
	81, 1377,
	-2, 1857,
	-1, 614,
	81, 1378,
	-2, 1856,
	-1, 615,
	81, 1379,
	-2, 1846,
	-1, 616,
	81, 1820,
	-2, 1841,
	-1, 617,
	81, 1821,
	-2, 1842,
	-1, 618,
	81, 1822,
	-2, 1848,
	-1, 619,
	81, 1823,
	-2, 1830,
	-1, 620,
	81, 1824,
	-2, 1839,
	-1, 621,
	81, 1825,
	-2, 1849,
	-1, 622,
	81, 1826,
	-2, 1850,
	-1, 623,
	81, 1827,
	-2, 1855,
	-1, 624,
	81, 1828,
	-2, 1860,
	-1, 625,
	81, 1829,
	-2, 1861,
	-1, 627,
	81, 1444,
	-2, 1638,
	-1, 631,
	81, 1449,
	-2, 1650,
	-1, 634,
	81, 1453,
	-2, 1668,
	-1, 638,
	81, 1457,
	-2, 1708,
	-1, 639,
	81, 1458,
	-2, 1786,
	-1, 647,
	81, 1468,
	-2, 1771,
	-1, 648,
	81, 1469,
	-2, 1815,
	-1, 649,
	81, 1470,
	-2, 1781,
	-1, 650,
	81, 1471,
	-2, 1805,
	-1, 661,
	81, 1355,
	-2, 1851,
	-1, 662,
	81, 1356,
	-2, 1852,
	-1, 663,
	81, 1357,
	-2, 1853,
	-1, 667,
	21, 695,
	-2, 658,
	-1, 747,
	446, 547,
	447, 547,
	-2, 515,
	-1, 791,
	122, 1638,
	133, 1638,
	153, 1638,
	-2, 1613,
	-1, 895,
	21, 695,
	-2, 658,
	-1, 995,
	21, 694,
	-2, 1253,
	-1, 1111,
	513, 993,
	514, 993,
	-2, 869,
	-1, 1365,
	81, 1515,
	-2, 1788,
	-1, 1366,
	81, 1516,
	-2, 1789,
	-1, 1502,
	82, 841,
	-2, 847,
	-1, 1882,
	82, 1599,
	154, 1599,
	-2, 1773,
	-1, 1883,
	82, 1599,
	154, 1599,
	-2, 1772,
	-1, 1884,
	82, 1577,
	154, 1577,
	-2, 1759,
	-1, 1885,
	82, 1578,
	154, 1578,
	-2, 1764,
	-1, 1886,
	82, 1579,
	154, 1579,
	-2, 1696,
	-1, 1887,
	82, 1580,
	154, 1580,
	-2, 1690,
	-1, 1888,
	82, 1581,
	154, 1581,
	-2, 1629,
	-1, 1889,
	82, 1582,
	154, 1582,
	-2, 1761,
	-1, 1890,
	82, 1583,
	154, 1583,
	-2, 1694,
	-1, 1891,
	82, 1584,
	154, 1584,
	-2, 1689,
	-1, 1892,
	82, 1585,
	154, 1585,
	-2, 1682,
	-1, 1894,
	82, 1588,
	154, 1588,
	-2, 1805,
	-1, 1895,
	82, 1568,
	154, 1568,
	-2, 1791,
	-1, 1896,
	82, 1597,
	154, 1597,
	-2, 1762,
	-1, 1897,
	82, 1597,
	154, 1597,
	-2, 1790,
	-1, 1898,
	82, 1597,
	154, 1597,
	-2, 1651,
	-1, 1899,
	82, 1595,
	154, 1595,
	-2, 1781,
	-1, 1900,
	82, 1592,
	154, 1592,
	-2, 1673,
	-1, 1901,
	81, 1549,
	82, 1549,
	154, 1549,
	383, 1549,
	384, 1549,
	385, 1549,
	-2, 1628,
	-1, 1902,
	81, 1550,
	82, 1550,
	154, 1550,
	383, 1550,
	384, 1550,
	385, 1550,
	-2, 1630,
	-1, 1903,
	81, 1553,
	82, 1553,
	154, 1553,
	383, 1553,
	384, 1553,
	385, 1553,
	-2, 1763,
	-1, 1904,
	81, 1555,
	82, 1555,
	154, 1555,
	383, 1555,
	384, 1555,
	385, 1555,
	-2, 1746,
	-1, 1905,
	81, 1557,
	82, 1557,
	154, 1557,
	383, 1557,
	384, 1557,
	385, 1557,
	-2, 1695,
	-1, 1906,
	81, 1559,
	82, 1559,
	154, 1559,
	383, 1559,
	384, 1559,
	385, 1559,
	-2, 1678,
	-1, 1907,
	81, 1560,
	82, 1560,
	154, 1560,
	383, 1560,
	384, 1560,
	385, 1560,
	-2, 1679,
	-1, 1908,
	81, 1562,
	82, 1562,
	154, 1562,
	383, 1562,
	384, 1562,
	385, 1562,
	-2, 1627,
	-1, 1909,
	82, 1602,
	154, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	-2, 1656,
	-1, 1910,
	82, 1602,
	154, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	-2, 1669,
	-1, 1911,
	82, 1605,
	154, 1605,
	383, 1605,
	384, 1605,
	385, 1605,
	-2, 1652,
	-1, 1912,
	82, 1605,
	154, 1605,
	383, 1605,
	384, 1605,
	385, 1605,
	-2, 1711,
	-1, 1913,
	82, 1602,
	154, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	-2, 1731,
	-1, 1929,
	105, 986,
	149, 986,
	188, 986,
	191, 986,
	275, 986,
	-2, 979,
	-1, 2068,
	21, 694,
	-2, 788,
	-1, 2263,
	105, 986,
	149, 986,
	188, 986,
	191, 986,
	275, 986,
	-2, 980,
	-1, 2283,
	79, 604,
	154, 604,
	-2, 1140,
	-1, 2619,
	191, 986,
	299, 1221,
	-2, 1193,
	-1, 2761,
	105, 986,
	149, 986,
	188, 986,
	191, 986,
	-2, 1083,
	-1, 2763,
	105, 986,
	149, 986,
	188, 986,
	191, 986,
	-2, 1083,
	-1, 2773,
	79, 604,
	154, 604,
	-2, 1141,
	-1, 2781,
	191, 986,
	299, 1221,
	-2, 1194,
	-1, 2907,
	105, 986,
	149, 986,
	188, 986,
	191, 986,
	-2, 1084,
	-1, 3268,
	82, 1046,
	154, 1046,
	-2, 986,
	-1, 3272,
	82, 1046,
	154, 1046,
	-2, 986,
	-1, 3286,
	82, 1050,
	154, 1050,
	-2, 986,
	-1, 3291,
	82, 1051,
	154, 1051,
	-2, 986,
}

const yyPrivate = 57344

const yyLast = 37735

var yyAct = [...]int{
	549, 1583, 3272, 3271, 3280, 3251, 180, 1346, 3143, 530,
	1284, 528, 551, 3204, 3169, 3222, 3151, 2637, 3077, 3152,
	538, 2856, 3063, 3055, 2947, 2861, 2795, 1027, 1205, 1860,
	3081, 2892, 2700, 2701, 2891, 2889, 2982, 579, 668, 436,
	1342, 1146, 3016, 2272, 2758, 2972, 790, 2859, 1274, 442,
	1537, 447, 447, 3064, 3066, 2906, 2742, 447, 463, 472,
	1349, 1970, 472, 2896, 2782, 532, 2587, 2728, 2851, 2399,
	2400, 2731, 1672, 2382, 2571, 2634, 2322, 2623, 2286, 2268,
	2616, 165, 2392, 2698, 2585, 2161, 1766, 1735, 1880, 2686,
	2909, 2398, 2421, 1637, 2669, 1973, 2395, 2254, 2552, 1645,
	2550, 477, 2555, 1941, 2264, 2622, 2588, 1878, 1684, 2458,
	1198, 521, 889, 1669, 1270, 2046, 527, 54, 2160, 2062,
	1870, 1744, 522, 1743, 1484, 1762, 2110, 1665, 36, 1736,
	1709, 483, 2441, 723, 1761, 2497, 2063, 2000, 1640, 796,
	1119, 2243, 2051, 2238, 2304, 1638, 1566, 1283, 1095, 1575,
	446, 446, 6, 1971, 176, 8, 454, 436, 175, 7,
	1940, 1345, 1512, 1492, 843, 1794, 2090, 2127, 1340, 1763,
	1239, 1275, 441, 1214, 531, 1920, 1876, 1548, 1278, 113,
	180, 35, 180, 784, 834, 835, 469, 2590, 1773, 2589,
	1265, 520, 1184, 2204, 1395, 1379, 1331, 1742, 794, 906,
	754, 529, 522, 1739, 26, 1725, 1246, 539, 15, 1549,
	13, 783, 14, 1339, 1183, 32, 1121, 1511, 2070, 1966,
	1135, 1699, 435, 459, 1131, 722, 1539, 456, 1401, 1154,
	665, 1400, 1181, 485, 23, 16, 10, 1066, 486, 1147,
	166, 1238, 720, 704, 159, 700, 162, 1090, 1770, 471,
	3007, 2491, 2491, 2203, 667, 1780, 742, 2745, 2163, 2693,
	2116, 830, 468, 832, 2113, 1253, 464, 2114, 466, 2111,
	467, 827, 827, 465, 831, 1249, 826, 827, 800, 164,
	443, 1028, 2785, 1167, 2849, 1251, 964, 965, 966, 963,
	1155, 2454, 964, 965, 966, 963, 2452, 1714, 2978, 452,
	2973, 2852, 2699, 1488, 1022, 3068, 1738, 666, 2008, 2302,
	676, 475, 163, 50, 155, 131, 3134, 825, 3027, 8,
	2797, 2271, 2878, 7, 163, 163, 163, 1082, 927, 163,
	2148, 2156, 2273, 2788, 1767, 2729, 1519, 2873, 163, 1421,
	797, 163, 799, 2783, 1298, 163, 3099, 1291, 2805, 2806,
	163, 50, 155, 131, 2784, 1106, 1105, 1521, 481, 2520,
	1778, 1506, 3028, 1111, 1924, 2088, 2876, 163, 50, 155,
	131, 961, 112, 2473, 1295, 482, 1163, 1288, 2089, 1164,
	1682, 160, 1083, 2428, 2429, 2427, 2466, 1316, 1185, 112,
	1187, 2789, 1649, 160, 160, 1297, 763, 656, 1290, 655,
	657, 658, 2076, 659, 660, 2075, 1143, 160, 2077, 2128,
	160, 677, 1650, 1651, 160, 2240, 772, 1496, 1497, 160,
	1152, 1153, 669, 935, 1150, 2241, 937, 1562, 1149, 1152,
	1153, 1332, 3155, 3156, 1336, 954, 160, 3187, 1348, 3185,
	2869, 959, 793, 792, 3071, 3130, 447, 3070, 3129, 3069,
	3128, 3071, 942, 3070, 938, 943, 447, 899, 1335, 3069,
	2980, 815, 1851, 3173, 3174, 1166, 2983, 2984, 2985, 2986,
	2459, 3133, 2239, 3057, 472, 472, 2702, 447, 2702, 2460,
	3057, 2461, 2804, 945, 1974, 3060, 2976, 1351, 909, 2143,
	900, 894, 896, 2338, 1417, 1666, 3074, 2711, 1656, 1327,
	1414, 2883, 2732, 1774, 1416, 1413, 1415, 1419, 1420, 2793,
	1252, 1250, 1418, 2739, 2040, 1919, 1722, 2564, 711, 1259,
	1258, 2229, 2566, 837, 2246, 130, 2556, 161, 2807, 931,
	1660, 2790, 2794, 2792, 2791, 957, 958, 1337, 3073, 2484,
	956, 909, 2153, 2850, 997, 891, 3002, 153, 2453, 2006,
	2486, 930, 3136, 3137, 933, 897, 768, 1435, 940, 767,
	1334, 893, 2994, 2386, 3180, 2995, 936, 939, 3005, 2799,
	2800, 2868, 2561, 2562, 2560, 2043, 918, 2042, 2870, 3154,
	800, 899, 795, 516, 2047, 2880, 518, 3189, 2563, 469,
	469, 517, 932, 895, 2258, 2259, 2260, 2261, 1350, 1141,
	810, 806, 801, 805, 807, 2580, 1779, 2635, 2636, 2819,
	2598, 2807, 922, 3024, 3087, 1357, 1360, 1361, 2997, 474,
	1165, 941, 2279, 2786, 1680, 1681, 1358, 2812, 813, 2798,
	1175, 473, 804, 1783, 1785, 1786, 2391, 3265, 1926, 952,
	953, 3184, 797, 3082, 799, 773, 1031, 3281, 3213, 2996,
	3145, 800, 3220, 480, 1424, 1425, 1426, 1427, 1428, 1429,
	1422, 1423, 769, 1130, 3001, 468, 468, 934, 2938, 464,
	464, 466, 466, 467, 467, 1333, 465, 465, 911, 910,
	2822, 3245, 2017, 811, 902, 903, 2558, 1088, 442, 1091,
	814, 2927, 3006, 2715, 2490, 1768, 944, 1768, 2016, 447,
	913, 1768, 2252, 1063, 2366, 3141, 3142, 802, 3145, 2994,
	2037, 2038, 2995, 797, 1194, 799, 2639, 919, 1193, 3225,
	1145, 1144, 723, 915, 916, 771, 920, 2989, 3282, 3288,
	812, 911, 910, 827, 827, 1128, 999, 1000, 1001, 1002,
	1127, 827, 827, 3026, 2933, 3252, 3135, 1126, 1003, 827,
	827, 2948, 2949, 2950, 2952, 2951, 3276, 2803, 2112, 3017,
	1769, 2273, 470, 1781, 1254, 2997, 898, 3025, 1151, 447,
	803, 1177, 890, 2537, 2765, 904, 1795, 436, 436, 470,
	2877, 1976, 2092, 1148, 1969, 2847, 436, 436, 1096, 481,
	1209, 1209, 3054, 447, 1182, 666, 2996, 2631, 1104, 2149,
	770, 2080, 1152, 1153, 1152, 1153, 927, 1986, 2423, 2425,
	3190, 2004, 472, 1091, 442, 1142, 2802, 1242, 1242, 1211,
	1667, 132, 51, 2879, 2245, 2567, 1771, 2557, 180, 1102,
	1207, 1207, 2157, 132, 132, 132, 1216, 436, 132, 51,
	1097, 1098, 1099, 1100, 1101, 809, 1103, 132, 1979, 3003,
	132, 1359, 1110, 2487, 132, 3226, 921, 2884, 2489, 132,
	1089, 2990, 1109, 1108, 2339, 3065, 2340, 2341, 1173, 1784,
	1040, 1041, 523, 1107, 476, 795, 132, 2559, 1657, 1328,
	2249, 2250, 3275, 1782, 808, 2545, 1282, 2940, 1285, 926,
	1032, 1260, 1215, 1293, 2632, 2248, 2635, 2636, 1203, 1204,
	713, 2336, 714, 3287, 2638, 818, 823, 824, 1068, 1116,
	1659, 1989, 2228, 1314, 1864, 1975, 1070, 1969, 1991, 1086,
	1977, 1499, 2438, 2439, 717, 718, 719, 1209, 947, 1209,
	899, 948, 1500, 1093, 1863, 2929, 1299, 1498, 667, 2928,
	1309, 1310, 1124, 2499, 2498, 2357, 2358, 1129, 2367, 2369,
	2370, 2371, 2368, 1094, 1139, 678, 1137, 1138, 2029, 950,
	1189, 1191, 1157, 1158, 1118, 1160, 1161, 1162, 679, 1201,
	1202, 2424, 2934, 2935, 1978, 1990, 1980, 1272, 1273, 670,
	1176, 1168, 1169, 3223, 3224, 2914, 1234, 1866, 1865, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1156, 1084, 1085, 1159, 1390, 1391, 800, 2990, 1399,
	1985, 800, 2991, 3294, 1983, 3293, 715, 1192, 1289, 3228,
	1255, 962, 1296, 1448, 1132, 1136, 1136, 1136, 1438, 1439,
	1440, 2060, 1313, 469, 946, 1263, 3284, 1266, 1267, 2284,
	1312, 1454, 1217, 1323, 1455, 452, 2180, 1132, 1132, 1457,
	828, 829, 1227, 1277, 1344, 833, 1281, 1464, 1465, 1243,
	1233, 1232, 1280, 1540, 2666, 927, 1873, 2356, 1244, 3266,
	1976, 1979, 951, 2130, 884, 880, 881, 882, 883, 2662,
	2185, 1092, 2184, 2183, 2181, 962, 1362, 962, 1341, 1874,
	1875, 2633, 1325, 820, 821, 822, 447, 949, 1510, 1209,
	1514, 1515, 682, 1517, 1518, 1482, 1540, 1702, 3285, 468,
	2755, 447, 1330, 464, 1209, 466, 3261, 467, 723, 1322,
	465, 1538, 962, 1319, 1854, 1318, 1209, 2148, 1305, 3255,
	764, 3254, 1177, 1300, 764, 667, 1301, 463, 1485, 1826,
	3232, 1776, 1825, 3206, 1447, 3249, 2182, 3163, 712, 1321,
	1320, 1317, 1329, 681, 3157, 2061, 1561, 684, 683, 1338,
	1430, 1431, 3109, 1434, 1567, 1567, 1343, 1177, 3048, 1177,
	1177, 1449, 774, 447, 2003, 1510, 1510, 2285, 2578, 1209,
	1634, 1635, 1647, 3208, 1456, 1565, 1458, 3047, 3262, 1509,
	3043, 1922, 670, 1388, 1389, 1507, 436, 1381, 1209, 1980,
	2061, 1776, 3042, 1776, 1975, 1969, 1974, 2603, 1972, 1977,
	1525, 3041, 1776, 766, 962, 3207, 765, 766, 3040, 3164,
	765, 1858, 3009, 447, 1510, 1209, 3010, 1689, 925, 447,
	447, 1693, 1694, 1516, 3010, 2641, 1133, 1697, 1698, 1347,
	3049, 1505, 1704, 2666, 2902, 1700, 1433, 2826, 2650, 180,
	927, 2061, 180, 180, 1520, 180, 1522, 1523, 1524, 1945,
	1513, 2234, 3010, 1978, 1585, 2231, 1629, 1630, 2135, 2581,
	2418, 1459, 1573, 2092, 3010, 1530, 1767, 2210, 2202, 2186,
	2187, 1648, 2285, 3010, 2164, 1964, 1859, 1543, 2146, 1830,
	3010, 1448, 1448, 1746, 3010, 1483, 1758, 2139, 1448, 1448,
	1653, 1678, 1655, 1753, 2579, 1921, 1489, 964, 965, 966,
	963, 1568, 1673, 1674, 1569, 1686, 2903, 1675, 1676, 2092,
	2651, 1117, 1685, 1668, 1541, 1542, 1661, 1538, 1685, 1685,
	1713, 1209, 1765, 1716, 1717, 1064, 1719, 1691, 1692, 2137,
	1513, 2582, 2061, 1535, 1546, 1547, 1571, 1572, 1534, 962,
	962, 1545, 1134, 1857, 924, 1393, 962, 1688, 1805, 1195,
	1945, 1556, 1557, 2776, 1551, 1550, 1554, 1552, 1553, 2133,
	2604, 2132, 1559, 892, 2125, 2123, 1570, 1759, 2121, 2119,
	1558, 1560, 2443, 1747, 1563, 1564, 1341, 964, 965, 966,
	963, 2287, 2151, 1788, 1944, 1855, 1633, 967, 1792, 1793,
	1636, 2150, 1836, 1652, 1835, 1654, 996, 1662, 800, 1824,
	1815, 2138, 1741, 2142, 1005, 800, 1961, 1132, 1821, 1741,
	1806, 1172, 1757, 1174, 1707, 1178, 1179, 1180, 1504, 2738,
	925, 1555, 2961, 1804, 1302, 469, 1011, 1814, 1687, 1008,
	1813, 1775, 1136, 2133, 1306, 979, 2126, 2124, 2072, 2608,
	2120, 2120, 1710, 912, 1683, 1222, 1223, 1224, 1225, 1226,
	892, 1228, 1229, 1230, 1231, 1708, 1945, 1854, 1236, 1237,
	797, 1831, 799, 1833, 962, 1727, 962, 797, 887, 799,
	1840, 962, 962, 885, 978, 977, 987, 988, 980, 981,
	982, 983, 984, 985, 986, 979, 1750, 2824, 2599, 1677,
	800, 1748, 521, 1828, 899, 1914, 447, 1756, 3241, 962,
	2481, 468, 962, 1776, 3088, 464, 1307, 466, 3229, 467,
	892, 447, 465, 447, 447, 447, 1760, 1199, 2915, 2768,
	1755, 964, 965, 966, 963, 1942, 2766, 1751, 1200, 1752,
	1437, 1436, 1437, 1436, 2001, 1949, 1177, 980, 981, 982,
	983, 984, 985, 986, 979, 1796, 1954, 1122, 3089, 3008,
	1133, 1123, 797, 2931, 799, 964, 965, 966, 963, 2930,
	1177, 1787, 2916, 2769, 2600, 2744, 2694, 2518, 1197, 1789,
	2767, 2667, 2660, 1996, 2655, 2652, 1790, 1791, 2573, 1800,
	2492, 1381, 982, 983, 984, 985, 986, 979, 2388, 2256,
	2111, 1460, 1461, 1462, 2136, 1915, 1466, 1467, 1468, 1469,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 2601, 2082,
	1932, 1113, 1934, 1935, 1936, 1112, 901, 2691, 2445, 2171,
	680, 2105, 2002, 987, 988, 980, 981, 982, 983, 984,
	985, 986, 979, 2065, 2065, 1647, 2065, 1396, 1916, 1801,
	1470, 1387, 1463, 1711, 1396, 1953, 970, 971, 972, 973,
	974, 975, 976, 968, 436, 436, 1508, 1384, 1386, 1383,
	1933, 1385, 899, 1850, 1852, 1853, 1134, 1196, 1209, 447,
	3127, 964, 965, 966, 963, 964, 965, 966, 963, 1241,
	1241, 447, 2115, 1867, 2692, 963, 899, 442, 1247, 2943,
	1711, 1242, 1923, 1647, 966, 963, 2100, 2942, 2102, 2462,
	2328, 2327, 180, 2310, 1963, 2308, 2886, 2887, 2086, 964,
	965, 966, 963, 1950, 3244, 2922, 2195, 1247, 2007, 3270,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 1031, 2069, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	685, 2030, 2031, 2032, 2033, 2034, 3258, 2035, 2144, 3214,
	3209, 1765, 800, 2067, 1968, 2071, 1967, 2078, 1209, 2079,
	1209, 3147, 1209, 1951, 1952, 1957, 2881, 899, 1215, 1962,
	2743, 3118, 3090, 1955, 1956, 3243, 1960, 2083, 2084, 1958,
	1685, 3033, 1959, 2106, 2736, 1817, 2099, 1981, 1982, 2094,
	1987, 3029, 964, 965, 966, 963, 1209, 2189, 2974, 2044,
	2154, 2173, 1010, 1881, 964, 965, 966, 963, 964, 965,
	966, 963, 2196, 2107, 797, 1009, 799, 1209, 2918, 1861,
	1862, 3148, 2882, 2917, 2188, 1352, 1353, 1354, 1355, 1356,
	2198, 2073, 964, 965, 966, 963, 1207, 1189, 1191, 3080,
	2737, 1248, 2087, 2770, 2735, 2197, 1136, 964, 965, 966,
	963, 1816, 2565, 2378, 2511, 2376, 1809, 1207, 2374, 2096,
	2200, 2098, 2095, 899, 2477, 964, 965, 966, 963, 1397,
	1398, 1690, 2863, 2363, 552, 562, 1432, 964, 965, 966,
	963, 1452, 2175, 553, 1442, 561, 554, 558, 557, 555,
	556, 964, 965, 966, 963, 1453, 2155, 2457, 964, 965,
	966, 963, 2456, 2361, 2169, 2360, 2359, 2351, 2141, 2377,
	2345, 2375, 1209, 2510, 2373, 2253, 2097, 2221, 2344, 1341,
	2147, 1510, 2269, 2145, 447, 2104, 2152, 2862, 1486, 2362,
	2283, 2343, 1490, 2342, 1730, 1493, 2289, 1729, 559, 964,
	965, 966, 963, 1728, 1724, 1723, 2165, 2166, 964, 965,
	966, 963, 2298, 964, 965, 966, 963, 899, 1303, 2179,
	2235, 1081, 2255, 2816, 2393, 2307, 964, 965, 966, 963,
	560, 1032, 899, 899, 899, 1567, 2551, 3179, 899, 2717,
	2318, 2319, 2320, 899, 3096, 2324, 2325, 2168, 2326, 964,
	965, 966, 963, 2514, 2857, 1881, 516, 3175, 3092, 518,
	3131, 3076, 1272, 1273, 517, 964, 965, 966, 963, 2890,
	2265, 2065, 2266, 2225, 2222, 3052, 3037, 2280, 3032, 964,
	965, 966, 963, 2274, 3031, 2379, 3004, 2975, 2924, 2281,
	2899, 2885, 2855, 436, 2853, 2833, 2830, 2828, 1510, 899,
	1647, 1647, 1647, 1647, 2383, 1585, 2236, 2242, 2734, 2733,
	2730, 899, 1647, 2720, 2714, 2065, 2162, 2661, 2305, 2657,
	2648, 1486, 2305, 2301, 1267, 2647, 1486, 1486, 2513, 2574,
	2290, 1209, 1277, 1513, 2251, 1281, 2158, 2542, 2312, 2205,
	2206, 1280, 2541, 447, 447, 2211, 2288, 2488, 8, 2455,
	2282, 2432, 7, 2372, 964, 965, 966, 963, 180, 2364,
	2354, 2352, 2348, 180, 2300, 2347, 2346, 1856, 2512, 1732,
	1712, 2309, 2306, 1715, 2303, 1726, 1718, 612, 611, 1720,
	2414, 2316, 2219, 1495, 1448, 1304, 1448, 2218, 1039, 2472,
	2334, 2335, 2217, 2476, 964, 965, 966, 963, 1035, 1209,
	1034, 888, 2483, 2987, 2349, 2350, 2905, 2353, 964, 965,
	966, 963, 2763, 964, 965, 966, 963, 2291, 964, 965,
	966, 963, 1803, 2762, 2761, 2295, 2296, 2754, 2385, 2719,
	2292, 2706, 2232, 2384, 2294, 2216, 2389, 2697, 2696, 2446,
	2297, 2685, 2435, 2436, 2450, 2402, 2403, 2404, 2405, 2684,
	2415, 2417, 2413, 2416, 1485, 2609, 2516, 2509, 667, 2471,
	2433, 964, 965, 966, 963, 2430, 2501, 2496, 2440, 2233,
	2426, 2230, 2469, 2122, 2118, 2117, 2387, 163, 2475, 155,
	131, 1841, 2504, 1834, 2506, 899, 2448, 2444, 1829, 2447,
	1827, 1823, 2485, 2554, 1822, 2293, 964, 965, 966, 963,
	800, 1820, 1811, 2569, 1808, 2468, 2465, 800, 447, 2470,
	2463, 2467, 1807, 1731, 1481, 1480, 1798, 1479, 2474, 1802,
	1451, 1450, 899, 1441, 2479, 1221, 899, 899, 899, 1219,
	3283, 2480, 2493, 3240, 2494, 1647, 1942, 163, 2607, 3234,
	3108, 2215, 2313, 2314, 2611, 3221, 160, 2317, 2214, 2505,
	3218, 3216, 2323, 3117, 1029, 2621, 3050, 2624, 1812, 2624,
	2624, 3039, 2577, 2500, 899, 3034, 1819, 964, 965, 966,
	963, 2544, 2507, 2508, 964, 965, 966, 963, 2643, 1262,
	2956, 2941, 2538, 2937, 1832, 1209, 1209, 2841, 2640, 1837,
	1838, 1839, 2546, 2839, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 2543, 2642, 2265, 800, 160, 2575, 2401, 2814,
	2594, 2595, 2596, 2644, 2645, 2813, 2549, 2810, 2576, 2570,
	2401, 2502, 2503, 2213, 2809, 1207, 1207, 3259, 2605, 2746,
	2593, 447, 2620, 2212, 2592, 1271, 2554, 1264, 1120, 2606,
	2380, 2619, 2311, 2629, 2602, 2209, 2277, 1510, 1510, 964,
	965, 966, 963, 2276, 2275, 1276, 1279, 2583, 2584, 964,
	965, 966, 963, 1946, 2625, 2626, 1268, 800, 3106, 2208,
	2630, 964, 965, 966, 963, 2220, 2131, 2081, 2615, 2036,
	978, 977, 987, 988, 980, 981, 982, 983, 984, 985,
	986, 979, 1943, 1931, 2189, 964, 965, 966, 963, 2207,
	1382, 564, 114, 2695, 160, 2521, 2522, 114, 1695, 2627,
	1503, 2523, 2524, 2525, 2526, 1502, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2201, 964, 965, 966, 963, 1326,
	1685, 1292, 1269, 1065, 2654, 2653, 1062, 1061, 2659, 2649,
	447, 1060, 2658, 2663, 2664, 1059, 1058, 1057, 2656, 2674,
	964, 965, 966, 963, 2192, 1056, 453, 1055, 1054, 114,
	2170, 1053, 1052, 2678, 2614, 1051, 1050, 1049, 2610, 2681,
	2682, 2683, 2612, 2613, 1392, 1048, 1486, 1047, 1486, 1046,
	964, 965, 966, 963, 2690, 1045, 964, 965, 966, 963,
	1044, 1043, 1042, 1038, 1881, 1037, 1486, 1486, 1036, 1033,
	964, 965, 966, 963, 2707, 1026, 1025, 1023, 2048, 1022,
	1021, 2708, 1020, 671, 672, 673, 674, 2710, 670, 1019,
	1018, 1017, 1016, 1241, 2721, 1015, 1014, 2713, 1013, 1012,
	1007, 2750, 1006, 2269, 929, 886, 2670, 2671, 3104, 2712,
	3102, 2811, 1948, 2759, 899, 2053, 2056, 2057, 2058, 2054,
	1928, 2055, 2059, 2065, 1647, 2773, 917, 3195, 3193, 3153,
	2709, 2673, 798, 2726, 2257, 2093, 114, 1734, 928, 899,
	2410, 2412, 2723, 2057, 2058, 2411, 2665, 2676, 2621, 2843,
	2408, 114, 899, 114, 2725, 2409, 2844, 2675, 2407, 1220,
	2406, 2677, 899, 3269, 2140, 2134, 1114, 1209, 444, 2752,
	2753, 1532, 1533, 2741, 2053, 2056, 2057, 2058, 2054, 99,
	2055, 2059, 2751, 1510, 53, 2572, 800, 899, 1527, 1528,
	1529, 2539, 2540, 52, 2172, 2825, 2227, 2727, 2760, 2005,
	2821, 2808, 2190, 2191, 1621, 2842, 2775, 1207, 2159, 2547,
	2193, 2194, 2617, 180, 2618, 1256, 2129, 2772, 1067, 2846,
	448, 1861, 1862, 2199, 2835, 2815, 899, 1286, 2820, 800,
	2801, 2817, 1917, 1696, 449, 2747, 2748, 2749, 2823, 450,
	2756, 923, 2771, 3072, 2591, 2827, 2829, 1486, 451, 3166,
	2223, 2224, 1493, 2871, 2832, 2330, 2548, 2836, 2299, 2237,
	2837, 1938, 2331, 2332, 2333, 1536, 1501, 899, 1209, 1209,
	955, 1437, 1436, 3036, 2834, 2646, 899, 1079, 1080, 1077,
	1078, 1075, 1076, 2908, 2045, 2908, 1073, 1074, 2041, 1632,
	2831, 1171, 1170, 2680, 2848, 2858, 2895, 977, 987, 988,
	980, 981, 982, 983, 984, 985, 986, 979, 1207, 2897,
	1209, 2091, 2872, 1754, 1125, 2874, 1069, 2923, 2900, 3235,
	3139, 3238, 3124, 3122, 3083, 3062, 3061, 3059, 447, 3051,
	899, 899, 2969, 2968, 899, 899, 2854, 2722, 2704, 2912,
	2703, 2688, 2901, 2911, 1992, 1072, 2687, 2442, 1540, 2478,
	2897, 2959, 2774, 1930, 2958, 3197, 3196, 2953, 2777, 1810,
	1538, 2778, 2966, 2808, 2945, 2946, 2921, 914, 2954, 2955,
	2970, 2971, 2775, 2925, 978, 977, 987, 988, 980, 981,
	982, 983, 984, 985, 986, 979, 3196, 3197, 671, 672,
	673, 674, 2801, 670, 3000, 2939, 3236, 2963, 2705, 2434,
	670, 167, 3, 1140, 61, 2, 1186, 2074, 2993, 2962,
	2964, 1679, 1213, 1, 1494, 675, 2419, 2904, 2420, 2679,
	2422, 1772, 2390, 2039, 2759, 1918, 2568, 2944, 1115, 3019,
	716, 1443, 114, 114, 798, 1311, 817, 908, 2998, 1308,
	907, 2988, 2992, 905, 1394, 566, 1737, 2381, 2779, 978,
	977, 987, 988, 980, 981, 982, 983, 984, 985, 986,
	979, 2818, 3011, 2355, 2965, 3165, 3203, 3116, 3013, 3015,
	3168, 2323, 1324, 550, 3053, 3022, 3020, 899, 3030, 3021,
	2979, 1209, 2960, 3120, 2981, 2860, 1777, 960, 2464, 738,
	3014, 603, 577, 2864, 1024, 1294, 2401, 3035, 1287, 2519,
	819, 576, 2740, 2247, 2449, 995, 2451, 2437, 3023, 3045,
	816, 3044, 739, 1721, 2977, 1257, 1261, 2913, 2919, 2920,
	2764, 1207, 2597, 990, 1486, 994, 2278, 3279, 3268, 1486,
	3067, 899, 3250, 3233, 3056, 2401, 3144, 3264, 3058, 3183,
	3084, 991, 993, 989, 3219, 992, 978, 977, 987, 988,
	980, 981, 982, 983, 984, 985, 986, 979, 2867, 2865,
	899, 3079, 3078, 3075, 2866, 3212, 2495, 1209, 3140, 487,
	3111, 3114, 1658, 3086, 434, 781, 2893, 2957, 1733, 3101,
	3103, 3105, 3107, 3094, 488, 1947, 3132, 3038, 2515, 696,
	1927, 697, 3091, 3115, 3100, 3110, 699, 2263, 2262, 1363,
	3121, 3123, 969, 3125, 3126, 1380, 1209, 1207, 3119, 2535,
	2536, 1004, 526, 1799, 2244, 2796, 3149, 2431, 60, 3046,
	59, 58, 57, 1703, 188, 568, 187, 2888, 3113, 3170,
	3138, 548, 547, 546, 3146, 545, 544, 2052, 3172, 2893,
	2893, 1071, 2050, 2893, 2893, 2049, 1207, 3158, 1642, 3159,
	3171, 3160, 1641, 3161, 1701, 2321, 3162, 2315, 1988, 1993,
	899, 1574, 3150, 3097, 3098, 2936, 3176, 2365, 3067, 1526,
	3177, 1984, 1591, 2337, 1588, 1587, 2329, 2932, 3085, 2926,
	1618, 2267, 2757, 2907, 2780, 3202, 3191, 3186, 3188, 3194,
	2781, 3192, 2787, 1937, 3095, 842, 3205, 3198, 3199, 3200,
	3201, 3210, 838, 899, 2628, 840, 841, 839, 2178, 2174,
	3211, 1965, 2586, 1872, 1871, 1869, 1868, 3215, 1087, 3217,
	2999, 2724, 1879, 1877, 2672, 2668, 1745, 1491, 3172, 3231,
	2226, 1643, 1639, 3227, 1929, 2875, 1531, 899, 689, 899,
	3171, 1925, 3230, 97, 3237, 145, 3239, 726, 47, 88,
	87, 96, 143, 3242, 46, 172, 171, 174, 3205, 173,
	170, 899, 3246, 2108, 3253, 2109, 169, 1218, 3257, 1245,
	3260, 168, 453, 3263, 2910, 664, 37, 33, 12, 11,
	34, 21, 163, 50, 155, 131, 2893, 22, 3267, 20,
	3274, 3178, 1315, 858, 3278, 19, 3277, 25, 31, 114,
	156, 30, 3286, 107, 106, 29, 105, 148, 3274, 3291,
	3290, 157, 104, 3278, 3289, 103, 725, 102, 101, 3292,
	28, 18, 41, 40, 39, 9, 764, 95, 93, 27,
	112, 94, 91, 92, 89, 72, 71, 70, 85, 84,
	2893, 83, 82, 81, 80, 100, 78, 79, 737, 69,
	68, 160, 67, 66, 65, 90, 76, 86, 77, 75,
	74, 114, 2517, 73, 64, 114, 63, 62, 129, 2893,
	128, 126, 127, 125, 124, 123, 114, 122, 121, 120,
	42, 498, 497, 504, 494, 43, 114, 44, 45, 139,
	138, 140, 142, 501, 502, 144, 503, 507, 141, 136,
	489, 134, 137, 135, 2716, 133, 55, 17, 24, 766,
	512, 2718, 765, 846, 4, 978, 977, 987, 988, 980,
	981, 982, 983, 984, 985, 986, 979, 116, 117, 0,
	118, 119, 0, 866, 870, 872, 874, 876, 877, 879,
	0, 884, 880, 881, 882, 883, 751, 861, 862, 863,
	864, 844, 845, 867, 727, 847, 0, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 859, 865, 3181,
	0, 0, 0, 0, 0, 0, 869, 871, 873, 875,
	878, 729, 978, 977, 987, 988, 980, 981, 982, 983,
	984, 985, 986, 979, 0, 130, 154, 161, 0, 98,
	0, 2167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 860, 0, 0, 0, 153, 147, 146,
	0, 0, 0, 0, 56, 978, 977, 987, 988, 980,
	981, 982, 983, 984, 985, 986, 979, 0, 0, 0,
	0, 0, 0, 0, 750, 749, 1347, 0, 1347, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1486, 748, 0, 2838, 0, 0, 2840, 0, 0, 0,
	1347, 0, 724, 0, 0, 0, 0, 0, 0, 0,
	2845, 0, 0, 728, 759, 149, 150, 151, 0, 0,
	0, 0, 0, 0, 490, 492, 491, 0, 0, 0,
	0, 0, 0, 0, 496, 0, 0, 755, 0, 0,
	0, 158, 0, 0, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 515, 0, 0, 0, 0, 0, 0,
	493, 108, 0, 0, 0, 152, 0, 109, 0, 0,
	0, 0, 0, 756, 760, 0, 2176, 2177, 0, 0,
	0, 0, 0, 1646, 0, 0, 0, 0, 0, 0,
	0, 745, 0, 743, 747, 763, 0, 0, 0, 744,
	741, 740, 0, 746, 731, 732, 730, 733, 734, 735,
	736, 0, 761, 1797, 762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 757, 758, 0, 0, 0,
	0, 0, 0, 0, 0, 49, 0, 978, 977, 987,
	988, 980, 981, 982, 983, 984, 985, 986, 979, 0,
	114, 0, 0, 114, 114, 0, 114, 0, 0, 0,
	0, 0, 753, 0, 495, 499, 505, 0, 506, 508,
	0, 0, 509, 510, 511, 0, 0, 513, 514, 0,
	0, 0, 0, 0, 51, 0, 163, 50, 155, 131,
	0, 0, 798, 0, 0, 0, 329, 0, 0, 798,
	0, 0, 0, 0, 156, 0, 0, 0, 114, 0,
	0, 148, 868, 274, 0, 157, 299, 3012, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 112, 0, 0, 358, 313, 0,
	752, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 160, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 252, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	111, 38, 0, 0, 995, 0, 0, 48, 5, 177,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 363, 379, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 3093, 376, 404,
	268, 395, 0, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 419, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 130,
	154, 161, 0, 98, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 178, 0, 0, 0, 362, 0, 0,
	298, 153, 147, 146, 405, 0, 349, 331, 56, 0,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 149,
	150, 151, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 384, 267, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	400, 181, 0, 0, 429, 189, 0, 0, 0, 152,
	0, 190, 333, 0, 352, 0, 2068, 0, 0, 0,
	0, 0, 3248, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 409, 0, 0, 317,
	318, 319, 320, 284, 0, 257, 412, 342, 110, 0,
	0, 0, 0, 0, 1646, 0, 0, 0, 0, 49,
	0, 0, 0, 114, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 132, 341, 279, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 397, 398,
	399, 420, 383, 0, 191, 38, 179, 182, 184, 183,
	0, 48, 5, 0, 0, 115, 163, 50, 155, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 148, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	713, 0, 714, 0, 112, 1619, 0, 0, 0, 0,
	1581, 0, 0, 0, 0, 0, 0, 0, 0, 100,
	0, 0, 0, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 114, 0, 0, 694, 1621,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	1623, 707, 0, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1596, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 117, 0, 118, 119, 0, 0, 964, 965,
	966, 963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 1646, 1646, 1646, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 0, 0, 0, 1612, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	154, 161, 0, 98, 0, 0, 0, 709, 0, 703,
	0, 690, 0, 0, 0, 0, 0, 1421, 706, 705,
	0, 153, 147, 146, 0, 0, 0, 0, 56, 114,
	0, 0, 0, 0, 114, 687, 0, 0, 0, 695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 1580, 1582, 1579, 0, 1576,
	0, 114, 0, 1421, 1600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1606, 0, 0, 712, 0,
	0, 0, 0, 702, 0, 0, 0, 701, 0, 149,
	150, 151, 0, 686, 0, 1594, 1628, 693, 0, 1595,
	1597, 1599, 0, 1601, 1602, 1603, 1607, 1608, 1609, 1611,
	1614, 1615, 1616, 0, 691, 158, 0, 0, 0, 0,
	1604, 1613, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 108, 0, 688, 0, 152,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 711, 0, 0, 1620, 0, 0, 0, 0, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1417, 0, 0, 1577, 1578, 692, 1414, 0,
	0, 0, 1416, 1413, 1415, 1419, 1420, 0, 0, 0,
	1418, 0, 0, 1617, 0, 0, 0, 0, 110, 0,
	0, 0, 0, 0, 0, 0, 1646, 0, 0, 49,
	1593, 0, 0, 0, 0, 0, 0, 1592, 1417, 0,
	0, 114, 0, 0, 1414, 0, 0, 0, 1416, 1413,
	1415, 1419, 1420, 0, 0, 0, 1418, 0, 0, 0,
	0, 1610, 0, 0, 0, 0, 0, 0, 0, 0,
	1598, 0, 708, 0, 0, 0, 0, 0, 51, 0,
	0, 0, 1625, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 698, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1586, 0, 0, 0, 0, 0,
	0, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1424, 1425, 1426, 1427, 1428, 1429, 1422, 1423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1627, 0, 0, 1626, 111, 38, 0, 0, 0, 0,
	0, 48, 0, 0, 0, 115, 0, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1424, 1425,
	1426, 1427, 1428, 1429, 1422, 1423, 0, 0, 0, 584,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 274, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 575, 0, 0, 358,
	313, 0, 0, 0, 0, 635, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 0, 0,
	565, 612, 611, 552, 562, 0, 0, 252, 186, 432,
	114, 433, 553, 0, 561, 554, 558, 557, 555, 556,
	0, 627, 0, 0, 0, 0, 0, 0, 524, 537,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 0, 534, 535, 0, 0, 0,
	0, 585, 0, 536, 0, 1646, 580, 559, 563, 0,
	0, 0, 0, 243, 363, 379, 253, 354, 392, 258,
	361, 248, 328, 351, 0, 0, 245, 377, 360, 310,
	293, 294, 244, 0, 346, 272, 285, 269, 326, 560,
	583, 587, 268, 649, 581, 387, 247, 0, 386, 325,
	373, 378, 311, 305, 246, 375, 309, 304, 297, 276,
	650, 289, 337, 303, 338, 290, 315, 314, 316, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 389, 0, 114, 633, 0, 0, 0, 362,
	0, 0, 298, 0, 0, 0, 582, 0, 349, 331,
	646, 525, 0, 347, 301, 374, 339, 380, 364, 388,
	343, 340, 238, 365, 271, 312, 249, 251, 266, 273,
	275, 277, 278, 321, 322, 334, 353, 366, 367, 368,
	270, 259, 348, 260, 287, 261, 239, 263, 262, 264,
	355, 265, 241, 335, 372, 0, 283, 344, 308, 242,
	307, 336, 371, 370, 250, 396, 402, 403, 0, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	1445, 1444, 1446, 401, 281, 235, 236, 440, 631, 327,
	0, 0, 0, 0, 645, 626, 628, 629, 632, 636,
	637, 638, 639, 640, 642, 644, 648, 439, 0, 0,
	0, 0, 0, 438, 333, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	382, 394, 411, 414, 0, 0, 0, 0, 240, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 586, 0,
	0, 317, 318, 319, 320, 634, 0, 257, 412, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 280,
	286, 424, 288, 256, 332, 282, 391, 295, 0, 417,
	0, 418, 0, 0, 0, 0, 324, 291, 292, 356,
	296, 302, 345, 390, 330, 350, 254, 381, 357, 306,
	0, 0, 656, 630, 655, 657, 658, 654, 659, 660,
	641, 543, 0, 590, 652, 651, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 234, 0, 0, 237, 0, 300, 0, 341, 279,
	0, 0, 619, 596, 597, 598, 542, 599, 593, 594,
	595, 620, 588, 616, 617, 567, 591, 600, 615, 601,
	618, 621, 622, 661, 662, 607, 663, 604, 623, 614,
	613, 602, 589, 624, 625, 574, 569, 605, 606, 592,
	608, 609, 610, 570, 571, 572, 573, 0, 584, 0,
	397, 398, 399, 420, 383, 0, 437, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 274, 1487, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 575, 0, 0, 358, 313,
	0, 0, 0, 0, 635, 643, 0, 0, 0, 0,
	0, 0, 0, 1670, 0, 0, 533, 0, 0, 565,
	612, 611, 552, 562, 0, 0, 252, 186, 432, 0,
	433, 553, 0, 561, 554, 558, 557, 555, 556, 0,
	627, 0, 0, 0, 0, 0, 0, 524, 537, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 535, 0, 0, 0, 0,
	585, 0, 536, 0, 0, 1671, 559, 563, 0, 0,
	0, 0, 243, 363, 379, 253, 354, 392, 258, 361,
	248, 328, 351, 0, 0, 245, 377, 360, 310, 293,
	294, 244, 0, 346, 272, 285, 269, 326, 560, 583,
	587, 268, 649, 581, 387, 247, 0, 386, 325, 373,
	378, 311, 305, 246, 375, 309, 304, 297, 276, 650,
	289, 337, 303, 338, 290, 315, 314, 316, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 389, 0, 0, 633, 0, 0, 0, 362, 0,
	0, 298, 0, 0, 0, 582, 0, 349, 331, 646,
	525, 0, 347, 301, 374, 339, 380, 364, 388, 343,
	340, 238, 365, 271, 312, 249, 251, 266, 273, 275,
	277, 278, 321, 322, 334, 353, 366, 367, 368, 270,
	259, 348, 260, 287, 261, 239, 263, 262, 264, 355,
	265, 241, 335, 372, 0, 283, 344, 308, 242, 307,
	336, 371, 370, 250, 396, 402, 403, 0, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 401, 281, 235, 236, 440, 631, 327, 0,
	0, 0, 0, 645, 626, 628, 629, 632, 636, 637,
	638, 639, 640, 642, 644, 648, 439, 0, 0, 0,
	0, 0, 438, 333, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 382,
	394, 411, 414, 0, 0, 0, 0, 240, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 586, 0, 0,
	317, 318, 319, 320, 634, 0, 257, 412, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 407, 280, 286,
	424, 288, 256, 332, 282, 391, 295, 0, 417, 0,
	418, 0, 0, 0, 0, 324, 291, 292, 356, 296,
	302, 345, 390, 330, 350, 254, 381, 357, 306, 0,
	0, 656, 630, 655, 657, 658, 654, 659, 660, 641,
	543, 0, 590, 652, 651, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	234, 0, 0, 237, 0, 300, 0, 341, 279, 0,
	0, 619, 596, 597, 598, 542, 599, 593, 594, 595,
	620, 588, 616, 617, 567, 591, 600, 615, 601, 618,
	621, 622, 661, 662, 607, 663, 604, 623, 614, 613,
	602, 589, 624, 625, 574, 569, 605, 606, 592, 608,
	609, 610, 570, 571, 572, 573, 163, 584, 0, 397,
	398, 399, 420, 383, 0, 437, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 274, 0, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 998, 0, 0, 358, 313, 0,
	0, 0, 0, 635, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 0, 0, 565, 612,
	611, 552, 562, 0, 0, 252, 186, 432, 0, 433,
	553, 0, 561, 554, 558, 557, 555, 556, 0, 627,
	0, 0, 0, 0, 0, 0, 524, 537, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 0, 0, 0, 0, 585,
	0, 536, 0, 0, 580, 559, 563, 0, 0, 0,
	0, 243, 363, 379, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 560, 583, 587,
	268, 649, 581, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 650, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	389, 0, 0, 633, 0, 0, 0, 362, 0, 0,
	298, 0, 0, 0, 582, 0, 349, 331, 646, 525,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 440, 631, 327, 0, 0,
	0, 0, 645, 626, 628, 629, 632, 636, 637, 638,
	639, 640, 642, 644, 648, 439, 0, 0, 0, 0,
	0, 438, 333, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 586, 0, 0, 317,
	318, 319, 320, 634, 0, 257, 412, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	656, 630, 655, 657, 658, 654, 659, 660, 641, 543,
	0, 590, 652, 651, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 132, 341, 279, 0, 0,
	619, 596, 597, 598, 542, 599, 593, 594, 595, 620,
	588, 616, 617, 567, 591, 600, 615, 601, 618, 621,
	622, 661, 662, 607, 663, 604, 623, 614, 613, 602,
	589, 624, 625, 574, 569, 605, 606, 592, 608, 609,
	610, 570, 571, 572, 573, 0, 584, 0, 397, 398,
	399, 420, 383, 0, 437, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 274, 3247, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 575, 0, 0, 358, 313, 0, 0,
	0, 0, 635, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 0, 0, 565, 612, 611,
	552, 562, 0, 0, 252, 186, 432, 0, 433, 553,
	0, 561, 554, 558, 557, 555, 556, 0, 627, 0,
	0, 0, 0, 0, 0, 524, 537, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 535, 0, 0, 0, 0, 585, 0,
	536, 0, 0, 580, 559, 563, 0, 0, 0, 0,
	243, 363, 379, 253, 354, 392, 258, 361, 248, 328,
	351, 0, 0, 245, 377, 360, 310, 293, 294, 244,
	0, 346, 272, 285, 269, 326, 560, 583, 587, 268,
	649, 581, 387, 247, 0, 386, 325, 373, 378, 311,
	305, 246, 375, 309, 304, 297, 276, 650, 289, 337,
	303, 338, 290, 315, 314, 316, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 389,
	0, 0, 633, 0, 0, 0, 362, 0, 0, 298,
	0, 0, 0, 582, 0, 349, 331, 646, 525, 0,
	347, 301, 374, 339, 380, 364, 388, 343, 340, 238,
	365, 271, 312, 249, 251, 266, 273, 275, 277, 278,
	321, 322, 334, 353, 366, 367, 368, 270, 259, 348,
	260, 287, 261, 239, 263, 262, 264, 355, 265, 241,
	335, 372, 0, 283, 344, 308, 242, 307, 336, 371,
	370, 250, 396, 402, 403, 0, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	401, 281, 235, 236, 440, 631, 327, 0, 0, 0,
	0, 645, 626, 628, 629, 632, 636, 637, 638, 639,
	640, 642, 644, 648, 439, 0, 0, 0, 0, 0,
	438, 333, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 382, 394, 411,
	414, 0, 0, 0, 0, 240, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 586, 0, 0, 317, 318,
	319, 320, 634, 0, 257, 412, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 407, 280, 286, 424, 288,
	256, 332, 282, 391, 295, 0, 417, 0, 418, 0,
	0, 0, 0, 324, 291, 292, 356, 296, 302, 345,
	390, 330, 350, 254, 381, 357, 306, 0, 0, 656,
	630, 655, 657, 658, 654, 659, 660, 641, 543, 0,
	590, 652, 651, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 234, 0,
	0, 237, 0, 300, 0, 341, 279, 0, 0, 619,
	596, 597, 598, 542, 599, 593, 594, 595, 620, 588,
	616, 617, 567, 591, 600, 615, 601, 618, 621, 622,
	661, 662, 607, 663, 604, 623, 614, 613, 602, 589,
	624, 625, 574, 569, 605, 606, 592, 608, 609, 610,
	570, 571, 572, 573, 0, 584, 0, 397, 398, 399,
	420, 383, 0, 437, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 274, 1487, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 575, 0, 0, 358, 313, 0, 0, 0,
	0, 635, 643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 533, 0, 0, 565, 612, 611, 552,
	562, 0, 0, 252, 186, 432, 0, 433, 553, 0,
	561, 554, 558, 557, 555, 556, 0, 627, 0, 0,
	0, 0, 0, 0, 524, 537, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 535, 0, 0, 0, 0, 585, 0, 536,
	0, 0, 580, 559, 563, 0, 0, 0, 0, 243,
	363, 379, 253, 354, 392, 258, 361, 248, 328, 351,
	0, 0, 245, 377, 360, 310, 293, 294, 244, 0,
	346, 272, 285, 269, 326, 560, 583, 587, 268, 649,
	581, 387, 247, 0, 386, 325, 373, 378, 311, 305,
	246, 375, 309, 304, 297, 276, 650, 289, 337, 303,
	338, 290, 315, 314, 316, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 578, 0, 0, 0, 389, 0,
	0, 633, 0, 0, 0, 362, 0, 0, 298, 0,
	0, 0, 582, 0, 349, 331, 646, 525, 0, 347,
	301, 374, 339, 380, 364, 388, 343, 340, 238, 365,
	271, 312, 249, 251, 266, 273, 275, 277, 278, 321,
	322, 334, 353, 366, 367, 368, 270, 259, 348, 260,
	287, 261, 239, 263, 262, 264, 355, 265, 241, 335,
	372, 0, 283, 344, 308, 242, 307, 336, 371, 370,
	250, 396, 402, 403, 0, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 401,
	281, 235, 236, 440, 631, 327, 0, 0, 0, 0,
	645, 626, 628, 629, 632, 636, 637, 638, 639, 640,
	642, 644, 648, 439, 0, 0, 0, 0, 0, 438,
	333, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 382, 394, 411, 414,
	0, 0, 0, 0, 240, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 586, 0, 0, 317, 318, 319,
	320, 634, 0, 257, 412, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 280, 286, 424, 288, 256,
	332, 282, 391, 295, 0, 417, 0, 418, 0, 0,
	0, 0, 324, 291, 292, 356, 296, 302, 345, 390,
	330, 350, 254, 381, 357, 306, 0, 0, 656, 630,
	655, 657, 658, 654, 659, 660, 641, 543, 0, 590,
	652, 651, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 234, 0, 0,
	237, 0, 300, 0, 341, 279, 0, 0, 619, 596,
	597, 598, 542, 599, 593, 594, 595, 620, 588, 616,
	617, 567, 591, 600, 615, 601, 618, 621, 622, 661,
	662, 607, 663, 604, 623, 614, 613, 602, 589, 624,
	625, 574, 569, 605, 606, 592, 608, 609, 610, 570,
	571, 572, 573, 0, 584, 0, 397, 398, 399, 420,
	383, 0, 437, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	274, 0, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 575, 0, 0, 358, 313, 0, 0, 0, 0,
	635, 643, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 0, 0, 565, 612, 611, 552, 562,
	0, 0, 252, 186, 432, 0, 433, 553, 0, 561,
	554, 558, 557, 555, 556, 0, 627, 0, 0, 0,
	0, 0, 0, 524, 537, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 535, 1240, 0, 0, 0, 585, 0, 536, 0,
	0, 580, 559, 563, 0, 0, 0, 0, 243, 363,
	379, 253, 354, 392, 258, 361, 248, 328, 351, 0,
	0, 245, 377, 360, 310, 293, 294, 244, 0, 346,
	272, 285, 269, 326, 560, 583, 587, 268, 649, 581,
	387, 247, 0, 386, 325, 373, 378, 311, 305, 246,
	375, 309, 304, 297, 276, 650, 289, 337, 303, 338,
	290, 315, 314, 316, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 0, 0, 389, 0, 0,
	633, 0, 0, 0, 362, 0, 0, 298, 0, 0,
	0, 582, 0, 349, 331, 646, 525, 0, 347, 301,
	374, 339, 380, 364, 388, 343, 340, 238, 365, 271,
	312, 249, 251, 266, 273, 275, 277, 278, 321, 322,
	334, 353, 366, 367, 368, 270, 259, 348, 260, 287,
	261, 239, 263, 262, 264, 355, 265, 241, 335, 372,
	0, 283, 344, 308, 242, 307, 336, 371, 370, 250,
	396, 402, 403, 0, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 401, 281,
	235, 236, 440, 631, 327, 0, 0, 0, 0, 645,
	626, 628, 629, 632, 636, 637, 638, 639, 640, 642,
	644, 648, 439, 0, 0, 0, 0, 0, 438, 333,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 382, 394, 411, 414, 0,
	0, 0, 0, 240, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 586, 0, 0, 317, 318, 319, 320,
	634, 0, 257, 412, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 407, 280, 286, 424, 288, 256, 332,
	282, 391, 295, 0, 417, 0, 418, 0, 0, 0,
	0, 324, 291, 292, 356, 296, 302, 345, 390, 330,
	350, 254, 381, 357, 306, 0, 0, 656, 630, 655,
	657, 658, 654, 659, 660, 641, 543, 0, 590, 652,
	651, 653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 234, 0, 0, 237,
	0, 300, 0, 341, 279, 0, 0, 619, 596, 597,
	598, 542, 599, 593, 594, 595, 620, 588, 616, 617,
	567, 591, 600, 615, 601, 618, 621, 622, 661, 662,
	607, 663, 604, 623, 614, 613, 602, 589, 624, 625,
	574, 569, 605, 606, 592, 608, 609, 610, 570, 571,
	572, 573, 0, 0, 0, 397, 398, 399, 420, 383,
	584, 437, 0, 1818, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 274, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 575, 0, 0,
	358, 313, 0, 0, 0, 0, 635, 643, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 565, 612, 611, 552, 562, 0, 0, 252, 186,
	432, 0, 433, 553, 0, 561, 554, 558, 557, 555,
	556, 0, 627, 0, 0, 0, 0, 0, 0, 524,
	537, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 535, 0, 0,
	0, 0, 585, 0, 536, 0, 0, 580, 559, 563,
	0, 0, 0, 0, 243, 363, 379, 253, 354, 392,
	258, 361, 248, 328, 351, 0, 0, 245, 377, 360,
	310, 293, 294, 244, 0, 346, 272, 285, 269, 326,
	560, 583, 587, 268, 649, 581, 387, 247, 0, 386,
	325, 373, 378, 311, 305, 246, 375, 309, 304, 297,
	276, 650, 289, 337, 303, 338, 290, 315, 314, 316,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	0, 0, 0, 389, 0, 0, 633, 0, 0, 0,
	362, 0, 0, 298, 0, 0, 0, 582, 0, 349,
	331, 646, 525, 0, 347, 301, 374, 339, 380, 364,
	388, 343, 340, 238, 365, 271, 312, 249, 251, 266,
	273, 275, 277, 278, 321, 322, 334, 353, 366, 367,
	368, 270, 259, 348, 260, 287, 261, 239, 263, 262,
	264, 355, 265, 241, 335, 372, 0, 283, 344, 308,
	242, 307, 336, 371, 370, 250, 396, 402, 403, 0,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 401, 281, 235, 236, 440, 631,
	327, 0, 0, 0, 0, 645, 626, 628, 629, 632,
	636, 637, 638, 639, 640, 642, 644, 648, 439, 0,
	0, 0, 0, 0, 438, 333, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 382, 394, 411, 414, 0, 0, 0, 0, 240,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 586,
	0, 0, 317, 318, 319, 320, 634, 0, 257, 412,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	280, 286, 424, 288, 256, 332, 282, 391, 295, 0,
	417, 0, 418, 0, 0, 0, 0, 324, 291, 292,
	356, 296, 302, 345, 390, 330, 350, 254, 381, 357,
	306, 0, 0, 656, 630, 655, 657, 658, 654, 659,
	660, 641, 543, 0, 590, 652, 651, 653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 234, 0, 0, 237, 0, 300, 0, 341,
	279, 0, 0, 619, 596, 597, 598, 542, 599, 593,
	594, 595, 620, 588, 616, 617, 567, 591, 600, 615,
	601, 618, 621, 622, 661, 662, 607, 663, 604, 623,
	614, 613, 602, 589, 624, 625, 574, 569, 605, 606,
	592, 608, 609, 610, 570, 571, 572, 573, 0, 584,
	0, 397, 398, 399, 420, 383, 0, 437, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 274, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 575, 0, 0, 358,
	313, 0, 0, 0, 0, 635, 643, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 0, 0,
	565, 612, 611, 552, 562, 0, 0, 252, 186, 432,
	0, 433, 553, 0, 561, 554, 558, 557, 555, 556,
	0, 627, 0, 0, 0, 0, 0, 0, 524, 537,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 534, 535, 0, 0, 0,
	0, 585, 0, 536, 0, 0, 580, 559, 563, 0,
	0, 0, 0, 243, 363, 379, 253, 354, 392, 258,
	361, 248, 328, 351, 0, 0, 245, 377, 360, 310,
	293, 294, 244, 0, 346, 272, 285, 269, 326, 560,
	583, 587, 268, 649, 581, 387, 247, 0, 386, 325,
	373, 378, 311, 305, 246, 375, 309, 304, 297, 276,
	650, 289, 337, 303, 338, 290, 315, 314, 316, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 578, 0,
	0, 0, 389, 0, 0, 633, 0, 0, 0, 362,
	0, 0, 298, 0, 0, 0, 582, 0, 349, 331,
	646, 525, 0, 347, 301, 374, 339, 380, 364, 388,
	343, 340, 238, 365, 271, 312, 249, 251, 266, 273,
	275, 277, 278, 321, 322, 334, 353, 366, 367, 368,
	270, 259, 348, 260, 287, 261, 239, 263, 262, 264,
	355, 265, 241, 335, 372, 0, 283, 344, 308, 242,
	307, 336, 371, 370, 250, 396, 402, 403, 0, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 401, 281, 235, 236, 440, 631, 327,
	0, 0, 0, 0, 645, 626, 628, 629, 632, 636,
	637, 638, 639, 640, 642, 644, 648, 439, 0, 0,
	0, 0, 0, 438, 333, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	382, 394, 411, 414, 0, 0, 0, 0, 240, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 586, 0,
	0, 317, 318, 319, 320, 634, 0, 257, 412, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 280,
	286, 424, 288, 256, 332, 282, 391, 295, 0, 417,
	0, 418, 0, 0, 0, 0, 324, 291, 292, 356,
	296, 302, 345, 390, 330, 350, 254, 381, 357, 306,
	0, 0, 656, 630, 655, 657, 658, 654, 659, 660,
	641, 543, 0, 590, 652, 651, 653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 234, 0, 0, 237, 0, 300, 0, 341, 279,
	0, 0, 619, 596, 597, 598, 542, 599, 593, 594,
	595, 620, 588, 616, 617, 567, 591, 600, 615, 601,
	618, 621, 622, 661, 662, 607, 663, 604, 623, 614,
	613, 602, 589, 624, 625, 574, 569, 605, 606, 592,
	608, 609, 610, 570, 571, 572, 573, 0, 584, 0,
	397, 398, 399, 420, 383, 0, 437, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 1364, 0, 0, 0,
	540, 0, 0, 0, 274, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 575, 0, 0, 358, 313,
	0, 0, 0, 0, 635, 643, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 565,
	612, 611, 552, 562, 0, 0, 252, 186, 432, 0,
	433, 553, 0, 561, 554, 558, 557, 555, 556, 0,
	627, 0, 0, 0, 0, 0, 0, 0, 537, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 535, 0, 0, 0, 0,
	585, 0, 536, 0, 0, 580, 559, 563, 0, 0,
	0, 0, 243, 363, 379, 253, 354, 392, 258, 361,
	248, 328, 351, 0, 0, 245, 377, 360, 310, 293,
	294, 244, 0, 346, 272, 285, 269, 326, 560, 583,
	587, 268, 649, 581, 387, 247, 0, 386, 325, 373,
	378, 311, 305, 246, 375, 309, 304, 297, 276, 650,
	289, 337, 303, 338, 290, 315, 314, 316, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 0, 0,
	0, 389, 0, 0, 633, 0, 0, 0, 362, 0,
	0, 298, 0, 0, 0, 582, 0, 349, 331, 646,
	0, 0, 347, 301, 374, 339, 380, 364, 388, 343,
	340, 238, 365, 271, 312, 249, 251, 266, 273, 275,
	277, 278, 321, 322, 334, 353, 366, 367, 368, 270,
	259, 348, 260, 287, 261, 239, 263, 262, 264, 355,
	265, 241, 335, 372, 0, 283, 344, 308, 242, 307,
	336, 371, 370, 250, 396, 1365, 1366, 0, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 401, 281, 235, 236, 440, 631, 327, 0,
	0, 0, 0, 645, 626, 628, 629, 632, 636, 637,
	638, 639, 640, 642, 644, 648, 439, 0, 0, 0,
	0, 0, 438, 333, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 382,
	394, 411, 414, 0, 0, 0, 0, 240, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 586, 0, 0,
	317, 318, 319, 320, 634, 0, 257, 412, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 407, 280, 286,
	424, 288, 256, 332, 282, 391, 295, 0, 417, 0,
	418, 0, 0, 0, 0, 324, 291, 292, 356, 296,
	302, 345, 390, 330, 350, 254, 381, 357, 306, 0,
	0, 656, 630, 655, 657, 658, 654, 659, 660, 641,
	543, 0, 590, 652, 651, 653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	234, 0, 0, 237, 0, 300, 0, 341, 279, 0,
	0, 619, 596, 597, 598, 542, 599, 593, 594, 595,
	620, 588, 616, 617, 567, 591, 600, 615, 601, 618,
	621, 622, 661, 662, 607, 663, 604, 623, 614, 613,
	602, 589, 624, 625, 574, 569, 605, 606, 592, 608,
	609, 610, 570, 571, 572, 573, 0, 584, 0, 397,
	398, 399, 420, 383, 0, 437, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 274, 0, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 575, 0, 0, 358, 313, 0,
	0, 0, 0, 635, 643, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 612,
	611, 552, 562, 0, 0, 252, 186, 432, 0, 433,
	553, 0, 561, 554, 558, 557, 555, 556, 0, 627,
	0, 0, 0, 0, 0, 0, 524, 537, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 534, 535, 0, 0, 0, 0, 585,
	0, 536, 0, 0, 580, 559, 563, 0, 0, 0,
	0, 243, 363, 379, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 560, 583, 587,
	268, 649, 581, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 650, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 0, 0, 0,
	389, 0, 0, 633, 0, 0, 0, 362, 0, 0,
	298, 0, 0, 0, 582, 0, 349, 331, 646, 525,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 440, 631, 327, 0, 0,
	0, 0, 645, 626, 628, 629, 632, 636, 637, 638,
	639, 640, 642, 644, 648, 439, 0, 0, 0, 0,
	0, 438, 333, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 586, 0, 0, 317,
	318, 319, 320, 634, 0, 257, 412, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	656, 630, 655, 657, 658, 654, 659, 660, 641, 543,
	0, 590, 652, 651, 653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 0, 341, 279, 0, 0,
	619, 596, 597, 598, 542, 599, 593, 594, 595, 620,
	588, 616, 617, 567, 591, 600, 615, 601, 618, 621,
	622, 661, 662, 607, 663, 604, 623, 614, 613, 602,
	589, 624, 625, 574, 569, 605, 606, 592, 608, 609,
	610, 570, 571, 572, 573, 0, 584, 0, 397, 398,
	399, 420, 383, 0, 437, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 274, 0, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 575, 0, 0, 358, 313, 0, 0,
	0, 0, 635, 643, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 0, 0, 565, 612, 611,
	552, 562, 0, 0, 252, 186, 432, 0, 433, 553,
	0, 561, 554, 558, 557, 555, 556, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 537, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 534, 535, 0, 0, 0, 0, 585, 0,
	536, 0, 0, 580, 559, 563, 0, 0, 0, 0,
	243, 363, 379, 253, 354, 392, 258, 361, 248, 328,
	351, 0, 0, 245, 377, 360, 310, 293, 294, 244,
	0, 346, 272, 285, 269, 326, 560, 583, 587, 268,
	649, 581, 387, 247, 0, 386, 325, 373, 378, 311,
	305, 246, 375, 309, 304, 297, 276, 650, 289, 337,
	303, 338, 290, 315, 314, 316, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 578, 0, 0, 0, 389,
	0, 0, 633, 0, 0, 0, 362, 0, 0, 298,
	0, 0, 0, 582, 0, 349, 331, 646, 0, 0,
	347, 301, 374, 339, 380, 364, 388, 343, 340, 238,
	365, 271, 312, 249, 251, 266, 273, 275, 277, 278,
	321, 322, 334, 353, 366, 367, 368, 270, 259, 348,
	260, 287, 261, 239, 263, 262, 264, 355, 265, 241,
	335, 372, 0, 283, 344, 308, 242, 307, 336, 371,
	370, 250, 396, 402, 403, 0, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	401, 281, 235, 236, 440, 631, 327, 0, 0, 0,
	0, 645, 626, 628, 629, 632, 636, 637, 638, 639,
	640, 642, 644, 648, 439, 0, 0, 0, 0, 0,
	438, 333, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 382, 394, 411,
	414, 0, 0, 0, 0, 240, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 586, 0, 0, 317, 318,
	319, 320, 634, 0, 257, 412, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 407, 280, 286, 424, 288,
	256, 332, 282, 391, 295, 0, 417, 0, 418, 0,
	0, 0, 0, 324, 291, 292, 356, 296, 302, 345,
	390, 330, 350, 254, 381, 357, 306, 0, 0, 656,
	630, 655, 657, 658, 654, 659, 660, 641, 543, 0,
	590, 652, 651, 653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 234, 0,
	0, 237, 0, 300, 0, 341, 279, 0, 0, 619,
	596, 597, 598, 542, 599, 593, 594, 595, 620, 588,
	616, 617, 567, 591, 600, 615, 601, 618, 621, 622,
	661, 662, 607, 663, 604, 623, 614, 613, 602, 589,
	624, 625, 574, 569, 605, 606, 592, 608, 609, 610,
	570, 571, 572, 573, 329, 0, 0, 397, 398, 399,
	420, 383, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 358, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1030, 0, 0, 185, 0, 0, 552,
	562, 0, 0, 252, 186, 432, 0, 433, 553, 0,
	561, 554, 558, 557, 555, 556, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 559, 0, 0, 0, 0, 0, 243,
	363, 379, 253, 354, 392, 258, 361, 248, 328, 351,
	0, 0, 245, 377, 360, 310, 293, 294, 244, 0,
	346, 272, 285, 269, 326, 560, 376, 404, 268, 395,
	0, 387, 247, 0, 386, 325, 373, 378, 311, 305,
	246, 375, 309, 304, 297, 276, 419, 289, 337, 303,
	338, 290, 315, 314, 316, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 0, 362, 0, 0, 298, 0,
	0, 0, 405, 0, 349, 331, 0, 0, 0, 347,
	301, 374, 339, 380, 364, 388, 343, 340, 238, 365,
	271, 312, 249, 251, 266, 273, 275, 277, 278, 321,
	322, 334, 353, 366, 367, 368, 270, 259, 348, 260,
	287, 261, 239, 263, 262, 264, 355, 265, 241, 335,
	372, 0, 283, 344, 308, 242, 307, 336, 371, 370,
	250, 396, 402, 403, 0, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 401,
	281, 235, 236, 440, 267, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 400, 0,
	0, 0, 429, 439, 0, 0, 0, 0, 0, 438,
	333, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 382, 394, 411, 414,
	0, 0, 0, 0, 240, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 409, 0, 0, 317, 318, 319,
	320, 284, 0, 257, 412, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 280, 286, 424, 288, 256,
	332, 282, 391, 295, 0, 417, 0, 418, 0, 0,
	0, 0, 324, 291, 292, 356, 296, 302, 345, 390,
	330, 350, 254, 381, 357, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 234, 0, 0,
	237, 0, 300, 0, 341, 279, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 397, 398, 399, 420,
	383, 0, 437, 163, 50, 155, 131, 0, 0, 0,
	0, 0, 0, 329, 457, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 358, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 252, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 363,
	379, 253, 354, 392, 258, 361, 248, 328, 351, 0,
	0, 245, 377, 360, 310, 293, 294, 244, 0, 346,
	272, 285, 269, 326, 0, 376, 404, 268, 395, 0,
	387, 247, 0, 386, 325, 373, 378, 311, 305, 246,
	375, 309, 304, 297, 276, 419, 289, 337, 303, 338,
	290, 315, 314, 316, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 0, 362, 0, 0, 298, 0, 0,
	0, 405, 0, 349, 331, 0, 0, 0, 347, 301,
	374, 339, 380, 364, 388, 343, 340, 238, 365, 271,
	312, 249, 251, 266, 273, 275, 277, 278, 321, 322,
	334, 353, 366, 367, 368, 270, 259, 348, 260, 287,
	261, 239, 263, 262, 264, 355, 265, 241, 335, 372,
	0, 283, 344, 308, 242, 307, 336, 371, 370, 250,
	396, 402, 403, 0, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 401, 281,
	235, 236, 440, 267, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 400, 0, 0,
	0, 429, 439, 0, 0, 0, 0, 0, 438, 333,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 382, 394, 411, 414, 0,
	0, 0, 0, 240, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 409, 0, 0, 317, 318, 319, 320,
	458, 460, 257, 412, 342, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 407, 280, 286, 424, 288, 256, 332,
	282, 391, 295, 0, 417, 0, 418, 0, 0, 0,
	0, 324, 291, 292, 356, 296, 302, 345, 390, 330,
	350, 254, 381, 357, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 234, 0, 0, 237,
	0, 300, 132, 341, 279, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 329, 0, 0, 230, 231,
	232, 233, 0, 858, 0, 397, 398, 399, 420, 383,
	0, 437, 274, 0, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 0, 0, 0, 358, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 252, 186, 432, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 846, 0, 0, 0, 0, 0, 0,
	243, 363, 379, 253, 354, 392, 258, 361, 248, 328,
	351, 0, 0, 1901, 1903, 1904, 1905, 1906, 1907, 1908,
	0, 1913, 1909, 1910, 1911, 1912, 0, 1896, 1897, 1898,
	1899, 844, 1882, 1902, 0, 1883, 325, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1900, 337,
	303, 338, 290, 315, 314, 316, 869, 871, 873, 875,
	878, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 0, 362, 0, 0, 298,
	0, 0, 0, 1895, 0, 349, 331, 0, 0, 0,
	347, 301, 374, 339, 380, 364, 388, 343, 340, 238,
	365, 271, 312, 249, 251, 266, 273, 275, 277, 278,
	321, 322, 334, 353, 366, 367, 368, 270, 259, 348,
	260, 287, 261, 239, 263, 262, 264, 355, 265, 241,
	335, 372, 0, 283, 344, 308, 242, 307, 336, 371,
	370, 250, 396, 402, 403, 0, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	401, 281, 235, 236, 440, 267, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 400,
	0, 0, 0, 429, 439, 0, 0, 0, 0, 0,
	438, 333, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 382, 394, 411,
	414, 0, 0, 0, 0, 240, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 409, 0, 0, 317, 318,
	319, 320, 284, 0, 257, 412, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 407, 280, 286, 424, 288,
	256, 332, 282, 391, 295, 0, 417, 0, 418, 0,
	0, 0, 0, 324, 291, 292, 356, 296, 302, 345,
	390, 330, 350, 254, 381, 357, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 0, 0, 369, 0, 234, 0,
	0, 237, 868, 300, 0, 341, 279, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 329, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 397, 398, 399,
	420, 383, 0, 437, 274, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 0, 0, 0, 358, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 846, 0, 0, 252, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 1976, 1979, 866, 870, 872, 874, 876, 877, 879,
	0, 884, 880, 881, 882, 883, 0, 861, 862, 863,
	864, 844, 845, 867, 0, 847, 0, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 859, 865, 0,
	0, 0, 0, 0, 0, 0, 869, 871, 873, 875,
	878, 0, 243, 363, 379, 253, 354, 392, 258, 361,
	248, 328, 351, 0, 0, 245, 377, 360, 310, 293,
	294, 244, 0, 346, 272, 285, 269, 326, 0, 376,
	404, 268, 395, 860, 387, 247, 0, 386, 325, 373,
	378, 311, 305, 246, 375, 309, 304, 297, 276, 419,
	289, 337, 303, 338, 290, 315, 314, 316, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 389, 0, 0, 0, 1975, 0, 1974, 362, 1972,
	1977, 298, 0, 0, 0, 405, 0, 349, 331, 0,
	0, 0, 347, 301, 374, 339, 380, 364, 388, 343,
	340, 238, 365, 271, 312, 249, 251, 266, 273, 275,
	277, 278, 321, 322, 334, 353, 366, 367, 368, 270,
	259, 348, 260, 287, 261, 239, 263, 262, 264, 355,
	265, 241, 335, 372, 1978, 283, 344, 308, 242, 307,
	336, 371, 370, 250, 396, 402, 403, 0, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 401, 281, 235, 236, 440, 267, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 400, 0, 0, 0, 429, 439, 0, 0, 0,
	0, 0, 438, 333, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 382,
	394, 411, 414, 0, 0, 0, 0, 240, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 409, 0, 0,
	317, 318, 319, 320, 284, 0, 257, 412, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 407, 280, 286,
	424, 288, 256, 332, 282, 391, 295, 0, 417, 0,
	418, 0, 868, 0, 0, 324, 291, 292, 356, 296,
	302, 345, 390, 330, 350, 254, 381, 357, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	234, 0, 0, 237, 0, 300, 0, 341, 279, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	0, 0, 230, 231, 232, 233, 329, 0, 0, 397,
	398, 399, 420, 383, 0, 437, 0, 0, 1705, 0,
	0, 0, 0, 274, 0, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 358, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 1706, 0, 0, 0, 252, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 964, 965, 966, 963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 363, 379, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 0, 376, 404,
	268, 395, 0, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 419, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 362, 0, 0,
	298, 0, 0, 0, 405, 0, 349, 331, 0, 0,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 440, 267, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	400, 0, 0, 0, 429, 439, 0, 0, 0, 0,
	0, 438, 333, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 409, 0, 0, 317,
	318, 319, 320, 284, 0, 257, 412, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 0, 341, 279, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 329, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 397, 398,
	399, 420, 383, 0, 437, 274, 780, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 358,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 787, 788, 0, 0, 0, 0, 252, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 363, 775, 253, 354, 392, 258,
	361, 248, 328, 351, 0, 0, 245, 377, 360, 310,
	293, 294, 244, 0, 346, 272, 285, 269, 326, 0,
	376, 404, 268, 395, 766, 387, 247, 765, 386, 325,
	373, 378, 311, 305, 246, 375, 309, 304, 297, 276,
	419, 289, 337, 303, 338, 290, 315, 314, 316, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 362,
	0, 0, 298, 0, 0, 0, 405, 0, 349, 331,
	0, 0, 0, 347, 301, 374, 339, 380, 364, 388,
	778, 340, 238, 365, 271, 312, 249, 251, 266, 273,
	275, 277, 278, 321, 322, 334, 353, 366, 367, 368,
	270, 259, 348, 260, 287, 261, 239, 263, 262, 264,
	355, 265, 241, 335, 372, 0, 283, 344, 308, 242,
	307, 336, 371, 370, 250, 396, 402, 403, 0, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 401, 281, 235, 236, 440, 267, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 400, 0, 0, 0, 429, 439, 0, 0,
	0, 0, 0, 438, 333, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	382, 394, 411, 414, 0, 0, 0, 0, 240, 413,
	0, 0, 0, 0, 0, 0, 779, 0, 385, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 782, 0,
	0, 317, 318, 319, 320, 284, 0, 257, 412, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 280,
	286, 424, 288, 256, 332, 282, 391, 295, 0, 417,
	0, 418, 0, 0, 0, 0, 789, 776, 785, 777,
	296, 302, 345, 390, 330, 350, 254, 381, 357, 786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 234, 0, 0, 237, 0, 300, 0, 341, 279,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	329, 0, 0, 230, 231, 232, 233, 0, 0, 0,
	397, 398, 399, 420, 383, 0, 437, 274, 0, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 358, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 252,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 363, 379, 253, 354,
	392, 258, 361, 248, 328, 351, 0, 0, 245, 377,
	360, 310, 293, 294, 244, 0, 346, 272, 285, 269,
	326, 0, 376, 404, 268, 395, 0, 387, 247, 0,
	386, 325, 373, 378, 311, 305, 246, 375, 309, 304,
	297, 276, 419, 289, 337, 303, 338, 290, 315, 314,
	316, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1994, 389, 0, 0, 0, 1999, 1997,
	0, 362, 0, 1998, 298, 0, 0, 0, 405, 0,
	349, 331, 0, 0, 0, 347, 301, 374, 339, 380,
	364, 388, 343, 340, 238, 365, 271, 312, 249, 251,
	266, 273, 275, 277, 278, 321, 322, 334, 353, 366,
	367, 368, 270, 259, 348, 260, 287, 261, 239, 263,
	262, 264, 355, 265, 241, 335, 372, 0, 283, 344,
	308, 242, 307, 336, 371, 370, 250, 396, 402, 403,
	0, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 401, 281, 235, 236, 440,
	267, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 400, 0, 0, 0, 429, 439,
	0, 0, 0, 0, 0, 438, 333, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 382, 394, 411, 414, 0, 0, 0, 0,
	240, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	409, 0, 0, 317, 318, 319, 320, 284, 0, 257,
	412, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 280, 286, 424, 288, 256, 332, 282, 391, 295,
	0, 417, 0, 418, 0, 0, 0, 0, 324, 291,
	292, 356, 296, 302, 345, 390, 330, 350, 254, 381,
	357, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 234, 0, 0, 237, 0, 300, 0,
	341, 279, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 0, 0, 230, 231, 232, 233, 163,
	0, 0, 397, 398, 399, 420, 383, 0, 437, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 112, 0, 0,
	358, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 1749,
	0, 185, 0, 0, 0, 0, 0, 0, 252, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 363, 379, 253, 354, 392,
	258, 361, 248, 328, 351, 0, 0, 245, 377, 360,
	310, 293, 294, 244, 0, 346, 272, 285, 269, 326,
	0, 376, 404, 268, 395, 0, 387, 247, 0, 386,
	325, 373, 378, 311, 305, 246, 375, 309, 304, 297,
	276, 419, 289, 337, 303, 338, 290, 315, 314, 316,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 0,
	362, 0, 0, 298, 0, 0, 0, 405, 0, 349,
	331, 0, 0, 0, 347, 301, 374, 339, 380, 364,
	388, 343, 340, 238, 365, 271, 312, 249, 251, 266,
	273, 275, 277, 278, 321, 322, 334, 353, 366, 367,
	368, 270, 259, 348, 260, 287, 261, 239, 263, 262,
	264, 355, 265, 241, 335, 372, 0, 283, 344, 308,
	242, 307, 336, 371, 370, 250, 396, 402, 403, 0,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 401, 281, 235, 236, 440, 267,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 400, 0, 0, 0, 429, 439, 0,
	0, 0, 0, 0, 438, 333, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 382, 394, 411, 414, 0, 0, 0, 0, 240,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 409,
	0, 0, 317, 318, 319, 320, 284, 0, 257, 412,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	280, 286, 424, 288, 256, 332, 282, 391, 295, 0,
	417, 0, 418, 0, 0, 0, 0, 324, 291, 292,
	356, 296, 302, 345, 390, 330, 350, 254, 381, 357,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 234, 0, 0, 237, 0, 300, 132, 341,
	279, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 230, 231, 232, 233, 163, 0,
	0, 397, 398, 399, 420, 383, 0, 437, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 112, 0, 0, 358,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 1740, 0,
	185, 0, 0, 0, 0, 0, 0, 252, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 363, 379, 253, 354, 392, 258,
	361, 248, 328, 351, 0, 0, 245, 377, 360, 310,
	293, 294, 244, 0, 346, 272, 285, 269, 326, 0,
	376, 404, 268, 395, 0, 387, 247, 0, 386, 325,
	373, 378, 311, 305, 246, 375, 309, 304, 297, 276,
	419, 289, 337, 303, 338, 290, 315, 314, 316, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 362,
	0, 0, 298, 0, 0, 0, 405, 0, 349, 331,
	0, 0, 0, 347, 301, 374, 339, 380, 364, 388,
	343, 340, 238, 365, 271, 312, 249, 251, 266, 273,
	275, 277, 278, 321, 322, 334, 353, 366, 367, 368,
	270, 259, 348, 260, 287, 261, 239, 263, 262, 264,
	355, 265, 241, 335, 372, 0, 283, 344, 308, 242,
	307, 336, 371, 370, 250, 396, 402, 403, 0, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 401, 281, 235, 236, 440, 267, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 400, 0, 0, 0, 429, 439, 0, 0,
	0, 0, 0, 438, 333, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	382, 394, 411, 414, 0, 0, 0, 0, 240, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 409, 0,
	0, 317, 318, 319, 320, 284, 0, 257, 412, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 280,
	286, 424, 288, 256, 332, 282, 391, 295, 0, 417,
	0, 418, 0, 0, 0, 0, 324, 291, 292, 356,
	296, 302, 345, 390, 330, 350, 254, 381, 357, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 234, 0, 0, 237, 0, 300, 132, 341, 279,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 0, 0, 230, 231, 232, 233, 163, 0, 0,
	397, 398, 399, 420, 383, 0, 437, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 112, 0, 0, 358, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 252, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 363, 379, 253, 354, 392, 258, 361,
	248, 328, 351, 0, 0, 245, 377, 360, 310, 293,
	294, 244, 0, 346, 272, 285, 269, 326, 0, 376,
	404, 268, 395, 0, 387, 247, 0, 386, 325, 373,
	378, 311, 305, 246, 375, 309, 304, 297, 276, 419,
	289, 337, 303, 338, 290, 315, 314, 316, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 0, 0, 0, 362, 0,
	0, 298, 0, 0, 0, 405, 0, 349, 331, 0,
	0, 0, 347, 301, 374, 339, 380, 364, 388, 343,
	340, 238, 365, 271, 312, 249, 251, 266, 273, 275,
	277, 278, 321, 322, 334, 353, 366, 367, 368, 270,
	259, 348, 260, 287, 261, 239, 263, 262, 264, 355,
	265, 241, 335, 372, 0, 283, 344, 308, 242, 307,
	336, 371, 370, 250, 396, 402, 403, 0, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 401, 281, 235, 236, 440, 267, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 400, 0, 0, 0, 429, 439, 0, 0, 0,
	0, 0, 438, 333, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 382,
	394, 411, 414, 0, 0, 0, 0, 240, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 409, 0, 0,
	317, 318, 319, 320, 284, 0, 257, 412, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 407, 280, 286,
	424, 288, 256, 332, 282, 391, 295, 0, 417, 0,
	418, 0, 0, 0, 0, 324, 291, 292, 356, 296,
	302, 345, 390, 330, 350, 254, 381, 357, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	234, 0, 0, 237, 0, 300, 132, 341, 279, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 329,
	0, 0, 230, 231, 232, 233, 0, 0, 0, 397,
	398, 399, 420, 383, 0, 437, 274, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 0, 0, 0,
	358, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 787, 788, 0, 0, 0, 0, 252, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 363, 379, 253, 354, 392,
	258, 361, 248, 328, 351, 0, 0, 245, 377, 360,
	310, 293, 294, 244, 0, 346, 272, 285, 269, 326,
	0, 376, 404, 268, 395, 766, 387, 247, 765, 386,
	325, 373, 378, 311, 305, 246, 375, 309, 304, 297,
	276, 419, 289, 337, 303, 338, 290, 315, 314, 316,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 0,
	362, 0, 0, 298, 0, 0, 0, 405, 0, 349,
	331, 0, 0, 0, 347, 301, 374, 339, 380, 364,
	388, 343, 340, 238, 365, 271, 312, 249, 251, 266,
	273, 275, 277, 278, 321, 322, 334, 353, 366, 367,
	368, 270, 259, 348, 260, 287, 261, 239, 263, 262,
	264, 355, 265, 241, 335, 372, 0, 283, 344, 308,
	242, 307, 336, 371, 370, 250, 396, 402, 403, 0,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 401, 281, 235, 236, 440, 267,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 400, 0, 0, 0, 429, 439, 0,
	0, 0, 0, 0, 438, 333, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 382, 394, 411, 414, 0, 0, 0, 0, 240,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 409,
	0, 0, 317, 318, 319, 320, 284, 0, 257, 412,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	280, 286, 424, 288, 256, 332, 282, 391, 295, 0,
	417, 0, 418, 0, 0, 0, 0, 789, 1663, 785,
	1664, 296, 302, 345, 390, 330, 350, 254, 381, 357,
	786, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 234, 0, 0, 237, 0, 300, 0, 341,
	279, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 329, 0, 0, 230, 231, 232, 233, 0, 0,
	2394, 397, 398, 399, 420, 383, 0, 437, 274, 0,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 431, 0, 0, 0,
	0, 0, 358, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	252, 186, 432, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 363, 379, 253,
	354, 392, 258, 361, 248, 328, 351, 0, 0, 245,
	377, 360, 310, 293, 294, 244, 0, 346, 272, 285,
	269, 326, 0, 376, 404, 268, 395, 0, 387, 247,
	0, 386, 325, 373, 378, 311, 305, 246, 375, 309,
	304, 297, 276, 419, 289, 337, 303, 338, 290, 315,
	314, 316, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 2397, 0, 0, 2396,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 0, 362, 0, 0, 298, 0, 0, 0, 405,
	0, 349, 331, 0, 0, 0, 347, 301, 374, 339,
	380, 364, 388, 343, 340, 238, 365, 271, 312, 249,
	251, 266, 273, 275, 277, 278, 321, 322, 334, 353,
	366, 367, 368, 270, 259, 348, 260, 287, 261, 239,
	263, 262, 264, 355, 265, 241, 335, 372, 0, 283,
	344, 308, 242, 307, 336, 371, 370, 250, 396, 402,
	403, 0, 0, 408, 0, 0, 0, 416, 421, 422,
	423, 425, 426, 427, 428, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 401, 281, 235, 236,
	440, 267, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 400, 0, 0, 0, 429,
	439, 0, 0, 0, 0, 0, 438, 333, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 382, 394, 411, 414, 0, 0, 0,
	0, 240, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 409, 0, 0, 317, 318, 319, 320, 284, 0,
	257, 412, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 407, 280, 286, 424, 288, 256, 332, 282, 391,
	295, 0, 417, 0, 418, 0, 0, 0, 0, 324,
	291, 292, 356, 296, 302, 345, 390, 330, 350, 254,
	381, 357, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 234, 0, 0, 237, 0, 300,
	0, 341, 279, 0, 0, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 329, 0, 0, 230, 231, 232, 233,
	0, 0, 0, 397, 398, 399, 420, 383, 0, 437,
	274, 1212, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 358, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 1210, 0,
	0, 0, 252, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 243, 363,
	379, 253, 354, 392, 258, 361, 248, 328, 351, 0,
	0, 245, 377, 360, 310, 293, 294, 244, 0, 346,
	272, 285, 269, 326, 0, 376, 404, 268, 395, 0,
	387, 247, 0, 386, 325, 373, 378, 311, 305, 246,
	375, 309, 304, 297, 276, 419, 289, 337, 303, 338,
	290, 315, 314, 316, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 0, 362, 0, 0, 298, 0, 0,
	0, 405, 0, 349, 331, 0, 0, 0, 347, 301,
	374, 339, 380, 364, 388, 343, 340, 238, 365, 271,
	312, 249, 251, 266, 273, 275, 277, 278, 321, 322,
	334, 353, 366, 367, 368, 270, 259, 348, 260, 287,
	261, 239, 263, 262, 264, 355, 265, 241, 335, 372,
	0, 283, 344, 308, 242, 307, 336, 371, 370, 250,
	396, 402, 403, 0, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 401, 281,
	235, 236, 440, 267, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 400, 0, 0,
	0, 429, 439, 0, 0, 0, 0, 0, 438, 333,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 382, 394, 411, 414, 0,
	0, 0, 0, 240, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 409, 0, 0, 317, 318, 319, 320,
	284, 0, 257, 412, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 407, 280, 286, 424, 288, 256, 332,
	282, 391, 295, 0, 417, 0, 418, 0, 0, 0,
	0, 324, 291, 292, 356, 296, 302, 345, 390, 330,
	350, 254, 381, 357, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 369, 0, 234, 0, 0, 237,
	0, 300, 0, 341, 279, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 329, 0, 0, 230, 231,
	232, 233, 0, 0, 0, 397, 398, 399, 420, 383,
	0, 437, 274, 1206, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 0, 0, 0, 358, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	1210, 0, 0, 0, 252, 186, 432, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1208, 0, 0, 0, 0, 0, 0,
	243, 363, 379, 253, 354, 392, 258, 361, 248, 328,
	351, 0, 0, 245, 377, 360, 310, 293, 294, 244,
	0, 346, 272, 285, 269, 326, 0, 376, 404, 268,
	395, 0, 387, 247, 0, 386, 325, 373, 378, 311,
	305, 246, 375, 309, 304, 297, 276, 419, 289, 337,
	303, 338, 290, 315, 314, 316, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 0, 362, 0, 0, 298,
	0, 0, 0, 405, 0, 349, 331, 0, 0, 0,
	347, 301, 374, 339, 380, 364, 388, 343, 340, 238,
	365, 271, 312, 249, 251, 266, 273, 275, 277, 278,
	321, 322, 334, 353, 366, 367, 368, 270, 259, 348,
	260, 287, 261, 239, 263, 262, 264, 355, 265, 241,
	335, 372, 0, 283, 344, 308, 242, 307, 336, 371,
	370, 250, 396, 402, 403, 0, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	401, 281, 235, 236, 440, 267, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 400,
	0, 0, 0, 429, 439, 0, 0, 0, 0, 0,
	438, 333, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 382, 394, 411,
	414, 0, 0, 0, 0, 240, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 409, 0, 0, 317, 318,
	319, 320, 284, 0, 257, 412, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 407, 280, 286, 424, 288,
	256, 332, 282, 391, 295, 0, 417, 0, 418, 0,
	0, 0, 0, 324, 291, 292, 356, 296, 302, 345,
	390, 330, 350, 254, 381, 357, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 234, 0,
	0, 237, 0, 300, 0, 341, 279, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 329, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 397, 398, 399,
	420, 383, 0, 437, 274, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 0, 0, 0, 358, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3167, 0, 185,
	612, 0, 0, 0, 0, 0, 252, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 363, 379, 253, 354, 392, 258, 361,
	248, 328, 351, 0, 0, 245, 377, 360, 310, 293,
	294, 244, 0, 346, 272, 285, 269, 326, 0, 376,
	404, 268, 395, 0, 387, 247, 0, 386, 325, 373,
	378, 311, 305, 246, 375, 309, 304, 297, 276, 419,
	289, 337, 303, 338, 290, 315, 314, 316, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 0, 0, 0, 362, 0,
	0, 298, 0, 0, 0, 405, 0, 349, 331, 0,
	0, 0, 347, 301, 374, 339, 380, 364, 388, 343,
	340, 238, 365, 271, 312, 249, 251, 266, 273, 275,
	277, 278, 321, 322, 334, 353, 366, 367, 368, 270,
	259, 348, 260, 287, 261, 239, 263, 262, 264, 355,
	265, 241, 335, 372, 0, 283, 344, 308, 242, 307,
	336, 371, 370, 250, 396, 402, 403, 0, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 401, 281, 235, 236, 440, 267, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 400, 0, 0, 0, 429, 439, 0, 0, 0,
	0, 0, 438, 333, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 382,
	394, 411, 414, 0, 0, 0, 0, 240, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 409, 0, 0,
	317, 318, 319, 320, 284, 0, 257, 412, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 407, 280, 286,
	424, 288, 256, 332, 282, 391, 295, 0, 417, 0,
	418, 0, 0, 0, 0, 324, 291, 292, 356, 296,
	302, 345, 390, 330, 350, 254, 381, 357, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	234, 0, 0, 237, 0, 300, 0, 341, 279, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 329,
	0, 0, 230, 231, 232, 233, 0, 0, 0, 397,
	398, 399, 420, 383, 0, 437, 274, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 0, 0, 0,
	358, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 1210, 0, 0, 0, 252, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 243, 363, 379, 253, 354, 392,
	258, 361, 248, 328, 351, 0, 0, 245, 377, 360,
	310, 293, 294, 244, 0, 346, 272, 285, 269, 326,
	0, 376, 404, 268, 395, 0, 387, 247, 0, 386,
	325, 373, 378, 311, 305, 246, 375, 309, 304, 297,
	276, 419, 289, 337, 303, 338, 290, 315, 314, 316,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 0,
	362, 0, 0, 298, 0, 0, 0, 405, 0, 349,
	331, 0, 0, 0, 347, 301, 374, 339, 380, 364,
	388, 343, 340, 238, 365, 271, 312, 249, 251, 266,
	273, 275, 277, 278, 321, 322, 334, 353, 366, 367,
	368, 270, 259, 348, 260, 287, 261, 239, 263, 262,
	264, 355, 265, 241, 335, 372, 0, 283, 344, 308,
	242, 307, 336, 371, 370, 250, 396, 402, 403, 0,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 401, 281, 235, 236, 440, 267,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 400, 0, 0, 0, 429, 439, 0,
	0, 0, 0, 0, 438, 333, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 382, 394, 411, 414, 0, 0, 0, 0, 240,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 409,
	0, 0, 317, 318, 319, 320, 284, 0, 257, 412,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	280, 286, 424, 288, 256, 332, 282, 391, 295, 0,
	417, 0, 418, 0, 0, 0, 0, 324, 291, 292,
	356, 296, 302, 345, 390, 330, 350, 254, 381, 357,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 234, 0, 0, 237, 0, 300, 0, 341,
	279, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 329, 0, 0, 230, 231, 232, 233, 0, 0,
	0, 397, 398, 399, 420, 383, 0, 437, 274, 0,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 431, 0, 0, 0,
	0, 0, 358, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 1210, 0, 0, 0,
	252, 186, 432, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2898,
	0, 0, 0, 0, 0, 0, 243, 363, 379, 253,
	354, 392, 258, 361, 248, 328, 351, 0, 0, 245,
	377, 360, 310, 293, 294, 244, 0, 346, 272, 285,
	269, 326, 0, 376, 404, 268, 395, 0, 387, 247,
	0, 386, 325, 373, 378, 311, 305, 246, 375, 309,
	304, 297, 276, 419, 289, 337, 303, 338, 290, 315,
	314, 316, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 0, 362, 0, 0, 298, 0, 0, 0, 405,
	0, 349, 331, 0, 0, 0, 347, 301, 374, 339,
	380, 364, 388, 343, 340, 238, 365, 271, 312, 249,
	251, 266, 273, 275, 277, 278, 321, 322, 334, 353,
	366, 367, 368, 270, 259, 348, 260, 287, 261, 239,
	263, 262, 264, 355, 265, 241, 335, 372, 0, 283,
	344, 308, 242, 307, 336, 371, 370, 250, 396, 402,
	403, 0, 0, 408, 0, 0, 0, 416, 421, 422,
	423, 425, 426, 427, 428, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 401, 281, 235, 236,
	440, 267, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 400, 0, 0, 0, 429,
	439, 0, 0, 0, 0, 0, 438, 333, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 382, 394, 411, 414, 0, 0, 0,
	0, 240, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 409, 0, 0, 317, 318, 319, 320, 284, 0,
	257, 412, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 407, 280, 286, 424, 288, 256, 332, 282, 391,
	295, 0, 417, 0, 418, 0, 0, 0, 0, 324,
	291, 292, 356, 296, 302, 345, 390, 330, 350, 254,
	381, 357, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 234, 0, 0, 237, 0, 300,
	0, 341, 279, 0, 0, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 0, 0, 230, 231, 232, 233,
	329, 0, 0, 397, 398, 399, 420, 383, 0, 437,
	0, 0, 2064, 0, 0, 0, 0, 274, 0, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 358, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 2066, 0, 0, 0, 252,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 363, 379, 253, 354,
	392, 258, 361, 248, 328, 351, 0, 0, 245, 377,
	360, 310, 293, 294, 244, 0, 346, 272, 285, 269,
	326, 0, 376, 404, 268, 395, 0, 387, 247, 0,
	386, 325, 373, 378, 311, 305, 246, 375, 309, 304,
	297, 276, 419, 289, 337, 303, 338, 290, 315, 314,
	316, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	0, 362, 0, 0, 298, 0, 0, 0, 405, 0,
	349, 331, 0, 0, 0, 347, 301, 374, 339, 380,
	364, 388, 343, 340, 238, 365, 271, 312, 249, 251,
	266, 273, 275, 277, 278, 321, 322, 334, 353, 366,
	367, 368, 270, 259, 348, 260, 287, 261, 239, 263,
	262, 264, 355, 265, 241, 335, 372, 0, 283, 344,
	308, 242, 307, 336, 371, 370, 250, 396, 402, 403,
	0, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 401, 281, 235, 236, 440,
	267, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 400, 0, 0, 0, 429, 439,
	0, 0, 0, 0, 0, 438, 333, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 382, 394, 411, 414, 0, 0, 0, 0,
	240, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	409, 0, 0, 317, 318, 319, 320, 284, 0, 257,
	412, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 280, 286, 424, 288, 256, 332, 282, 391, 295,
	0, 417, 0, 418, 0, 0, 0, 0, 324, 291,
	292, 356, 296, 302, 345, 390, 330, 350, 254, 381,
	357, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 234, 0, 0, 237, 0, 300, 0,
	341, 279, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 329, 0, 0, 230, 231, 232, 233, 0,
	0, 0, 397, 398, 399, 420, 383, 0, 437, 274,
	2085, 0, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 358, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 1210, 0, 0,
	0, 252, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 363, 379,
	253, 354, 392, 258, 361, 248, 328, 351, 0, 0,
	245, 377, 360, 310, 293, 294, 244, 0, 346, 272,
	285, 269, 326, 0, 376, 404, 268, 395, 0, 387,
	247, 0, 386, 325, 373, 378, 311, 305, 246, 375,
	309, 304, 297, 276, 419, 289, 337, 303, 338, 290,
	315, 314, 316, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 0, 362, 0, 0, 298, 0, 0, 0,
	405, 0, 349, 331, 0, 0, 0, 347, 301, 374,
	339, 380, 364, 388, 343, 340, 238, 365, 271, 312,
	249, 251, 266, 273, 275, 277, 278, 321, 322, 334,
	353, 366, 367, 368, 270, 259, 348, 260, 287, 261,
	239, 263, 262, 264, 355, 265, 241, 335, 372, 0,
	283, 344, 308, 242, 307, 336, 371, 370, 250, 396,
	402, 403, 0, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 401, 281, 235,
	236, 440, 267, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 400, 0, 0, 0,
	429, 439, 0, 0, 0, 0, 0, 438, 333, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 382, 394, 411, 414, 0, 0,
	0, 0, 240, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 409, 0, 0, 317, 318, 319, 320, 284,
	0, 257, 412, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 280, 286, 424, 288, 256, 332, 282,
	391, 295, 0, 417, 0, 418, 0, 0, 0, 0,
	324, 291, 292, 356, 296, 302, 345, 390, 330, 350,
	254, 381, 357, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 234, 0, 0, 237, 0,
	300, 0, 341, 279, 0, 0, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 329, 0, 0, 230, 231, 232,
	233, 0, 0, 0, 397, 398, 399, 420, 383, 0,
	437, 274, 0, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 358, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3256, 0, 185, 0, 0, 0,
	0, 0, 0, 252, 186, 432, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	363, 379, 253, 354, 392, 258, 361, 248, 328, 351,
	0, 0, 245, 377, 360, 310, 293, 294, 244, 0,
	346, 272, 285, 269, 326, 0, 376, 404, 268, 395,
	0, 387, 247, 0, 386, 325, 373, 378, 311, 305,
	246, 375, 309, 304, 297, 276, 419, 289, 337, 303,
	338, 290, 315, 314, 316, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 0, 362, 0, 0, 298, 0,
	0, 0, 405, 0, 349, 331, 0, 0, 0, 347,
	301, 374, 339, 380, 364, 388, 343, 340, 238, 365,
	271, 312, 249, 251, 266, 273, 275, 277, 278, 321,
	322, 334, 353, 366, 367, 368, 270, 259, 348, 260,
	287, 261, 239, 263, 262, 264, 355, 265, 241, 335,
	372, 0, 283, 344, 308, 242, 307, 336, 371, 370,
	250, 396, 402, 403, 0, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 401,
	281, 235, 236, 440, 267, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 400, 0,
	0, 0, 429, 439, 0, 0, 0, 0, 0, 438,
	333, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 382, 394, 411, 414,
	0, 0, 0, 0, 240, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 409, 0, 0, 317, 318, 319,
	320, 284, 0, 257, 412, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 280, 286, 424, 288, 256,
	332, 282, 391, 295, 0, 417, 0, 418, 0, 0,
	0, 0, 324, 291, 292, 356, 296, 302, 345, 390,
	330, 350, 254, 381, 357, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 234, 0, 0,
	237, 0, 300, 0, 341, 279, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 329, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 397, 398, 399, 420,
	383, 0, 437, 274, 0, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 358, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 612,
	0, 0, 0, 0, 0, 252, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 363, 379, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 0, 376, 404,
	268, 395, 0, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 419, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 362, 0, 0,
	298, 0, 0, 0, 405, 0, 349, 331, 0, 0,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 440, 267, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	400, 0, 0, 0, 429, 439, 0, 0, 0, 0,
	0, 438, 333, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 409, 0, 0, 317,
	318, 319, 320, 284, 0, 257, 412, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 0, 341, 279, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 329, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 397, 398,
	399, 420, 383, 0, 437, 274, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 358,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3182, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 252, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 363, 379, 253, 354, 392, 258,
	361, 248, 328, 351, 0, 0, 245, 377, 360, 310,
	293, 294, 244, 0, 346, 272, 285, 269, 326, 0,
	376, 404, 268, 395, 0, 387, 247, 0, 386, 325,
	373, 378, 311, 305, 246, 375, 309, 304, 297, 276,
	419, 289, 337, 303, 338, 290, 315, 314, 316, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 362,
	0, 0, 298, 0, 0, 0, 405, 0, 349, 331,
	0, 0, 0, 347, 301, 374, 339, 380, 364, 388,
	343, 340, 238, 365, 271, 312, 249, 251, 266, 273,
	275, 277, 278, 321, 322, 334, 353, 366, 367, 368,
	270, 259, 348, 260, 287, 261, 239, 263, 262, 264,
	355, 265, 241, 335, 372, 0, 283, 344, 308, 242,
	307, 336, 371, 370, 250, 396, 402, 403, 0, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 401, 281, 235, 236, 440, 267, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 400, 0, 0, 0, 429, 439, 0, 0,
	0, 0, 0, 438, 333, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	382, 394, 411, 414, 0, 0, 0, 0, 240, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 409, 0,
	0, 317, 318, 319, 320, 284, 0, 257, 412, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 280,
	286, 424, 288, 256, 332, 282, 391, 295, 0, 417,
	0, 418, 0, 0, 0, 0, 324, 291, 292, 356,
	296, 302, 345, 390, 330, 350, 254, 381, 357, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 234, 0, 0, 237, 0, 300, 0, 341, 279,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	329, 0, 0, 230, 231, 232, 233, 0, 0, 0,
	397, 398, 399, 420, 383, 0, 437, 274, 0, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 358, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 252,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 363, 379, 253, 354,
	392, 258, 361, 248, 328, 351, 0, 0, 245, 377,
	360, 310, 293, 294, 244, 0, 346, 272, 285, 269,
	326, 0, 376, 404, 268, 395, 0, 387, 247, 0,
	386, 325, 373, 378, 311, 305, 246, 375, 309, 304,
	297, 276, 419, 289, 337, 303, 338, 290, 315, 314,
	316, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 3112, 0,
	0, 362, 0, 0, 298, 0, 0, 0, 405, 0,
	349, 331, 0, 0, 0, 347, 301, 374, 339, 380,
	364, 388, 343, 340, 238, 365, 271, 312, 249, 251,
	266, 273, 275, 277, 278, 321, 322, 334, 353, 366,
	367, 368, 270, 259, 348, 260, 287, 261, 239, 263,
	262, 264, 355, 265, 241, 335, 372, 0, 283, 344,
	308, 242, 307, 336, 371, 370, 250, 396, 402, 403,
	0, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 401, 281, 235, 236, 440,
	267, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 400, 0, 0, 0, 429, 439,
	0, 0, 0, 0, 0, 438, 333, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 382, 394, 411, 414, 0, 0, 0, 0,
	240, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	409, 0, 0, 317, 318, 319, 320, 284, 0, 257,
	412, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 280, 286, 424, 288, 256, 332, 282, 391, 295,
	0, 417, 0, 418, 0, 0, 0, 0, 324, 291,
	292, 356, 296, 302, 345, 390, 330, 350, 254, 381,
	357, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 234, 0, 0, 237, 0, 300, 0,
	341, 279, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 329, 0, 0, 230, 231, 232, 233, 0,
	0, 0, 397, 398, 399, 420, 383, 0, 437, 274,
	0, 0, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 358, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2894, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 252, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 363, 379,
	253, 354, 392, 258, 361, 248, 328, 351, 0, 0,
	245, 377, 360, 310, 293, 294, 244, 0, 346, 272,
	285, 269, 326, 0, 376, 404, 268, 395, 0, 387,
	247, 0, 386, 325, 373, 378, 311, 305, 246, 375,
	309, 304, 297, 276, 419, 289, 337, 303, 338, 290,
	315, 314, 316, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 0, 362, 0, 0, 298, 0, 0, 0,
	405, 0, 349, 331, 0, 0, 0, 347, 301, 374,
	339, 380, 364, 388, 343, 340, 238, 365, 271, 312,
	249, 251, 266, 273, 275, 277, 278, 321, 322, 334,
	353, 366, 367, 368, 270, 259, 348, 260, 287, 261,
	239, 263, 262, 264, 355, 265, 241, 335, 372, 0,
	283, 344, 308, 242, 307, 336, 371, 370, 250, 396,
	402, 403, 0, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 401, 281, 235,
	236, 440, 267, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 400, 0, 0, 0,
	429, 439, 0, 0, 0, 0, 0, 438, 333, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 382, 394, 411, 414, 0, 0,
	0, 0, 240, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 409, 0, 0, 317, 318, 319, 320, 284,
	0, 257, 412, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 280, 286, 424, 288, 256, 332, 282,
	391, 295, 0, 417, 0, 418, 0, 0, 0, 0,
	324, 291, 292, 356, 296, 302, 345, 390, 330, 350,
	254, 381, 357, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 234, 0, 0, 237, 0,
	300, 0, 341, 279, 0, 0, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 329, 0, 0, 230, 231, 232,
	233, 0, 0, 0, 397, 398, 399, 420, 383, 0,
	437, 274, 0, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 358, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 252, 186, 432, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	363, 379, 253, 354, 392, 258, 361, 248, 328, 351,
	0, 0, 245, 377, 360, 310, 293, 294, 244, 0,
	346, 272, 285, 269, 326, 0, 376, 404, 268, 395,
	0, 387, 247, 0, 386, 325, 373, 378, 311, 305,
	246, 375, 309, 304, 297, 276, 419, 289, 337, 303,
	338, 290, 315, 314, 316, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 2967, 0, 0, 362, 0, 0, 298, 0,
	0, 0, 405, 0, 349, 331, 0, 0, 0, 347,
	301, 374, 339, 380, 364, 388, 343, 340, 238, 365,
	271, 312, 249, 251, 266, 273, 275, 277, 278, 321,
	322, 334, 353, 366, 367, 368, 270, 259, 348, 260,
	287, 261, 239, 263, 262, 264, 355, 265, 241, 335,
	372, 0, 283, 344, 308, 242, 307, 336, 371, 370,
	250, 396, 402, 403, 0, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 401,
	281, 235, 236, 440, 267, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 400, 0,
	0, 0, 429, 439, 0, 0, 0, 0, 0, 438,
	333, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 382, 394, 411, 414,
	0, 0, 0, 0, 240, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 409, 0, 0, 317, 318, 319,
	320, 284, 0, 257, 412, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 280, 286, 424, 288, 256,
	332, 282, 391, 295, 0, 417, 0, 418, 0, 0,
	0, 0, 324, 291, 292, 356, 296, 302, 345, 390,
	330, 350, 254, 381, 357, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 234, 0, 0,
	237, 0, 300, 0, 341, 279, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 329, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 397, 398, 399, 420,
	383, 0, 437, 274, 0, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 358, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 252, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2608, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 363, 379, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 0, 376, 404,
	268, 395, 0, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 419, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 362, 0, 0,
	298, 0, 0, 0, 405, 0, 349, 331, 0, 0,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 440, 267, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	400, 0, 0, 0, 429, 439, 0, 0, 0, 0,
	0, 438, 333, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 409, 0, 0, 317,
	318, 319, 320, 284, 0, 257, 412, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 0, 341, 279, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 329, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 397, 398,
	399, 420, 383, 0, 437, 274, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 358,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 252, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 363, 379, 253, 354, 392, 258,
	361, 248, 328, 351, 0, 0, 245, 377, 360, 310,
	293, 294, 244, 0, 346, 272, 285, 269, 326, 0,
	376, 404, 268, 395, 0, 387, 247, 0, 386, 325,
	373, 378, 311, 305, 246, 375, 309, 304, 297, 276,
	419, 289, 337, 303, 338, 290, 315, 314, 316, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 362,
	0, 0, 298, 0, 0, 0, 405, 0, 349, 331,
	0, 0, 0, 347, 301, 374, 339, 380, 364, 388,
	343, 340, 238, 365, 271, 312, 249, 251, 266, 273,
	275, 277, 278, 321, 322, 334, 353, 366, 367, 368,
	270, 259, 348, 260, 287, 261, 239, 263, 262, 264,
	355, 265, 241, 335, 372, 0, 283, 344, 308, 242,
	307, 336, 371, 370, 250, 396, 402, 403, 0, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 401, 281, 235, 236, 440, 267, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 400, 0, 0, 0, 429, 439, 0, 0,
	0, 0, 0, 438, 333, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	382, 394, 411, 414, 0, 0, 0, 0, 240, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 409, 0,
	0, 317, 318, 319, 320, 284, 0, 257, 412, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 280,
	286, 424, 288, 256, 332, 282, 391, 295, 0, 417,
	0, 418, 0, 0, 0, 0, 324, 291, 292, 356,
	296, 302, 345, 390, 330, 350, 254, 381, 357, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 234, 0, 0, 237, 0, 300, 0, 341, 279,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	329, 0, 0, 230, 231, 232, 233, 0, 0, 0,
	397, 398, 399, 420, 383, 0, 437, 274, 0, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 358, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 2270, 0, 0, 0, 252,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 363, 379, 253, 354,
	392, 258, 361, 248, 328, 351, 0, 0, 245, 377,
	360, 310, 293, 294, 244, 0, 346, 272, 285, 269,
	326, 0, 376, 404, 268, 395, 0, 387, 247, 0,
	386, 325, 373, 378, 311, 305, 246, 375, 309, 304,
	297, 276, 419, 289, 337, 303, 338, 290, 315, 314,
	316, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	0, 362, 0, 0, 298, 0, 0, 0, 405, 0,
	349, 331, 0, 0, 0, 347, 301, 374, 339, 380,
	364, 388, 343, 340, 238, 365, 271, 312, 249, 251,
	266, 273, 275, 277, 278, 321, 322, 334, 353, 366,
	367, 368, 270, 259, 348, 260, 287, 261, 239, 263,
	262, 264, 355, 265, 241, 335, 372, 0, 283, 344,
	308, 242, 307, 336, 371, 370, 250, 396, 402, 403,
	0, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 401, 281, 235, 236, 440,
	267, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 400, 0, 0, 0, 429, 439,
	0, 0, 0, 0, 0, 438, 333, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 382, 394, 411, 414, 0, 0, 0, 0,
	240, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	409, 0, 0, 317, 318, 319, 320, 284, 0, 257,
	412, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 280, 286, 424, 288, 256, 332, 282, 391, 295,
	0, 417, 0, 418, 0, 0, 0, 0, 324, 291,
	292, 356, 296, 302, 345, 390, 330, 350, 254, 381,
	357, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 234, 0, 0, 237, 0, 300, 0,
	341, 279, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 329, 0, 0, 230, 231, 232, 233, 0,
	0, 0, 397, 398, 399, 420, 383, 0, 437, 274,
	0, 0, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 358, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 252, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 363, 379,
	253, 354, 392, 258, 361, 248, 328, 351, 0, 0,
	245, 377, 360, 310, 293, 294, 244, 0, 346, 272,
	285, 269, 326, 0, 376, 404, 268, 395, 0, 387,
	247, 0, 386, 325, 373, 378, 311, 305, 246, 375,
	309, 304, 297, 276, 419, 289, 337, 303, 338, 290,
	315, 314, 316, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 0, 362, 0, 0, 298, 0, 0, 0,
	405, 0, 349, 331, 0, 0, 0, 347, 301, 374,
	339, 380, 364, 388, 343, 340, 238, 365, 271, 312,
	249, 251, 266, 273, 275, 277, 278, 321, 322, 334,
	353, 366, 367, 368, 270, 259, 348, 260, 287, 261,
	239, 263, 262, 264, 355, 265, 241, 335, 372, 0,
	283, 344, 308, 242, 307, 336, 371, 370, 250, 396,
	402, 403, 0, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 401, 281, 235,
	236, 440, 267, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 400, 0, 0, 0,
	429, 439, 0, 0, 0, 0, 0, 438, 333, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 382, 394, 411, 414, 0, 0,
	0, 0, 240, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 409, 0, 0, 317, 318, 319, 320, 284,
	0, 257, 412, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 280, 286, 424, 288, 256, 332, 282,
	391, 295, 0, 417, 0, 418, 0, 0, 0, 0,
	324, 291, 292, 356, 296, 302, 345, 390, 330, 350,
	254, 381, 357, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 234, 0, 0, 237, 0,
	300, 0, 341, 279, 0, 0, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 329, 0, 0, 230, 231, 232,
	233, 0, 0, 0, 397, 398, 399, 420, 383, 0,
	437, 274, 0, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 358, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 2553,
	0, 0, 0, 252, 186, 432, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	363, 379, 253, 354, 392, 258, 361, 248, 328, 351,
	0, 0, 245, 377, 360, 310, 293, 294, 244, 0,
	346, 272, 285, 269, 326, 0, 376, 404, 268, 395,
	0, 387, 247, 0, 386, 325, 373, 378, 311, 305,
	246, 375, 309, 304, 297, 276, 419, 289, 337, 303,
	338, 290, 315, 314, 316, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 0, 362, 0, 0, 298, 0,
	0, 0, 405, 0, 349, 331, 0, 0, 0, 347,
	301, 374, 339, 380, 364, 388, 343, 340, 238, 365,
	271, 312, 249, 251, 266, 273, 275, 277, 278, 321,
	322, 334, 353, 366, 367, 368, 270, 259, 348, 260,
	287, 261, 239, 263, 262, 264, 355, 265, 241, 335,
	372, 0, 283, 344, 308, 242, 307, 336, 371, 370,
	250, 396, 402, 403, 0, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 401,
	281, 235, 236, 440, 267, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 400, 0,
	0, 0, 429, 439, 0, 0, 0, 0, 0, 438,
	333, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 382, 394, 411, 414,
	0, 0, 0, 0, 240, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 409, 0, 0, 317, 318, 319,
	320, 284, 0, 257, 412, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 280, 286, 424, 288, 256,
	332, 282, 391, 295, 0, 417, 0, 418, 0, 0,
	0, 0, 324, 291, 292, 356, 296, 302, 345, 390,
	330, 350, 254, 381, 357, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 234, 0, 0,
	237, 0, 300, 0, 341, 279, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 329, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 397, 398, 399, 420,
	383, 0, 437, 274, 0, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 358, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 252, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 363, 379, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 0, 376, 404,
	268, 395, 0, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 419, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 362, 0, 0,
	298, 0, 0, 0, 405, 0, 349, 331, 0, 0,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 440, 267, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	400, 0, 0, 0, 429, 439, 0, 0, 0, 0,
	0, 438, 333, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 409, 0, 0, 317,
	318, 319, 320, 284, 0, 257, 412, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 0, 341, 279, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 329, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 397, 398,
	399, 420, 383, 0, 437, 274, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 358,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 1210, 0, 0, 0, 252, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 363, 379, 253, 354, 392, 258,
	361, 248, 328, 351, 0, 0, 245, 377, 360, 310,
	293, 294, 244, 0, 346, 272, 285, 269, 326, 0,
	376, 404, 268, 395, 0, 387, 247, 0, 386, 325,
	373, 378, 311, 305, 246, 375, 309, 304, 297, 276,
	419, 289, 337, 303, 338, 290, 315, 314, 316, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 362,
	0, 0, 298, 0, 0, 0, 405, 0, 349, 331,
	0, 0, 0, 347, 301, 374, 339, 380, 364, 388,
	343, 340, 238, 365, 271, 312, 249, 251, 266, 273,
	275, 277, 278, 321, 322, 334, 353, 366, 367, 368,
	270, 259, 348, 260, 287, 261, 239, 263, 262, 264,
	355, 265, 241, 335, 372, 0, 283, 344, 308, 242,
	307, 336, 371, 370, 250, 396, 402, 403, 0, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 401, 281, 235, 236, 440, 267, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 400, 0, 0, 0, 429, 439, 0, 0,
	0, 0, 0, 438, 333, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	382, 394, 411, 414, 0, 0, 0, 0, 240, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 409, 0,
	0, 317, 318, 319, 320, 284, 0, 257, 412, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 280,
	286, 424, 288, 256, 332, 282, 391, 295, 0, 417,
	0, 418, 0, 0, 0, 0, 324, 291, 292, 356,
	296, 302, 345, 390, 330, 350, 254, 381, 357, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 234, 0, 0, 237, 0, 300, 0, 341, 279,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	329, 0, 0, 230, 231, 232, 233, 0, 0, 0,
	397, 398, 399, 420, 383, 0, 437, 274, 0, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 358, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 2066, 0, 0, 0, 252,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 363, 379, 253, 354,
	392, 258, 361, 248, 328, 351, 0, 0, 245, 377,
	360, 310, 293, 294, 244, 0, 346, 272, 285, 269,
	326, 0, 376, 404, 268, 395, 0, 387, 247, 0,
	386, 325, 373, 378, 311, 305, 246, 375, 309, 304,
	297, 276, 419, 289, 337, 303, 338, 290, 315, 314,
	316, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	0, 362, 0, 0, 298, 0, 0, 0, 405, 0,
	349, 331, 0, 0, 0, 347, 301, 374, 339, 380,
	364, 388, 343, 340, 238, 365, 271, 312, 249, 251,
	266, 273, 275, 277, 278, 321, 322, 334, 353, 366,
	367, 368, 270, 259, 348, 260, 287, 261, 239, 263,
	262, 264, 355, 265, 241, 335, 372, 0, 283, 344,
	308, 242, 307, 336, 371, 370, 250, 396, 402, 403,
	0, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 401, 281, 235, 236, 440,
	267, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 400, 0, 0, 0, 429, 439,
	0, 0, 0, 0, 0, 438, 333, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 382, 394, 411, 414, 0, 0, 0, 0,
	240, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	409, 0, 0, 317, 318, 319, 320, 284, 0, 257,
	412, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 280, 286, 424, 288, 256, 332, 282, 391, 295,
	0, 417, 0, 418, 0, 0, 0, 0, 324, 291,
	292, 356, 296, 302, 345, 390, 330, 350, 254, 381,
	357, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 234, 0, 0, 237, 0, 300, 0,
	341, 279, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 329, 0, 0, 230, 231, 232, 233, 0,
	0, 0, 397, 398, 399, 420, 383, 0, 437, 274,
	0, 0, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 358, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 252, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 363, 379,
	253, 354, 392, 258, 361, 248, 328, 351, 0, 0,
	245, 377, 360, 310, 293, 294, 244, 0, 346, 272,
	285, 269, 326, 0, 376, 404, 268, 395, 0, 387,
	247, 0, 386, 325, 373, 378, 311, 305, 246, 375,
	309, 304, 297, 276, 419, 289, 337, 303, 338, 290,
	315, 314, 316, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 0, 362, 0, 0, 298, 0, 0, 0,
	405, 0, 349, 331, 0, 0, 0, 347, 301, 374,
	339, 380, 364, 388, 343, 340, 238, 365, 271, 312,
	249, 251, 266, 273, 275, 277, 278, 321, 322, 334,
	353, 366, 367, 368, 270, 259, 348, 260, 287, 261,
	239, 263, 262, 264, 355, 265, 241, 335, 372, 0,
	283, 344, 308, 242, 307, 336, 371, 370, 250, 396,
	402, 403, 0, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 401, 281, 235,
	236, 440, 267, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 400, 0, 0, 0,
	429, 439, 0, 0, 0, 0, 0, 438, 333, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 382, 394, 411, 414, 0, 0,
	0, 0, 240, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 409, 0, 0, 317, 318, 319, 320, 284,
	0, 257, 412, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 280, 286, 424, 288, 256, 332, 282,
	391, 295, 0, 417, 0, 418, 0, 0, 0, 0,
	324, 291, 292, 356, 296, 302, 345, 390, 330, 350,
	254, 381, 357, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 234, 0, 0, 237, 0,
	300, 0, 341, 279, 0, 0, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 329, 0, 0, 230, 231, 232,
	233, 0, 0, 0, 397, 398, 399, 420, 383, 0,
	437, 274, 0, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 358, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 252, 186, 432, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	363, 379, 253, 354, 392, 258, 361, 248, 328, 351,
	0, 0, 245, 377, 360, 310, 293, 294, 244, 0,
	346, 272, 285, 269, 326, 0, 376, 404, 268, 395,
	0, 387, 247, 0, 386, 325, 373, 378, 311, 305,
	246, 375, 309, 304, 297, 276, 419, 289, 337, 303,
	338, 290, 315, 314, 316, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 0, 362, 0, 0, 298, 0,
	0, 0, 405, 0, 349, 331, 0, 0, 0, 347,
	301, 374, 339, 380, 364, 388, 343, 340, 238, 365,
	271, 312, 249, 251, 266, 273, 275, 277, 278, 321,
	322, 334, 353, 366, 367, 368, 270, 259, 348, 260,
	287, 261, 239, 263, 262, 264, 355, 265, 241, 335,
	372, 0, 283, 344, 308, 242, 307, 336, 371, 370,
	250, 396, 402, 403, 0, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 401,
	281, 235, 236, 440, 267, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 400, 0,
	0, 0, 429, 439, 0, 0, 0, 0, 0, 438,
	333, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 382, 394, 411, 414,
	0, 0, 0, 0, 240, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 409, 0, 0, 317, 318, 319,
	320, 284, 0, 257, 412, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 280, 286, 424, 288, 256,
	332, 282, 391, 295, 0, 417, 0, 418, 0, 0,
	0, 0, 324, 291, 292, 356, 296, 302, 345, 390,
	330, 350, 254, 381, 357, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 234, 0, 0,
	237, 0, 300, 0, 341, 279, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 329, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 397, 398, 399, 420,
	383, 0, 437, 274, 0, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 358, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 2101, 0, 0, 0, 252, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 363, 379, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 0, 376, 404,
	268, 395, 0, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 419, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 362, 0, 0,
	298, 0, 0, 0, 405, 0, 349, 331, 0, 0,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 440, 267, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	400, 0, 0, 0, 429, 439, 0, 0, 0, 0,
	0, 438, 333, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 409, 0, 0, 317,
	318, 319, 320, 284, 0, 257, 412, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 0, 341, 279, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 0, 1939,
	0, 230, 231, 232, 233, 329, 0, 0, 397, 398,
	399, 420, 383, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 0, 0, 0, 358, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 252, 186, 432, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 363, 379, 253, 354, 392, 258, 361, 248, 328,
	351, 0, 0, 245, 377, 360, 310, 293, 294, 244,
	0, 346, 272, 285, 269, 326, 0, 376, 404, 268,
	395, 0, 387, 247, 0, 386, 325, 373, 378, 311,
	305, 246, 375, 309, 304, 297, 276, 419, 289, 337,
	303, 338, 290, 315, 314, 316, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 0, 362, 0, 0, 298,
	0, 0, 0, 405, 0, 349, 331, 0, 0, 0,
	347, 301, 374, 339, 380, 364, 388, 343, 340, 238,
	365, 271, 312, 249, 251, 266, 273, 275, 277, 278,
	321, 322, 334, 353, 366, 367, 368, 270, 259, 348,
	260, 287, 261, 239, 263, 262, 264, 355, 265, 241,
	335, 372, 0, 283, 344, 308, 242, 307, 336, 371,
	370, 250, 396, 402, 403, 0, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	401, 281, 235, 236, 440, 267, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 400,
	0, 0, 0, 429, 439, 0, 0, 0, 0, 0,
	438, 333, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 382, 394, 411,
	414, 0, 0, 0, 0, 240, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 409, 0, 0, 317, 318,
	319, 320, 284, 0, 257, 412, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 407, 280, 286, 424, 288,
	256, 332, 282, 391, 295, 0, 417, 0, 418, 0,
	0, 0, 0, 324, 291, 292, 356, 296, 302, 345,
	390, 330, 350, 254, 381, 357, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 234, 0,
	0, 237, 0, 300, 0, 341, 279, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 329, 0, 0,
	230, 231, 232, 233, 0, 1631, 0, 397, 398, 399,
	420, 383, 0, 437, 274, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 0, 0, 0, 358, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 252, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 363, 379, 253, 354, 392, 258, 361,
	248, 328, 351, 0, 0, 245, 377, 360, 310, 293,
	294, 244, 0, 346, 272, 285, 269, 326, 0, 376,
	404, 268, 395, 0, 387, 247, 0, 386, 325, 373,
	378, 311, 305, 246, 375, 309, 304, 297, 276, 419,
	289, 337, 303, 338, 290, 315, 314, 316, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 0, 0, 0, 362, 0,
	0, 298, 0, 0, 0, 405, 0, 349, 331, 0,
	0, 0, 347, 301, 374, 339, 380, 364, 388, 343,
	340, 238, 365, 271, 312, 249, 251, 266, 273, 275,
	277, 278, 321, 322, 334, 353, 366, 367, 368, 270,
	259, 348, 260, 287, 261, 239, 263, 262, 264, 355,
	265, 241, 335, 372, 0, 283, 344, 308, 242, 307,
	336, 371, 370, 250, 396, 402, 403, 0, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 401, 281, 235, 236, 440, 267, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 400, 0, 0, 0, 429, 439, 0, 0, 0,
	0, 0, 438, 333, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 382,
	394, 411, 414, 0, 0, 0, 0, 240, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 409, 0, 0,
	317, 318, 319, 320, 284, 0, 257, 412, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 407, 280, 286,
	424, 288, 256, 332, 282, 391, 295, 0, 417, 0,
	418, 0, 0, 0, 0, 324, 291, 292, 356, 296,
	302, 345, 390, 330, 350, 254, 381, 357, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	234, 0, 0, 237, 0, 300, 0, 341, 279, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 329,
	0, 0, 230, 231, 232, 233, 0, 0, 0, 397,
	398, 399, 420, 383, 0, 437, 274, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 0, 431, 0, 0, 0, 0, 0,
	358, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 1210, 0, 0, 0, 252, 186,
	432, 0, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 363, 379, 253, 354, 392,
	258, 361, 248, 328, 351, 0, 0, 245, 377, 360,
	310, 293, 294, 244, 0, 346, 272, 285, 269, 326,
	0, 376, 404, 268, 395, 0, 387, 247, 0, 386,
	325, 373, 378, 311, 305, 246, 375, 309, 304, 297,
	276, 419, 289, 337, 303, 338, 290, 315, 314, 316,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 389, 0, 0, 0, 0, 0, 0,
	362, 0, 0, 298, 0, 0, 0, 405, 0, 349,
	331, 0, 0, 0, 347, 301, 374, 339, 380, 364,
	388, 1544, 340, 238, 365, 271, 312, 249, 251, 266,
	273, 275, 277, 278, 321, 322, 334, 353, 366, 367,
	368, 270, 259, 348, 260, 287, 261, 239, 263, 262,
	264, 355, 265, 241, 335, 372, 0, 283, 344, 308,
	242, 307, 336, 371, 370, 250, 396, 402, 403, 0,
	0, 408, 0, 0, 0, 416, 421, 422, 423, 425,
	426, 427, 428, 0, 0, 0, 0, 410, 0, 0,
	0, 0, 0, 0, 401, 281, 235, 236, 440, 267,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 400, 0, 0, 0, 429, 439, 0,
	0, 0, 0, 0, 438, 333, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	359, 382, 394, 411, 414, 0, 0, 0, 0, 240,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 385,
	0, 0, 0, 393, 0, 0, 0, 0, 0, 409,
	0, 0, 317, 318, 319, 320, 284, 0, 257, 412,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	280, 286, 424, 288, 256, 332, 282, 391, 295, 0,
	417, 0, 418, 0, 0, 0, 0, 324, 291, 292,
	356, 296, 302, 345, 390, 330, 350, 254, 381, 357,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	369, 0, 234, 0, 0, 237, 0, 300, 0, 341,
	279, 0, 0, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 0, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 329, 0, 0, 230, 231, 232, 233, 0, 0,
	0, 397, 398, 399, 420, 383, 0, 437, 274, 0,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 430, 0, 431, 0, 0, 0,
	0, 0, 358, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 0,
	252, 186, 432, 0, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 363, 379, 253,
	354, 392, 258, 361, 248, 328, 351, 0, 0, 245,
	377, 360, 310, 293, 294, 244, 0, 346, 272, 285,
	269, 326, 0, 376, 404, 268, 395, 0, 387, 247,
	0, 386, 325, 373, 378, 311, 305, 246, 375, 309,
	304, 297, 276, 419, 289, 337, 303, 338, 290, 315,
	314, 316, 0, 0, 0, 0, 0, 415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 1235, 0,
	0, 0, 362, 0, 0, 298, 0, 0, 0, 405,
	0, 349, 331, 0, 0, 0, 347, 301, 374, 339,
	380, 364, 388, 343, 340, 238, 365, 271, 312, 249,
	251, 266, 273, 275, 277, 278, 321, 322, 334, 353,
	366, 367, 368, 270, 259, 348, 260, 287, 261, 239,
	263, 262, 264, 355, 265, 241, 335, 372, 0, 283,
	344, 308, 242, 307, 336, 371, 370, 250, 396, 402,
	403, 0, 0, 408, 0, 0, 0, 416, 421, 422,
	423, 425, 426, 427, 428, 0, 0, 0, 0, 410,
	0, 0, 0, 0, 0, 0, 401, 281, 235, 236,
	440, 267, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 400, 0, 0, 0, 429,
	439, 0, 0, 0, 0, 0, 438, 333, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 359, 382, 394, 411, 414, 0, 0, 0,
	0, 240, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 385, 0, 0, 0, 393, 0, 0, 0, 0,
	0, 409, 0, 0, 317, 318, 319, 320, 284, 0,
	257, 412, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	406, 407, 280, 286, 424, 288, 256, 332, 282, 391,
	295, 0, 417, 0, 418, 0, 0, 0, 0, 324,
	291, 292, 356, 296, 302, 345, 390, 330, 350, 254,
	381, 357, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 369, 0, 234, 0, 0, 237, 0, 300,
	0, 341, 279, 0, 0, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 0, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 329, 0, 0, 230, 231, 232, 233,
	0, 0, 0, 397, 398, 399, 420, 383, 0, 437,
	274, 0, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 0, 431, 0,
	0, 0, 0, 0, 358, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 0, 0,
	0, 0, 252, 186, 432, 0, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 363,
	379, 253, 354, 392, 258, 361, 248, 328, 351, 0,
	0, 245, 377, 360, 310, 293, 294, 244, 0, 346,
	272, 285, 269, 326, 0, 376, 404, 268, 395, 0,
	387, 247, 0, 386, 325, 373, 378, 311, 305, 246,
	375, 309, 304, 297, 276, 419, 289, 337, 303, 338,
	290, 315, 314, 316, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 389, 0, 0,
	0, 0, 0, 0, 362, 0, 0, 298, 0, 0,
	0, 405, 0, 349, 331, 0, 0, 0, 347, 301,
	374, 339, 380, 364, 388, 343, 340, 238, 365, 271,
	312, 249, 251, 266, 273, 275, 277, 278, 321, 322,
	334, 353, 366, 367, 368, 270, 259, 348, 260, 287,
	261, 239, 263, 262, 264, 355, 265, 241, 335, 372,
	0, 283, 344, 308, 242, 307, 336, 371, 370, 250,
	396, 402, 403, 0, 0, 408, 0, 0, 0, 416,
	421, 422, 423, 425, 426, 427, 428, 0, 0, 0,
	0, 410, 0, 0, 0, 0, 0, 0, 401, 281,
	235, 236, 440, 267, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 400, 0, 0,
	0, 429, 439, 0, 0, 0, 0, 0, 438, 333,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 359, 382, 394, 411, 414, 0,
	0, 0, 0, 240, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 385, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 409, 0, 0, 317, 318, 319, 320,
	284, 0, 257, 412, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 407, 280, 286, 424, 288, 256, 332,
	282, 391, 295, 0, 417, 0, 418, 0, 0, 0,
	0, 324, 291, 292, 356, 296, 302, 345, 390, 330,
	350, 254, 381, 357, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 0, 369, 0, 234, 0, 0, 237,
	0, 300, 0, 341, 279, 0, 0, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	0, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 329, 0, 0, 230, 231,
	232, 233, 0, 0, 0, 397, 398, 399, 420, 383,
	0, 437, 274, 0, 0, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 0,
	431, 0, 0, 0, 0, 0, 358, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 252, 186, 432, 0, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 363, 379, 253, 354, 392, 258, 361, 248, 328,
	351, 0, 0, 245, 377, 360, 310, 293, 294, 244,
	0, 346, 272, 285, 269, 326, 0, 376, 404, 268,
	395, 0, 387, 247, 0, 386, 325, 373, 378, 311,
	305, 246, 375, 309, 304, 297, 276, 419, 289, 337,
	303, 338, 290, 315, 314, 316, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 389,
	0, 0, 0, 0, 0, 0, 362, 0, 0, 298,
	0, 0, 0, 405, 0, 349, 331, 0, 0, 0,
	347, 301, 374, 339, 380, 364, 388, 478, 340, 238,
	365, 271, 312, 249, 251, 266, 273, 275, 277, 278,
	321, 322, 334, 353, 366, 367, 368, 270, 259, 348,
	260, 287, 261, 239, 263, 262, 264, 355, 265, 241,
	335, 372, 0, 283, 344, 308, 242, 307, 336, 371,
	370, 250, 396, 402, 403, 0, 0, 408, 0, 0,
	0, 416, 421, 422, 423, 425, 426, 427, 428, 0,
	0, 0, 0, 410, 0, 0, 0, 0, 0, 0,
	401, 281, 235, 236, 440, 267, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 400,
	0, 0, 0, 429, 439, 0, 0, 0, 0, 0,
	438, 333, 0, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 359, 382, 394, 411,
	414, 0, 0, 0, 0, 240, 413, 0, 0, 0,
	0, 0, 0, 479, 0, 385, 0, 0, 0, 393,
	0, 0, 0, 0, 0, 409, 0, 0, 317, 318,
	319, 320, 284, 0, 257, 412, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 406, 407, 280, 286, 424, 288,
	256, 332, 282, 391, 295, 0, 417, 0, 418, 0,
	0, 0, 0, 324, 291, 292, 356, 296, 302, 345,
	390, 330, 350, 254, 381, 357, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 369, 0, 234, 0,
	0, 237, 0, 300, 0, 341, 279, 0, 0, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 0, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 329, 0, 0,
	230, 231, 232, 233, 0, 0, 0, 397, 398, 399,
	420, 383, 0, 437, 274, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 0, 431, 0, 0, 0, 0, 0, 358, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 252, 186, 432, 0,
	433, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 363, 379, 253, 354, 392, 258, 361,
	248, 328, 351, 0, 0, 245, 377, 360, 310, 293,
	294, 244, 0, 346, 272, 285, 269, 326, 0, 376,
	404, 268, 395, 0, 387, 247, 0, 386, 325, 373,
	378, 311, 305, 246, 375, 309, 304, 297, 276, 419,
	289, 337, 303, 338, 290, 315, 314, 316, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 455, 0,
	0, 389, 0, 0, 0, 0, 0, 0, 362, 0,
	0, 298, 0, 0, 0, 405, 0, 349, 331, 0,
	0, 0, 347, 301, 374, 339, 380, 364, 388, 343,
	340, 238, 365, 271, 312, 249, 251, 266, 273, 275,
	277, 278, 321, 322, 334, 353, 366, 367, 368, 270,
	259, 348, 260, 287, 261, 239, 263, 262, 264, 355,
	265, 241, 335, 372, 0, 283, 344, 308, 242, 307,
	336, 371, 370, 250, 396, 402, 403, 0, 0, 408,
	0, 0, 0, 416, 421, 422, 423, 425, 426, 427,
	428, 0, 0, 0, 0, 410, 0, 0, 0, 0,
	0, 0, 401, 281, 235, 236, 440, 267, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 400, 0, 0, 0, 429, 439, 0, 0, 0,
	0, 0, 438, 333, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 382,
	394, 411, 414, 0, 0, 0, 0, 240, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 385, 0, 0,
	0, 393, 0, 0, 0, 0, 0, 409, 0, 0,
	317, 318, 319, 320, 284, 0, 257, 412, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 406, 407, 280, 286,
	424, 288, 256, 332, 282, 391, 295, 0, 417, 0,
	418, 0, 0, 0, 0, 324, 291, 292, 356, 296,
	302, 345, 390, 330, 350, 254, 381, 357, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 0,
	234, 0, 0, 237, 0, 300, 0, 341, 279, 0,
	0, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 0, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	329, 0, 230, 231, 232, 233, 0, 0, 0, 397,
	398, 399, 420, 383, 0, 437, 445, 274, 0, 0,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 430, 0, 431, 0, 0, 0, 0,
	0, 358, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 0, 0, 0, 0, 252,
	186, 432, 0, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 363, 379, 253, 354,
	392, 258, 361, 248, 328, 351, 0, 0, 245, 377,
	360, 310, 293, 294, 244, 0, 346, 272, 285, 269,
	326, 0, 376, 404, 268, 395, 0, 387, 247, 0,
	386, 325, 373, 378, 311, 305, 246, 375, 309, 304,
	297, 276, 419, 289, 337, 303, 338, 290, 315, 314,
	316, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 389, 0, 0, 0, 0, 0,
	0, 362, 0, 0, 298, 0, 0, 0, 405, 0,
	349, 331, 0, 0, 0, 347, 301, 374, 339, 380,
	364, 388, 343, 340, 238, 365, 271, 312, 249, 251,
	266, 273, 275, 277, 278, 321, 322, 334, 353, 366,
	367, 368, 270, 259, 348, 260, 287, 261, 239, 263,
	262, 264, 355, 265, 241, 335, 372, 0, 283, 344,
	308, 242, 307, 336, 371, 370, 250, 396, 402, 403,
	0, 0, 408, 0, 0, 0, 416, 421, 422, 423,
	425, 426, 427, 428, 0, 0, 0, 0, 410, 0,
	0, 0, 0, 0, 0, 401, 281, 235, 236, 440,
	267, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 400, 0, 0, 0, 429, 439,
	0, 0, 0, 0, 0, 438, 333, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 359, 382, 394, 411, 414, 0, 0, 0, 0,
	240, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	385, 0, 0, 0, 393, 0, 0, 0, 0, 0,
	409, 0, 0, 317, 318, 319, 320, 284, 0, 257,
	412, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 406,
	407, 280, 286, 424, 288, 256, 332, 282, 391, 295,
	0, 417, 0, 418, 0, 0, 0, 0, 324, 291,
	292, 356, 296, 302, 345, 390, 330, 350, 254, 381,
	357, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 369, 0, 234, 0, 0, 237, 0, 300, 0,
	341, 279, 0, 0, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 0, 215, 216,
	217, 218, 219, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 329, 0, 0, 230, 231, 232, 233, 0,
	0, 0, 397, 398, 399, 420, 383, 0, 437, 274,
	0, 0, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 430, 0, 431, 0, 0,
	0, 0, 0, 358, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	0, 252, 186, 432, 0, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 363, 379,
	253, 354, 392, 258, 361, 248, 328, 351, 0, 0,
	245, 377, 360, 310, 293, 294, 244, 0, 346, 272,
	285, 269, 326, 0, 376, 404, 268, 395, 0, 387,
	247, 0, 386, 325, 373, 378, 311, 305, 246, 375,
	309, 304, 297, 276, 419, 289, 337, 303, 338, 290,
	315, 314, 316, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	0, 0, 0, 362, 0, 0, 298, 0, 0, 0,
	405, 0, 349, 331, 0, 0, 0, 347, 301, 374,
	339, 380, 364, 388, 343, 340, 238, 365, 271, 312,
	249, 251, 266, 273, 275, 277, 278, 321, 322, 334,
	353, 366, 367, 368, 270, 259, 348, 260, 287, 261,
	239, 263, 262, 264, 355, 265, 241, 335, 372, 0,
	283, 344, 308, 242, 307, 336, 371, 370, 250, 396,
	402, 403, 0, 0, 408, 0, 0, 0, 416, 421,
	422, 423, 425, 426, 427, 428, 0, 0, 0, 0,
	410, 0, 0, 0, 0, 0, 0, 401, 281, 235,
	236, 440, 267, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 400, 0, 0, 0,
	429, 439, 0, 0, 0, 0, 0, 438, 333, 0,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 382, 394, 411, 414, 0, 0,
	0, 0, 240, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 385, 0, 0, 0, 393, 0, 0, 0,
	0, 0, 409, 0, 0, 317, 318, 319, 320, 284,
	0, 257, 412, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 280, 286, 424, 288, 256, 332, 282,
	391, 295, 0, 417, 0, 418, 0, 0, 0, 0,
	324, 291, 292, 356, 296, 302, 345, 390, 330, 350,
	254, 381, 357, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 369, 0, 234, 0, 0, 237, 0,
	300, 0, 341, 279, 0, 0, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 0,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 329, 0, 0, 230, 231, 232,
	233, 0, 0, 0, 397, 398, 399, 420, 383, 0,
	437, 274, 0, 0, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 431,
	0, 0, 0, 0, 0, 358, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 252, 186, 432, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	363, 1190, 253, 354, 392, 258, 361, 248, 328, 351,
	0, 0, 245, 377, 360, 310, 293, 294, 244, 0,
	346, 272, 285, 269, 326, 0, 376, 404, 268, 395,
	0, 387, 247, 0, 386, 325, 373, 378, 311, 305,
	246, 375, 309, 304, 297, 276, 419, 289, 337, 303,
	338, 290, 315, 314, 316, 0, 0, 0, 0, 0,
	415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 389, 0,
	0, 0, 0, 0, 0, 362, 0, 0, 298, 0,
	0, 0, 405, 0, 349, 331, 0, 0, 0, 347,
	301, 374, 339, 380, 364, 388, 343, 340, 238, 365,
	271, 312, 249, 251, 266, 273, 275, 277, 278, 321,
	322, 334, 353, 366, 367, 368, 270, 259, 348, 260,
	287, 261, 239, 263, 262, 264, 355, 265, 241, 335,
	372, 0, 283, 344, 308, 242, 307, 336, 371, 370,
	250, 396, 402, 403, 0, 0, 408, 0, 0, 0,
	416, 421, 422, 423, 425, 426, 427, 428, 0, 0,
	0, 0, 410, 0, 0, 0, 0, 0, 0, 401,
	281, 235, 236, 440, 267, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 400, 0,
	0, 0, 429, 439, 0, 0, 0, 0, 0, 438,
	333, 0, 352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 382, 394, 411, 414,
	0, 0, 0, 0, 240, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 385, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 409, 0, 0, 317, 318, 319,
	320, 284, 0, 257, 412, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 407, 280, 286, 424, 288, 256,
	332, 282, 391, 295, 0, 417, 0, 418, 0, 0,
	0, 0, 324, 291, 292, 356, 296, 302, 345, 390,
	330, 350, 254, 381, 357, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 369, 0, 234, 0, 0,
	237, 0, 300, 0, 341, 279, 0, 0, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 0, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 329, 0, 0, 230,
	231, 232, 233, 0, 0, 0, 397, 398, 399, 420,
	383, 0, 437, 274, 0, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	0, 431, 0, 0, 0, 0, 0, 358, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 252, 186, 432, 0, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 363, 1188, 253, 354, 392, 258, 361, 248,
	328, 351, 0, 0, 245, 377, 360, 310, 293, 294,
	244, 0, 346, 272, 285, 269, 326, 0, 376, 404,
	268, 395, 0, 387, 247, 0, 386, 325, 373, 378,
	311, 305, 246, 375, 309, 304, 297, 276, 419, 289,
	337, 303, 338, 290, 315, 314, 316, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 362, 0, 0,
	298, 0, 0, 0, 405, 0, 349, 331, 0, 0,
	0, 347, 301, 374, 339, 380, 364, 388, 343, 340,
	238, 365, 271, 312, 249, 251, 266, 273, 275, 277,
	278, 321, 322, 334, 353, 366, 367, 368, 270, 259,
	348, 260, 287, 261, 239, 263, 262, 264, 355, 265,
	241, 335, 372, 0, 283, 344, 308, 242, 307, 336,
	371, 370, 250, 396, 402, 403, 0, 0, 408, 0,
	0, 0, 416, 421, 422, 423, 425, 426, 427, 428,
	0, 0, 0, 0, 410, 0, 0, 0, 0, 0,
	0, 401, 281, 235, 236, 440, 267, 327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	400, 0, 0, 0, 429, 439, 0, 0, 0, 0,
	0, 438, 333, 0, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 382, 394,
	411, 414, 0, 0, 0, 0, 240, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 385, 0, 0, 0,
	393, 0, 0, 0, 0, 0, 409, 0, 0, 317,
	318, 319, 320, 284, 0, 257, 412, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 406, 407, 280, 286, 424,
	288, 256, 332, 282, 391, 295, 0, 417, 0, 418,
	0, 0, 0, 0, 324, 291, 292, 356, 296, 302,
	345, 390, 330, 350, 254, 381, 357, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 369, 0, 234,
	0, 0, 237, 0, 300, 0, 341, 279, 0, 0,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 0, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 329, 0,
	0, 230, 231, 232, 233, 0, 0, 0, 397, 398,
	399, 420, 383, 0, 437, 274, 0, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 0, 431, 0, 0, 0, 0, 0, 358,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 252, 186, 432,
	0, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 363, 379, 253, 354, 392, 258,
	361, 248, 328, 351, 0, 0, 245, 377, 360, 310,
	293, 294, 244, 0, 346, 272, 285, 269, 326, 0,
	376, 404, 268, 395, 0, 387, 247, 0, 386, 325,
	373, 378, 311, 305, 246, 375, 309, 304, 297, 276,
	419, 289, 337, 303, 338, 290, 315, 314, 316, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 389, 0, 0, 0, 0, 0, 0, 362,
	0, 0, 298, 0, 0, 0, 405, 0, 349, 331,
	0, 0, 0, 347, 301, 374, 339, 380, 364, 388,
	343, 340, 238, 365, 271, 312, 249, 251, 519, 273,
	275, 277, 278, 321, 322, 334, 353, 366, 367, 368,
	270, 259, 348, 260, 287, 261, 239, 263, 262, 264,
	355, 265, 241, 335, 372, 0, 283, 344, 308, 242,
	307, 336, 371, 370, 250, 396, 402, 403, 0, 0,
	408, 0, 0, 0, 416, 421, 422, 423, 425, 426,
	427, 428, 0, 0, 0, 0, 410, 0, 0, 0,
	0, 0, 0, 401, 281, 235, 236, 440, 267, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 400, 0, 0, 0, 429, 439, 0, 0,
	0, 0, 0, 438, 333, 0, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 359,
	382, 394, 411, 414, 0, 0, 0, 0, 240, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	0, 0, 393, 0, 0, 0, 0, 0, 409, 0,
	0, 317, 318, 319, 320, 284, 1619, 257, 412, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 406, 407, 280,
	286, 424, 288, 256, 332, 282, 391, 295, 0, 417,
	1621, 418, 0, 0, 0, 858, 324, 291, 292, 356,
	296, 302, 345, 390, 330, 350, 254, 381, 357, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 3273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1596, 0, 0, 0, 0, 0, 0, 0, 369,
	0, 234, 0, 0, 237, 0, 300, 0, 341, 279,
	0, 0, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 0, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 0, 0, 230, 231, 232, 233, 0, 1612, 0,
	397, 398, 399, 420, 383, 846, 437, 0, 0, 836,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 866, 870, 872, 874, 876,
	877, 879, 0, 884, 880, 881, 882, 883, 0, 861,
	862, 863, 864, 844, 845, 867, 0, 847, 1621, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 859,
	865, 0, 0, 0, 0, 0, 1619, 0, 869, 871,
	873, 875, 878, 0, 0, 1600, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	1621, 0, 0, 0, 0, 860, 1594, 1628, 0, 0,
	1595, 1597, 1599, 0, 1601, 1602, 1603, 1607, 1608, 1609,
	1611, 1614, 1615, 1616, 0, 0, 0, 0, 0, 0,
	0, 1604, 1613, 1605, 498, 497, 504, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 502, 0, 503,
	507, 1596, 0, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 3018, 512, 0, 1620, 1612, 498, 497, 504,
	494, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	502, 0, 503, 507, 0, 0, 489, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 0, 0, 0,
	0, 0, 0, 0, 1617, 0, 516, 0, 0, 518,
	0, 0, 0, 0, 517, 0, 0, 0, 1612, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 518, 1600, 0, 0, 0, 517, 0, 0,
	0, 0, 1610, 0, 1606, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1594, 1628, 0, 0, 1595, 1597,
	1599, 0, 1601, 1602, 1603, 1607, 1608, 1609, 1611, 1614,
	1615, 1616, 0, 0, 0, 1600, 0, 0, 0, 1604,
	1613, 1605, 0, 0, 0, 0, 1606, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1594, 1628, 0, 0,
	1595, 1597, 1599, 1620, 1601, 1602, 1603, 1607, 1608, 1609,
	1611, 1614, 1615, 1616, 0, 0, 0, 490, 492, 491,
	0, 1604, 1613, 1605, 0, 0, 0, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	0, 0, 1617, 0, 868, 0, 515, 0, 0, 0,
	490, 492, 491, 493, 0, 1620, 0, 484, 0, 1593,
	496, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 0, 0, 0, 493, 0, 0, 0,
	1610, 0, 0, 0, 1617, 0, 0, 0, 0, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 1592, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1610, 0, 0, 0, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 495, 499, 505,
	0, 506, 508, 0, 0, 509, 510, 511, 0, 0,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	495, 499, 505, 0, 506, 508, 0, 0, 509, 510,
	511, 0, 0, 513, 514,
}

var yyPact = [...]int{
	3250, -1000, -1000, -1000, -314, 3724, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35000, -312,
	34458, 34458, -1000, -1000, 2215, -1000, 33915, 11621, 35000, 316,
	304, 35000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 641, -1000,
	33373, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 550, 37322,
	36626, 8826, -265, -1000, 2862, -111, 793, 809, 991, 991,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4305, 702, 32831, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3201, 323, 702, 13796, 2, 1, 2862,
	329, 368, -1000, 874, 4304, 157, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8826, 8826, 3724,
	-320, 3724, 8826, 35000, 35000, -1000, -1000, -1000, -1000, 550,
	37322, 8826, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 37055, -1000, 1330, -1000, -1000, -1000,
	-1000, 2504, 1325, 2064, 516, 35000, -1000, 1307, 516, -1000,
	-1000, -1000, 2862, 2862, -1000, 35000, 35000, 69, 1504, -1000,
	338, 355, 312, 1300, -1000, -1000, -1000, -1000, -1000, -1000,
	428, 2831, -1000, 35000, 35000, 2527, 35000, -1000, 1922, 462,
	37355, 2686, 1276, 652, 2540, -1000, -1000, 2503, -1000, 188,
	190, 219, 695, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	199, -1000, 2724, -1000, -1000, 172, -1000, -1000, 164, -1000,
	-1000, -1000, 0, -1000, -1000, -1000, -1000, -1000, -1000, -102,
	-1000, -1000, 867, 1868, 8826, -1000, 1534, -1000, 2891, -1000,
	-1000, -1000, -1000, 6024, 10503, 10503, 10503, 10503, -1000, -1000,
	2373, 8826, 2501, 2499, -1000, -1000, -1000, -1000, -1000, 1286,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1725,
	-1000, -1000, -1000, 9944, -1000, 2498, 2497, 2495, 2494, 2491,
	2490, 2489, 2488, 2481, 2479, 2478, 2476, 2475, 2474, 2223,
	11052, 2468, 2063, 2061, 2467, 2464, 2462, 2051, 2223, 2223,
	2461, 2460, 2459, 2454, 2448, 2446, 2444, 2436, 2435, 2434,
	2431, 2430, 2427, 2426, 2424, 2416, 2415, 2414, 2410, 2406,
	2405, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1181, -1000, 2402, 2660, 2775, 2275,
	2805, 2735, 2730, 2728, 2726, 1875, -1000, -1000, -1000, -139,
	-1000, -1000, 837, -1000, 752, -1000, 35000, 35000, 35000, 845,
	549, 549, 549, 549, 549, 549, 594, 549, 35000, -158,
	640, 630, 629, 549, -1000, -1000, -1000, -1000, -1000, -1000,
	-121, -1000, 1503, 1499, 2588, 740, -1000, -1000, -1000, -1000,
	1167, 35000, -1000, 2307, 1427, 1427, 2771, 485, 478, 473,
	1427, 361, -1000, 1544, 1544, 1544, 1544, 1427, 364, 458,
	2775, 2775, -17, 1544, -48, 1427, 1427, -48, 1427, 1427,
	1427, 143, -307, -1000, -1000, -1000, 1544, 1544, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2742, 2741, 550, 35000, 119,
	35000, 550, 550, 550, 556, -76, 36084, 35542, 1922, 454,
	450, 1205, 1555, -1000, 1405, 35000, 35000, 1405, 1405, 18183,
	17641, -1000, 35000, -1000, 2775, 2275, -1000, 2197, 2557, 2193,
	2275, 550, 550, 550, 550, 550, 142, 550, 550, 550,
	550, 35000, 35000, 32289, 550, 550, 7701, 7701, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3724, 1611, 1734,
	156, -72, -321, 184, -1000, -1000, 35000, 2655, 136, -1000,
	-1000, -1000, 2248, -1000, 2306, 2306, 2306, 2306, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2335, 2401, -1000,
	-1000, 2304, 2304, 2304, 2248, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2324, 2324, 2325, 2325, 2324, 35000, 8826, 35000, 2669, 317,
	2400, -1000, 35000, 314, 2775, 2660, 2775, -1000, -1000, 1281,
	1872, 2048, -1000, -1000, 338, 1362, -1000, 838, -1000, -1000,
	-1000, -1000, 35000, -102, 300, -1000, -1000, 2042, 2398, -1000,
	468, 1074, 1096, -1000, 198, 3349, 27946, 1922, 27946, 35000,
	-1000, -1000, -1000, -1000, -1000, -1000, -3, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	173, -1000, 8826, 8826, 8826, 8826, 8826, -1000, 514, 9385,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10503, 10503, 10503,
	10503, 10503, 10503, 10503, 10503, 10503, 10503, 10503, 10503, 2369,
	1537, 10503, 10503, 10503, 10503, 2557, 2442, 1201, 223, -1000,
	-1000, -1000, -1000, -1000, 1538, 1868, 8826, 8826, 35000, -1000,
	-1000, 4360, 8826, 8826, 4406, 8826, 2720, 8826, 8826, 8826,
	2191, 4906, 35000, 8826, -1000, 2189, 2188, -1000, -1000, 1809,
	8826, -1000, -1000, 8826, -1000, -1000, 8826, 10503, 8826, -1000,
	-1000, -1000, 152, 2720, 2720, 1511, 8826, 8826, 2720, 2720,
	2720, 1509, 2720, 2720, 2720, 2720, 2720, 2720, 2720, 2720,
	2185, 2183, 2182, 2775, -265, 7142, -1000, -270, 2660, 8826,
	-1000, -1000, 8826, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2046, -50, 774, 755, 767, -1000, 2712, -1000, 2384,
	2379, 1275, 549, -1000, -123, 35000, 1554, 35000, 27946, 35000,
	35000, 1922, 35000, 35000, -185, 549, -157, 549, 549, 549,
	35000, -1000, 2616, 27946, 2596, 556, -1000, 35000, 1167, 2711,
	35000, 2811, 10503, 10503, -1000, 31747, 1544, 1427, 1427, -1000,
	-1000, 35000, -1000, -1000, -1000, 1544, 35000, 1544, 1544, 2811,
	1544, -1000, -1000, -1000, 1427, 1427, -1000, -1000, -1000, -1000,
	1544, 1544, -1000, -1000, 2811, 35000, -14, 2811, 2811, -26,
	-1000, -1000, -1000, 35000, 35000, 549, 35000, -1000, 35000, 35000,
	-1000, -1000, 35000, 4359, 35000, 31205, 2739, -1000, 27946, 35000,
	35000, 25236, -1000, 1127, -1000, -73, -1000, -55, -76, 1405,
	-76, 1405, -1000, 467, 499, 16557, 408, 27946, 5465, -1000,
	-1000, 1405, 1405, 5465, 5465, 1350, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1147, -1000, 158, 2660, -1000, -1000, -1000,
	-1000, -1000, 35000, 35000, 27946, 1922, 35000, 550, 35000, 35000,
	35000, 35000, -1000, 2377, -1000, 2678, 35000, 35000, 1091, -1000,
	-1000, 13254, 1271, 1091, -1000, 1582, -1000, 8826, 3724, -285,
	8826, 3724, 3724, 8826, 3724, -1000, 8826, 131, -1000, -1000,
	-1000, -1000, 1859, -1000, 1858, -1000, -1000, -1000, 2038, 2038,
	-1000, 1857, -1000, -1000, -1000, -1000, 1851, -1000, -1000, 1848,
	-1000, -1000, -1000, 2181, 867, -1000, 2032, 2539, -266, -1000,
	15456, 35000, 35000, -1000, -1000, -266, -1000, 14897, 35000, 2660,
	-1000, 2660, 35000, -1000, 2770, -1000, 338, 259, -1000, -1000,
	-1000, -1000, -1000, -1000, 1269, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1142, -1000, 35000, -1000, -1000, 198,
	27946, 29030, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 180,
	-1000, -1000, 163, -1000, 589, 100, 1359, -1000, -1000, 122,
	168, 665, 1868, -1000, 1594, 1594, 1584, -1000, 532, -1000,
	-1000, -1000, -1000, 2373, -1000, -1000, -1000, 1496, 2641, -1000,
	1451, 1451, 1299, 1299, 1299, 1299, 1299, 1408, 1408, -1000,
	-1000, -1000, 6024, 2369, 10503, 10503, 10503, 10503, 525, 525,
	3327, 3552, -1000, 8826, 1531, -1000, 8826, 2138, 1279, 1267,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2180, 2172, 1850, 2823, 2170, 8826, -1000, -1000, 1358, 1355,
	1328, -1000, 1779, 8267, -1000, -1000, -1000, 2169, 1265, 2162,
	-1000, -1000, -1000, 2159, 1327, 1060, 2158, 1349, 2156, 1135,
	8826, 8826, 8826, 2151, 1322, 1320, 8826, 8826, 8826, 8826,
	2149, 8826, 8826, 8826, 8826, 8826, 8826, 8826, 8826, 26,
	26, 26, -1000, -1000, 1313, -1000, 1868, -1000, 2030, -1000,
	1199, 1132, -1000, 1793, -1000, -1000, -1000, -1000, 770, 747,
	821, 35000, 934, 12163, 35000, 35000, -1000, 2307, 2677, 126,
	-1000, 1151, -1000, 100, -113, 324, 911, 2521, 2817, 2362,
	35000, 549, 35000, 35000, 35000, 2707, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30663, -1000, 2361, 1312, -1000, -1000,
	8826, -1000, -1000, 2513, 35000, 35000, 2811, 2811, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35000, 2811, 2811, 1427, 1544,
	-1000, -1000, 1544, -1000, -1000, 1544, -1000, 1263, -1000, 35000,
	-1000, -1000, -1000, 2307, 1131, -1000, 964, 543, 543, 773,
	676, 2804, 14338, -1000, 1422, 1025, 574, 2637, 185, -1000,
	1422, -217, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 425,
	409, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422, 1422,
	1422, 1422, 799, 1422, 1422, 1422, 1422, 1422, -1000, 1422,
	2348, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 442, 125,
	2738, 232, 230, 1151, 2734, 245, 2528, 1001, -1000, -1000,
	-1000, -1000, 20358, 20358, 16015, 20358, -1000, 1367, -76, -64,
	-1000, -1000, 1127, 5465, 1127, 5465, -1000, -1000, 564, -1000,
	-1000, 911, -1000, 35000, 35000, -1000, -1000, 2346, 1497, -1000,
	-1000, 11052, -1000, 5465, 5465, -1000, -1000, 20900, 35000, -1000,
	-108, -1000, -89, 2768, 1119, -1000, -1000, 1122, 911, 2537,
	35000, 1119, 1119, -1000, -1000, 12163, 35000, -1000, -1000, 2811,
	7701, -1000, 25236, -1000, -1000, 30114, -1000, 29572, 2811, 1512,
	-1000, 3724, 1706, 149, -1000, 178, -322, 148, 1573, 141,
	1868, -1000, -1000, 2143, 2142, 1297, -1000, 1296, 2141, 1293,
	1292, -1000, -37, -1000, 2657, 919, -1000, 2345, -1000, 1289,
	2585, -1000, 1114, -1000, 1482, 1257, -1000, 919, 1215, 2584,
	1114, 2768, -1000, 1260, 68, -1000, -1000, 35000, 2042, 1206,
	29030, 973, -1000, 562, 1248, 1239, -1000, 27946, 175, 27946,
	-1000, 27946, -1000, -1000, 311, -1000, 35000, 2650, -1000, -1000,
	-1000, 1979, -337, -1000, -1000, -1000, -1000, -1000, 1202, -1000,
	525, 525, 3327, 3370, -1000, 10503, -1000, 10503, 2428, 1510,
	-1000, 8826, 1694, 3243, 896, 19267, 35000, -1000, -1000, 8826,
	8826, -1000, 2422, -1000, -1000, -1000, -1000, 8826, 8826, 1710,
	-1000, 35000, -1000, -1000, -1000, -1000, 19267, -1000, 10503, -1000,
	8826, 968, 2392, 1196, 26, 26, 26, 2367, 2337, 2313,
	1195, 26, 2301, 2291, 2216, 2209, 2103, 2060, 2055, 2050,
	-1000, 2344, -1000, -1000, 7142, -1000, -37, 8826, 8826, 8826,
	2633, -1000, -1000, -1000, -1000, -1000, 745, 146, 2139, 1111,
	-1000, -1000, 35000, -1000, -1000, -1000, 2137, 1107, -1000, -1000,
	-1000, 12643, 2306, 2306, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2335, -1000, -1000, 2304, 2304, 2304, 2248,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2324,
	2324, 2325, 2325, 2324, -1000, 2307, 2705, -1000, 24, 1422,
	483, 27946, 438, -1000, 35000, 1878, 1477, 2536, 265, 2644,
	35000, 25778, 240, 35000, 2323, 2322, 2315, 303, 12643, 35000,
	1023, -1000, 1238, 4304, -1000, 35000, 1868, -1000, 1922, -1000,
	1427, -1000, -1000, 2811, 1220, -1000, -1000, 2811, 1427, 1427,
	1544, 35000, -1000, 2704, 4359, -1000, 35000, -1000, -1000, -1000,
	675, -1000, 741, 549, 35000, 1608, 741, 1606, 2311, -1000,
	-1000, 35000, 35000, 35000, 35000, -1000, -1000, 35000, -1000, 35000,
	35000, 35000, 35000, -1000, 35000, 35000, -1000, 35000, 1604, 1603,
	2695, -1000, 1422, 1422, 710, -1000, -1000, 453, -1000, 1847,
	1845, 1832, 1824, 2029, 2028, 2025, 1422, 1422, 1821, 2024,
	28488, 2023, 901, 1820, 1819, 1817, 1843, 2022, 664, -1000,
	2016, 1828, 1825, 1823, 35000, 2309, 1967, -1000, -1000, 24,
	1422, 218, 35000, 1476, 483, 322, 1883, 17099, 35000, 25236,
	25236, 25236, 25236, -1000, 2573, 2571, -1000, 2563, 2553, 2554,
	35000, 25236, 2307, -1000, 28488, -1000, -1000, -1000, 2557, 1188,
	2587, 733, 8826, -1000, -1000, -81, -87, -1000, -1000, -1000,
	27946, 2014, 408, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2865, 35000, 35000, 628, 2136, -1000, 2809, -1000, 1097,
	-1000, -1000, 1229, -1000, 2809, 1513, -316, 3724, 1535, 1480,
	-1000, 8826, 3724, 8826, -286, 191, -292, -1000, -1000, -1000,
	2012, -1000, -1000, -1000, 1816, -1000, 1811, 39, 53, 1602,
	-266, 7142, 326, 35000, -266, 35000, 7142, -1000, 35000, 313,
	-266, -1000, 35000, 1778, -1000, -1000, -1000, 2813, 27946, 1922,
	1369, 27404, -1000, 171, -1000, 176, 463, 2010, -1000, 625,
	98, -1000, 1468, 1979, -1000, -1000, -1000, 10503, -1000, -1000,
	-1000, -1000, 1868, 8826, 2135, -1000, 769, 769, 2134, -1000,
	2306, 2306, -1000, 2248, 2304, 2248, 769, 769, 2125, -1000,
	1841, 2036, -1000, 1996, 1921, 8826, -1000, 2124, 3260, 1423,
	-127, 26, 26, -1000, -1000, -1000, -1000, 26, 26, 26,
	26, -1000, 26, 26, 26, 26, 26, 26, 26, 26,
	517, -1000, 39, 1868, 1868, -1000, -1000, 2627, -1000, 2005,
	2000, 934, 12643, 654, 12163, 2649, 2702, 333, 1895, -1000,
	-1000, -1000, 26862, 435, -1000, -1000, -1000, 534, 179, 1766,
	426, -1000, 35000, 245, 2614, 1466, 1992, 35000, -1000, -1000,
	-1000, -1000, -1000, 2644, -1000, 1029, 283, 1187, -1000, 1422,
	1422, 12705, 2690, 2303, 2299, 12705, 12705, 12705, 289, 1478,
	-1000, 516, 1128, 1217, 25236, 35000, -1000, 24694, 2123, -1000,
	911, 2811, -1000, 35000, -1000, 2811, 2811, 1427, -1000, 333,
	-1000, 2648, 12643, -1000, 35000, -1000, 35000, -1000, 35000, 35000,
	549, 8826, 2648, 35000, 560, -1000, -1000, 864, 280, 604,
	604, 1081, -1000, 2665, -1000, -1000, -1000, 35000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19267, 19267, 2725, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1988,
	1983, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35000, 1166, -1000, 1463, 1895, 26862, 1462, 1405, 1982, 435,
	1878, 1460, -1000, 1980, -1000, 925, 35000, 35000, -1000, 1089,
	-1000, 1459, 2508, 2533, 2508, -1000, -1000, -1000, -1000, 2570,
	-1000, 2560, -1000, -1000, 1089, -1000, -1000, -1000, -1000, -1000,
	733, -1000, 2750, 741, 741, 741, 2117, -1000, -1000, -1000,
	973, 2109, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2807, 2801, 26320, 2807, -1000, -316, 1508, -1000, 1577,
	140, 1457, 35000, -1000, -1000, -1000, 2106, 2105, -272, 52,
	2800, 2798, 2864, -1000, 2099, 970, -266, -1000, -1000, 919,
	-1000, -1000, -1000, -266, -1000, 919, -1000, -1000, 1922, -1000,
	174, -1000, -1000, -1000, -1000, -1000, -1000, 85, -1000, 35000,
	-1000, 1979, 1977, 97, -1000, 1868, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8826, -1000, -1000, -1000, 1907, -1000, -1000, 8826, 2097,
	1976, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2869, -1000, 2797, -272, -1000,
	-1000, -1000, -1000, -1000, -1000, 12643, -1000, 1797, 333, -186,
	-1000, 1973, 99, -1000, -1000, -1000, 1972, 1971, 1758, -1000,
	-1000, 1754, 1277, 118, -1000, -1000, -1000, -1000, -1000, -1000,
	1883, 1689, 1453, -338, -1000, 2298, -1000, 1422, 1422, 1422,
	35000, -1000, 25778, 1797, 1797, 2095, 956, -1000, -1000, -1000,
	-1000, 333, 35000, 12705, 2092, 2091, 2080, 519, 1440, 1433,
	-1000, 1757, 20358, 25236, 24694, 1046, -1000, 1210, -1000, -1000,
	-1000, 2811, -1000, -1000, 2811, -1000, -1000, -1000, 35000, 242,
	2293, -1000, 2286, 2512, 318, 2284, 2278, 35000, 1891, -1000,
	2648, 35000, 569, 2640, -1000, -1000, -1000, -1000, -1000, 380,
	-1000, 35000, -1000, -1000, 1348, -1000, 19267, -1000, -1000, 1165,
	-1000, 1967, 1960, -1000, 99, 1959, 5465, -1000, -1000, 2614,
	1958, -1000, 35000, 925, 925, 2869, 35000, 7142, -1000, -1000,
	8826, 2262, -1000, 8826, -1000, -1000, -1000, -1000, -1000, 2256,
	2618, -1000, -1000, -1000, -1000, -1000, -1000, 8826, 8826, -1000,
	-1000, 546, 3724, -299, 186, -1000, -1000, -1000, -274, 1957,
	-1000, -1000, 2796, 1955, 1917, 35000, -1000, 919, 919, 911,
	-1000, -1000, -26, -1000, -1000, -1000, 1855, -1000, 1800, 26,
	-1000, 139, 8826, -274, -183, -1000, -1000, -186, -1000, 307,
	-1000, -1000, 302, -1000, -1000, 243, -1000, -1000, 1736, 461,
	-1000, -1000, -1000, 1954, 1614, 1932, 23610, 19267, 19809, 1953,
	-1000, -1000, -1000, -1000, -189, 12705, -1000, 1162, -1000, 1422,
	2074, 37260, 173, 37260, 827, 1432, -1000, 1737, -1000, 1732,
	-1000, 2811, 1046, 1210, -1000, -1000, 1308, -1000, -1000, -1000,
	-1000, 242, -1000, -1000, 1624, 10503, -1000, -1000, 1951, 19809,
	651, 1447, 1441, 704, 2252, -1000, 369, 2861, -1000, -1000,
	-1000, 696, 2250, -1000, 1600, 1592, -1000, 35000, -1000, 23610,
	23610, 422, 422, 23610, 23610, 2249, 604, -1000, -1000, 10503,
	-1000, -1000, -1000, -1000, 1422, 1283, -1000, -1000, -1000, -1000,
	-1000, -1000, 1689, -1000, -1000, 2775, -1000, -1000, 1868, 35000,
	1868, 24152, -1000, 2793, 2792, 1868, 867, -1000, -316, 35000,
	35000, -276, 1712, -1000, 1950, 58, -1000, -1000, 910, -279,
	29, 40, -1000, -1000, -1000, 2071, -1000, 613, -1000, -1000,
	-1000, 867, -276, 35000, -1000, 365, -1000, -1000, 459, 1949,
	-1000, -1000, 226, -1000, -1000, -1000, -1000, -1000, 96, -1000,
	1437, 1140, -1000, 2248, 8826, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 35000, 1797, -189, 503, 37208, -1000, 1025,
	-1000, -26, 503, 447, 222, -1000, 1705, -1000, -1000, 2869,
	-1000, -1000, -1000, 3327, -1000, -1000, -1000, -1000, -1000, -1000,
	1947, 1941, -1000, -1000, -1000, -1000, -1000, 1695, 2234, -79,
	2723, 1939, -1000, -1000, 2230, 1136, 1129, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1120, 1108, 23610, -1000, -1000, 3327,
	19267, 1422, -1000, -1000, 1105, 1086, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2225, -1000, -1000, 2789, -1000, 1938, 554,
	50, 40, -1000, 2787, 57, 2786, 2785, -1000, -1000, 466,
	-267, 22, 16, 14, -1000, -1000, -1000, 8826, -1000, 2689,
	-1000, 170, -1000, 84, -1000, -1000, -1000, 1932, 1924, -1000,
	23610, 2665, 1767, -1000, -1000, -1000, 335, 2784, 37260, -1000,
	1422, -1000, 335, -1000, 294, -1000, 1418, -1000, 1686, -1000,
	2775, -1000, -1000, 1926, 8826, 2223, 1422, 1912, -171, 23610,
	2511, 2509, 2339, 2211, 1080, -1000, 19267, -1000, -1000, 23068,
	35000, 1917, -1000, 2222, 1685, 52, 43, 2783, -1000, 1917,
	2782, 1917, 1917, 1569, -1000, 12, 10, 7, -1000, -1000,
	-1000, -1000, 1923, -1000, -1000, -1000, -1000, 225, -1000, -1000,
	2665, -1000, 2780, 404, -1000, 19267, -1000, -1000, -1000, 1675,
	-1000, -1000, -1000, 1749, -1000, 35000, -1000, 2531, -1000, 135,
	1072, 225, 422, 225, 422, 225, 422, 225, 422, 159,
	-1000, -1000, -1000, 1065, -1000, -1000, 2699, 18725, 32, -1000,
	-1000, -1000, 1920, -1000, 1917, -1000, -1000, 466, -1000, -1000,
	-1000, -1000, -1000, 1422, 1900, 238, -1000, -1000, -1000, 22526,
	336, 358, 356, -1000, 480, -1000, -1000, -1000, 604, -1000,
	-1000, 2530, 2529, 2821, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 35000, -1000, 35000, -1000, 1061, -1000,
	-1000, -1000, 1030, -1000, -1000, -1000, -1000, -1000, 1664, -1000,
	35000, -1000, 35000, 342, 1663, 10503, 2220, 10503, 2219, 349,
	2214, -1000, -1000, 2853, -1000, 2851, 689, 689, 225, 225,
	225, 225, -1000, 865, -1000, 1396, -1000, 21984, 35000, -1000,
	-1000, 1058, 2208, 2779, -1000, 2794, 35000, 2719, 35000, 2202,
	1386, 10503, -1000, -1000, -1000, 1684, 385, -1000, 35000, 6583,
	-1000, 992, -1000, -1000, 489, 346, -1000, 1049, -1000, 1047,
	21442, 1660, 2295, -1000, -1000, -1000, -1000, -1000, 1868, 35000,
	1034, -1000, 35000, 330, -1000, -1000, -1000, 987, -1000, -1000,
	-1000, -1000, 489, 2583, -1000, 1633, -1000, -1000, 37040, 624,
	-1000, -1000, 37040, 341, -1000, 469, 2199, -1000, -1000, 954,
	-1000, 35000, 648, 8826, -1000, 341, 37260, -1000, 8826, 933,
	-1000, 37260, 931, -1000, -1000,
}

var yyPgo = [...]int{
	0, 152, 2881, 240, 158, 3394, 81, 236, 210, 208,
	235, 3388, 3387, 2673, 2664, 3386, 3385, 3383, 3382, 3381,
	3379, 3378, 3375, 3372, 3371, 3370, 3369, 3368, 3367, 3365,
	3360, 3359, 3358, 3357, 3355, 3354, 3353, 3352, 3351, 3350,
	3348, 234, 3347, 3346, 3344, 3343, 3340, 3339, 3338, 3337,
	3336, 3335, 3334, 3333, 3332, 3330, 3329, 3328, 3327, 3326,
	3324, 3323, 3322, 3321, 3319, 3318, 3317, 3316, 3315, 3314,
	3313, 3312, 3311, 204, 3309, 2659, 3308, 3307, 3305, 3304,
	3303, 3302, 3301, 223, 3300, 3298, 3297, 3295, 3292, 3286,
	3285, 3284, 3283, 3281, 3278, 215, 3277, 3275, 3272, 3269,
	3267, 3261, 212, 3260, 154, 181, 3259, 3258, 3257, 3256,
	3255, 230, 237, 60, 3254, 47, 3251, 206, 3249, 130,
	3246, 126, 3245, 3243, 3240, 3239, 3237, 3236, 3235, 3234,
	3232, 3231, 3230, 3229, 3228, 3225, 3223, 3221, 82, 3218,
	243, 3216, 67, 3215, 3214, 115, 128, 179, 244, 2451,
	246, 241, 170, 160, 93, 3212, 2648, 3211, 145, 218,
	138, 29, 3210, 163, 3207, 139, 38, 41, 239, 121,
	50, 140, 112, 3206, 203, 96, 94, 3205, 3204, 166,
	247, 176, 3203, 107, 3202, 3201, 3200, 3198, 191, 172,
	3196, 3195, 120, 3194, 3193, 84, 3192, 66, 189, 153,
	187, 3191, 99, 103, 108, 106, 3189, 3188, 88, 3187,
	3186, 3185, 3182, 164, 3175, 3173, 135, 64, 3172, 3170,
	3164, 55, 3163, 43, 3162, 3161, 28, 3160, 63, 3159,
	3157, 3156, 3155, 3154, 3153, 3152, 3151, 3149, 3147, 3145,
	68, 3144, 3143, 15, 16, 19, 3142, 26, 3141, 149,
	3139, 3138, 3137, 80, 76, 3135, 75, 1, 44, 79,
	3134, 221, 226, 89, 132, 3132, 422, 3128, 3125, 3122,
	142, 3117, 557, 3116, 3115, 3113, 3112, 3111, 309, 3109,
	205, 45, 3108, 85, 118, 3107, 35, 46, 209, 177,
	3106, 3105, 3104, 137, 219, 119, 40, 0, 3103, 136,
	3102, 3101, 3100, 249, 3098, 227, 220, 146, 216, 256,
	229, 3097, 3095, 61, 3094, 141, 65, 54, 116, 11,
	20, 201, 3093, 872, 165, 3092, 195, 3091, 147, 10,
	129, 3090, 3089, 27, 281, 3085, 3082, 3079, 104, 3078,
	3077, 148, 90, 3076, 3071, 3070, 3069, 34, 3067, 31,
	18, 3066, 131, 3065, 238, 3064, 161, 125, 168, 162,
	134, 213, 217, 70, 69, 3058, 1630, 127, 86, 17,
	3057, 211, 3055, 183, 110, 3054, 113, 3052, 233, 375,
	196, 3049, 169, 7, 42, 30, 3048, 8, 3045, 253,
	193, 3044, 3039, 22, 53, 3038, 25, 3024, 3019, 3017,
	3016, 5, 3013, 3012, 3008, 2, 4, 3007, 3, 207,
	3006, 3002, 3000, 2997, 48, 190, 2996, 114, 171, 178,
	2995, 83, 2994, 2993, 2992, 653, 2990, 245, 2988, 2987,
	2983, 2982, 2981, 2980, 2979, 2978, 2975, 87, 37, 2974,
	2972, 2971, 2969, 72, 124, 2968, 2967, 2966, 2965, 36,
	167, 2964, 21, 2963, 32, 23, 33, 2960, 109, 2954,
	12, 174, 2953, 2952, 14, 2950, 2947, 9, 13, 2946,
	2945, 105, 2944, 77, 24, 144, 95, 2943, 2927, 73,
	197, 123, 2926, 2925, 231, 228, 194, 2924, 117, 225,
	242, 2923, 199, 2920, 2919, 2917, 2916, 2915, 2911, 1016,
	2910, 2908, 232, 78, 91, 98, 2906, 2905, 2903, 71,
	143, 100, 102, 56, 74, 2902, 97, 188, 2901, 175,
	2900, 2899, 92, 2898, 2896, 2895, 2894, 2893, 173, 2892,
	2891, 192, 214, 2887, 2886, 2885, 2884, 224, 290, 2883,
}

//line mysql_sql.y:10327
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 527, 535, 535, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 109, 525, 525, 525, 526, 526, 106, 126,
	125, 128, 128, 127, 127, 124, 124, 120, 123, 123,
	122, 122, 121, 116, 118, 118, 117, 119, 119, 107,
	95, 108, 470, 470, 469, 469, 468, 468, 422, 422,
	467, 467, 467, 466, 466, 466, 465, 465, 464, 464,
	463, 463, 461, 461, 462, 460, 459, 459, 459, 457,
	457, 457, 453, 453, 455, 454, 454, 456, 448, 448,
	451, 451, 449, 449, 449, 449, 452, 447, 447, 447,
	446, 446, 94, 94, 94, 368, 368, 93, 93, 382,
	382, 382, 382, 382, 380, 380, 380, 380, 380, 380,
	379, 379, 378, 378, 383, 383, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 84, 84, 84, 84,
	84, 89, 89, 89, 532, 532, 531, 531, 533, 533,
	533, 533, 534, 534, 87, 87, 87, 88, 377, 377,
	377, 85, 86, 86, 367, 367, 372, 372, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 376, 376, 376, 374, 374, 373, 373, 375, 375,
	78, 78, 78, 81, 80, 366, 366, 366, 366, 366,
	366, 366, 366, 366, 79, 79, 79, 79, 79, 79,
	74, 74, 74, 74, 74, 73, 73, 75, 75, 364,
	364, 363, 90, 90, 91, 529, 529, 528, 530, 530,
	530, 530, 92, 98, 98, 98, 98, 98, 98, 98,
	97, 97, 100, 100, 99, 101, 83, 83, 83, 83,
	83, 83, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 495, 495, 495, 497, 497, 301, 302, 536, 304,
	300, 300, 300, 491, 491, 492, 493, 494, 494, 494,
	96, 11, 11, 11, 11, 11, 11, 11, 72, 77,
	248, 248, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 249, 249, 236, 236, 236, 231, 231, 231,
	231, 232, 232, 233, 233, 234, 234, 234, 234, 235,
	235, 294, 294, 253, 253, 253, 255, 255, 254, 252,
	250, 250, 250, 250, 250, 250, 251, 251, 251, 256,
	256, 70, 76, 76, 76, 508, 508, 71, 519, 519,
	425, 425, 315, 315, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	430, 431, 311, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 48, 51, 47, 47, 47, 353, 353, 46,
	537, 537, 289, 289, 59, 58, 50, 60, 61, 62,
	63, 64, 65, 45, 57, 57, 57, 57, 57, 57,
	57, 57, 68, 68, 442, 442, 539, 539, 539, 66,
	67, 424, 424, 424, 56, 55, 54, 53, 52, 52,
	44, 44, 43, 43, 49, 132, 133, 308, 308, 308,
	310, 310, 306, 538, 538, 396, 396, 309, 309, 42,
	42, 42, 42, 69, 307, 307, 288, 305, 305, 305,
	12, 12, 10, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 23, 24, 26, 361,
	361, 358, 25, 18, 17, 20, 20, 16, 16, 19,
	21, 22, 22, 9, 9, 9, 9, 13, 13, 14,
	153, 153, 203, 203, 503, 503, 499, 499, 500, 500,
	500, 501, 501, 502, 502, 102, 436, 436, 436, 436,
	436, 436, 8, 175, 175, 435, 435, 435, 435, 435,
	435, 365, 365, 480, 480, 480, 481, 174, 174, 169,
	169, 437, 437, 330, 482, 482, 445, 445, 444, 444,
	443, 443, 172, 172, 173, 173, 156, 156, 112, 112,
	450, 450, 450, 450, 458, 458, 421, 421, 240, 240,
	281, 281, 282, 282, 146, 146, 147, 147, 147, 147,
	147, 147, 488, 488, 490, 490, 489, 171, 171, 167,
	167, 168, 168, 168, 166, 166, 165, 164, 164, 163,
	161, 161, 161, 162, 162, 162, 179, 179, 149, 149,
	149, 148, 148, 148, 148, 148, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 150, 150,
	496, 496, 496, 426, 426, 426, 433, 433, 263, 263,
	264, 264, 262, 262, 151, 151, 152, 152, 152, 152,
	261, 261, 260, 154, 154, 160, 159, 159, 155, 155,
	155, 155, 271, 271, 270, 270, 270, 270, 105, 110,
	110, 111, 178, 178, 269, 268, 268, 268, 177, 177,
	176, 176, 170, 170, 158, 158, 158, 158, 267, 157,
	265, 524, 524, 523, 523, 522, 520, 520, 520, 521,
	521, 521, 521, 472, 472, 472, 472, 472, 295, 295,
	295, 299, 299, 298, 298, 298, 298, 298, 303, 7,
	7, 7, 7, 7, 7, 30, 30, 30, 30, 30,
	30, 30, 30, 30, 30, 36, 187, 188, 37, 189,
	189, 190, 190, 191, 191, 192, 193, 194, 194, 194,
	194, 35, 180, 180, 181, 181, 182, 182, 183, 184,
	184, 184, 186, 185, 34, 34, 27, 139, 139, 140,
	140, 140, 140, 142, 142, 237, 237, 237, 141, 141,
	143, 143, 143, 504, 507, 505, 505, 509, 509, 509,
	510, 510, 510, 510, 511, 511, 28, 129, 134, 514,
	514, 514, 513, 513, 515, 515, 516, 516, 285, 285,
	286, 286, 137, 138, 138, 136, 131, 145, 145, 145,
	145, 145, 130, 135, 506, 512, 512, 512, 362, 362,
	359, 360, 360, 357, 356, 356, 356, 518, 518, 517,
	517, 517, 296, 296, 29, 352, 352, 354, 355, 355,
	355, 346, 346, 346, 346, 33, 350, 350, 351, 351,
	351, 351, 351, 347, 347, 349, 349, 345, 345, 345,
	345, 345, 32, 144, 144, 344, 344, 341, 341, 339,
	339, 340, 340, 338, 338, 338, 342, 342, 40, 39,
	39, 39, 343, 343, 31, 31, 31, 114, 113, 113,
	113, 284, 284, 283, 283, 115, 38, 215, 215, 410,
	410, 410, 410, 410, 428, 428, 428, 411, 411, 411,
	412, 412, 412, 413, 413, 413, 413, 413, 427, 427,
	429, 429, 429, 384, 384, 385, 385, 385, 388, 388,
	402, 402, 403, 403, 401, 401, 408, 408, 407, 407,
	406, 406, 405, 405, 404, 404, 404, 404, 399, 399,
	398, 398, 386, 386, 386, 386, 386, 387, 387, 387,
	397, 397, 400, 400, 225, 225, 259, 259, 223, 223,
	224, 224, 258, 221, 221, 222, 222, 222, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 478, 478, 479, 227, 227, 238, 238,
	238, 238, 238, 238, 226, 226, 228, 228, 204, 204,
	202, 202, 195, 195, 196, 196, 197, 197, 197, 201,
	201, 200, 200, 200, 200, 198, 198, 199, 199, 199,
	199, 199, 199, 370, 370, 475, 475, 476, 476, 471,
	471, 471, 474, 474, 474, 474, 474, 477, 477, 477,
	473, 473, 205, 279, 279, 279, 297, 297, 297, 297,
	278, 278, 278, 220, 220, 219, 219, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 369,
	369, 312, 312, 313, 313, 247, 246, 246, 246, 246,
	246, 244, 245, 243, 243, 243, 243, 243, 242, 242,
	241, 241, 241, 348, 348, 239, 239, 230, 230, 230,
	229, 229, 229, 409, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 277, 277,
	277, 322, 322, 327, 327, 487, 487, 486, 206, 206,
	206, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	216, 216, 216, 393, 393, 393, 393, 394, 394, 394,
	394, 395, 395, 395, 391, 391, 392, 392, 331, 332,
	332, 434, 434, 389, 389, 390, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 441, 441, 441, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 498, 498, 498, 483, 483, 483,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 275,
	275, 275, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 333, 333, 334,
	334, 438, 438, 438, 438, 438, 438, 439, 439, 440,
	440, 440, 440, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 432, 432, 432, 432, 432, 432, 432, 432,
	432, 432, 320, 272, 272, 272, 335, 328, 328, 329,
	329, 323, 323, 323, 323, 323, 323, 323, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	324, 324, 326, 326, 337, 337, 337, 336, 336, 336,
	336, 336, 336, 336, 218, 218, 218, 218, 317, 317,
	317, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 208, 208, 208, 208, 212, 212, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	214, 214, 214, 213, 213, 213, 213, 213, 211, 211,
	211, 211, 211, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 103,
	104, 104, 210, 280, 280, 414, 414, 417, 417, 415,
	415, 416, 418, 418, 418, 419, 419, 419, 420, 420,
	420, 423, 423, 287, 287, 287, 293, 293, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	292, 292, 292, 292, 292, 292, 292, 292, 292, 292,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 0, 1, 1, 0, 1, 5, 2,
	2, 6, 9, 6, 9, 4, 7, 8, 0, 1,
	1, 2, 4, 6, 1, 2, 4, 0, 2, 10,
	10, 2, 0, 2, 1, 3, 3, 3, 0, 2,
	1, 3, 5, 0, 2, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 0, 3, 3, 0,
	3, 3, 0, 1, 3, 0, 1, 3, 0, 2,
	1, 2, 3, 4, 3, 3, 1, 0, 1, 1,
	0, 1, 8, 5, 7, 0, 3, 8, 5, 1,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 4, 1, 3, 1, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 4, 1, 3, 3, 1, 2, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 1, 1,
	1, 2, 4, 6, 1, 4, 1, 3, 3, 4,
	4, 4, 4, 3, 3, 2, 4, 4, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 2, 2, 0, 1, 4, 2, 4,
	1, 5, 3, 2, 1, 2, 2, 4, 4, 5,
	2, 1, 3, 4, 4, 1, 2, 9, 7, 1,
	3, 3, 1, 1, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 2, 4, 3, 3, 1, 1, 1, 1,
	1, 1, 2, 3, 4, 7, 2, 3, 3, 4,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 2, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 1, 7, 4,
	1, 3, 2, 4, 5, 5, 6, 5, 5, 3,
	2, 2, 1, 3, 4, 3, 7, 5, 8, 2,
	2, 1, 3, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 2, 1, 3, 2, 1,
	2, 2, 1, 2, 3, 2, 3, 3, 3, 1,
	1, 7, 7, 8, 8, 0, 4, 7, 0, 3,
	0, 2, 0, 1, 1, 1, 1, 4, 2, 2,
	3, 3, 4, 5, 3, 4, 4, 2, 2, 2,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 2, 5, 5, 0, 2, 7,
	0, 1, 0, 1, 5, 5, 3, 3, 2, 4,
	4, 4, 4, 4, 1, 1, 1, 3, 3, 1,
	1, 1, 6, 8, 0, 1, 1, 1, 1, 5,
	5, 0, 1, 1, 3, 3, 3, 4, 6, 7,
	4, 4, 7, 8, 3, 3, 3, 0, 2, 2,
	0, 2, 2, 1, 1, 1, 1, 0, 1, 4,
	4, 5, 4, 3, 1, 3, 1, 1, 3, 5,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 4, 1,
	3, 1, 4, 6, 6, 4, 4, 4, 4, 3,
	6, 3, 5, 1, 1, 2, 2, 11, 8, 9,
	1, 3, 2, 4, 0, 2, 0, 1, 1, 1,
	1, 0, 1, 0, 1, 4, 2, 1, 5, 4,
	4, 2, 5, 1, 3, 2, 1, 5, 4, 4,
	2, 0, 5, 0, 1, 3, 3, 1, 3, 1,
	3, 1, 3, 4, 0, 1, 0, 1, 1, 3,
	1, 1, 0, 4, 1, 3, 2, 1, 0, 8,
	0, 4, 7, 4, 0, 2, 0, 2, 0, 2,
	0, 4, 1, 3, 1, 1, 5, 3, 4, 6,
	4, 5, 2, 3, 1, 3, 6, 0, 3, 0,
	1, 2, 4, 4, 0, 1, 3, 1, 3, 3,
	0, 1, 1, 0, 2, 2, 0, 2, 3, 3,
	3, 1, 3, 3, 3, 3, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 1, 2, 2, 7, 7,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 2, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 4,
	4, 3, 2, 2, 2, 3, 2, 3, 4, 1,
	3, 4, 0, 2, 1, 1, 2, 2, 0, 1,
	2, 4, 1, 3, 1, 3, 2, 3, 1, 4,
	3, 0, 1, 1, 2, 5, 2, 2, 2, 0,
	2, 3, 3, 0, 1, 3, 1, 3, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 7, 1, 1, 7, 1,
	3, 0, 1, 1, 3, 1, 3, 0, 1, 1,
	1, 12, 1, 3, 0, 1, 1, 3, 1, 1,
	2, 4, 1, 1, 9, 8, 7, 1, 2, 2,
	3, 3, 3, 0, 4, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 4, 1, 1, 3, 4, 3,
	0, 1, 1, 1, 0, 2, 7, 8, 8, 0,
	3, 3, 0, 2, 0, 3, 0, 5, 1, 3,
	0, 3, 3, 0, 2, 9, 6, 0, 2, 2,
	3, 3, 4, 4, 1, 0, 2, 2, 1, 3,
	2, 1, 3, 2, 1, 3, 2, 0, 1, 3,
	4, 3, 1, 1, 4, 1, 3, 1, 1, 1,
	1, 0, 1, 1, 1, 11, 0, 2, 3, 2,
	3, 1, 1, 1, 3, 3, 4, 0, 2, 2,
	2, 2, 6, 0, 4, 1, 1, 0, 3, 0,
	1, 1, 2, 4, 4, 4, 0, 1, 7, 9,
	10, 8, 0, 2, 11, 9, 11, 2, 2, 4,
	5, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	3, 2, 4, 3, 0, 2, 1, 0, 2, 3,
	0, 2, 3, 0, 3, 2, 4, 3, 0, 1,
	0, 1, 1, 0, 6, 0, 3, 5, 0, 4,
	0, 3, 1, 3, 4, 5, 0, 3, 1, 3,
	2, 3, 1, 2, 0, 4, 6, 5, 0, 2,
	0, 2, 4, 5, 4, 5, 1, 5, 6, 5,
	0, 3, 0, 1, 1, 3, 3, 3, 0, 4,
	1, 3, 3, 0, 1, 1, 3, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 5, 4, 1, 3, 3, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 0, 1, 1, 3, 1, 1, 1, 1,
	1, 7, 9, 7, 9, 2, 1, 7, 9, 7,
	9, 8, 5, 0, 1, 0, 1, 1, 1, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 3, 1, 3, 5, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 2, 1, 2, 2,
	1, 1, 2, 2, 2, 3, 3, 2, 2, 1,
	5, 6, 4, 1, 1, 1, 5, 4, 1, 1,
	2, 0, 1, 1, 2, 5, 0, 1, 1, 2,
	2, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 2, 2, 0, 3, 0, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	3, 5, 2, 2, 2, 2, 1, 1, 2, 5,
	6, 6, 6, 1, 1, 1, 1, 1, 4, 4,
	4, 0, 2, 0, 1, 1, 2, 4, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 2, 2, 2,
	0, 1, 1, 1, 2, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 5, 0, 1, 3, 0,
	1, 0, 2, 0, 1, 6, 8, 6, 6, 5,
	5, 5, 6, 6, 6, 6, 5, 6, 6, 6,
	6, 6, 6, 6, 6, 1, 1, 1, 4, 4,
	6, 8, 6, 4, 5, 4, 4, 4, 3, 4,
	6, 6, 7, 4, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 8, 4, 2, 3, 2, 4, 2, 2, 4,
	6, 2, 2, 4, 6, 4, 2, 0, 1, 2,
	3, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 1, 1, 3, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 1, 1, 3, 4,
	3, 4, 3, 4, 3, 4, 3, 4, 1, 3,
	4, 4, 5, 4, 5, 3, 4, 5, 6, 1,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 1, 2,
	3, 5, 1, 1, 3, 0, 1, 0, 3, 0,
	3, 3, 0, 3, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -527, -535, -2, -5, 588, -1, -4, -104, -78,
	-7, -106, -107, -8, -102, -9, -10, -12, -82, -97,
	-99, -101, -100, -41, -11, -96, -73, -74, -84, -90,
	-93, -94, -95, -108, -103, -105, -146, -109, 581, -79,
	-80, -81, -30, -29, -28, -27, -129, -134, 587, 435,
	13, 484, -13, -14, -488, -15, 254, -300, -301, -302,
	-304, -536, -42, -43, -44, -52, -53, -54, -55, -56,
	-66, -67, -68, -45, -46, -47, -50, -48, -59, -58,
	-60, -61, -62, -63, -64, -65, -49, -132, -133, -69,
	-51, -71, -70, -76, -72, -77, -131, -136, 229, -75,
	75, -85, -86, -87, -88, -89, -91, -92, 361, 367,
	424, 580, 60, -147, -149, 591, 157, 158, 160, 161,
	-31, -32, -33, -34, -35, -36, -38, -37, -39, -40,
	225, 15, 521, -16, -19, -17, -20, -18, -25, -26,
	-24, -21, -23, -130, -22, -135, 249, 248, 37, 315,
	316, 317, 365, 247, 226, 14, 30, 41, 341, -148,
	81, 227, -150, 12, 593, -6, -3, -2, -116, -120,
	-124, -127, -128, -125, -126, -4, -104, 115, 239, 582,
	-297, 357, 583, 585, 584, 84, 92, -290, -292, 361,
	367, 580, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 487,
	567, 568, 569, 570, 515, 339, 340, 518, 266, 290,
	392, 296, 303, 157, 176, 170, 198, 190, 165, 270,
	308, 271, 91, 160, 470, 105, 447, 421, 163, 285,
	287, 289, 292, 291, 293, 295, 272, 342, 186, 181,
	284, 268, 179, 273, 39, 274, 203, 275, 276, 523,
	443, 338, 449, 300, 419, 180, 444, 288, 446, 205,
	209, 461, 462, 174, 175, 451, 464, 202, 246, 42,
	520, 258, 465, 207, 201, 197, 473, 304, 302, 200,
	173, 196, 269, 64, 211, 210, 212, 415, 416, 417,
	418, 277, 278, 355, 460, 193, 182, 343, 166, 22,
	468, 253, 448, 368, 279, 297, 305, 206, 208, 260,
	265, 522, 423, 264, 301, 466, 178, 257, 286, 252,
	469, 167, 370, 280, 161, 294, 463, 472, 63, 383,
	172, 164, 243, 158, 262, 267, 281, 282, 283, 513,
	307, 306, 298, 194, 259, 199, 184, 171, 195, 159,
	261, 471, 384, 578, 341, 402, 192, 189, 263, 236,
	467, 450, 162, 406, 385, 187, 309, 574, 575, 576,
	356, 337, 310, 311, 185, 250, 441, 442, 314, 412,
	330, 386, 422, 393, 387, 218, 318, 453, 455, 204,
	577, 319, 320, 321, 445, 322, 323, 324, 325, 360,
	55, 57, 93, 95, -375, -373, -297, 580, 367, 361,
	341, -189, -297, 592, -156, 38, -202, -297, -156, -75,
	-14, -13, -148, -149, -202, 233, -305, 23, 419, -83,
	420, 229, 81, -297, -9, -95, -8, -102, -73, -146,
	424, -303, -297, 315, 315, -303, 233, -297, 264, 400,
	-425, 239, -379, -352, 265, -378, -354, -381, -355, 31,
	225, 227, 226, 261, 15, 365, 235, 13, 12, 366,
	247, 24, 25, 27, 14, 367, 369, 28, 370, 373,
	374, 375, 41, 378, 379, 254, 84, 92, 87, 272,
	-188, -297, -329, -323, 112, 255, -325, -318, -319, -321,
	-467, -461, -316, 81, 139, 140, 147, 113, -320, -409,
	35, 115, 530, 485, -273, -274, -275, -276, -277, -297,
	-462, -460, 87, 96, 99, 102, 103, 101, 100, 151,
	183, 98, 88, 152, -149, 84, -483, 539, -291, 560,
	567, 568, 569, 570, 559, 60, -432, -440, 232, -438,
	150, 188, 250, 184, 13, 145, 412, 185, 536, 556,
	487, 540, 563, 532, 533, 534, 527, 528, 529, 531,
	541, 543, 555, -441, 551, 561, 562, 549, 564, 565,
	566, 86, 85, 554, 553, 542, 537, 538, 544, 526,
	535, 545, 546, 552, 557, 558, 349, 105, 350, 351,
	477, 342, 352, 239, 419, 69, 353, 354, 355, 356,
	357, 484, 358, 70, 359, 348, 254, 402, 360, 187,
	204, 489, 488, 490, 481, 478, 476, 479, 480, 482,
	483, 547, 548, 550, -110, -111, 572, -165, -166, -266,
	11, 6, 7, 8, 9, -525, 421, 522, 162, 159,
	-366, 162, 111, 167, 166, -366, 318, 260, 362, -139,
	236, 339, 402, 322, 93, 264, -346, -344, 516, -343,
	-427, 312, 308, 234, -140, 244, 243, 106, 477, 232,
	108, 376, 303, 55, 57, -499, -500, 222, 223, 224,
	-490, 510, -489, -297, 351, 95, 26, 233, 362, 260,
	455, 453, 454, 456, 457, 458, 459, -57, -442, -424,
	450, 449, -309, 442, 448, 440, 452, 443, 340, 324,
	323, 225, 589, 511, -287, 386, 422, 474, 475, 363,
	423, 461, 463, 444, 105, 191, 188, 236, 233, 339,
	477, 402, 93, 322, -499, 159, 461, 463, 264, 400,
	40, -372, 412, -371, -373, 462, 473, 85, 86, 460,
	-287, 105, 441, 441, -166, -266, -165, -147, -149, -105,
	-488, 234, 339, 402, 264, 235, 233, 236, 516, 477,
	232, 315, 362, 260, 322, 93, -426, -496, 31, -433,
	219, 220, 221, 32, 33, -1, 119, 593, -323, -323,
	-6, 594, -6, -323, -297, -297, 154, -208, -212, -209,
	-211, -210, -214, -213, 188, 189, 150, 192, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 30, 204,
	250, 184, 185, 186, 187, 205, 170, 190, 519, 213,
	171, 214, 172, 215, 173, 216, 174, 175, 217, 176,
	179, 180, 181, 182, 178, 153, 81, 153, 87, -172,
	256, -202, 153, -172, -166, -165, -166, -202, -278, -297,
	421, 122, -83, -83, 420, -491, -492, -493, -495, 229,
	420, 419, 153, 272, 16, -303, -303, 79, -202, -354,
	264, -379, -352, 35, 78, 154, 237, 154, 78, 81,
	363, 339, 402, 364, 477, 233, 376, 236, 264, 377,
	339, 402, 233, 236, 477, 264, 339, 233, 236, 402,
	264, 377, 440, 441, 236, 26, 368, 371, 372, 441,
	-446, 473, 154, 111, 108, 109, 110, -323, 129, -336,
	122, 123, 124, 125, 126, 127, 128, 136, 135, 146,
	139, 140, 141, 142, 143, 144, 145, 137, 138, 132,
	112, 130, 134, 131, 114, -149, -323, -329, 60, -321,
	-321, -321, -321, -409, -327, -323, 81, 81, 153, 100,
	87, -323, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, -439, 81, 81, -333, -334, 81,
	81, -316, -278, 81, 87, 87, 81, 81, 81, 87,
	-334, -334, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, -166, 154, 81, -112, 38, -168, 21,
	-150, -149, 20, 31, 32, 31, 32, 31, 32, 31,
	32, 96, 466, 521, 165, 166, 167, -187, -297, -189,
	-180, -297, 236, -140, 108, -341, 239, -341, -341, -341,
	-341, -341, 235, -341, -202, 514, 513, 233, 233, 233,
	-341, 484, 122, 122, 58, -501, 169, 154, -490, -171,
	81, -308, 130, 134, -308, 23, 262, 262, 262, -308,
	302, -537, -538, 16, 132, -306, -538, -306, -306, -308,
	-539, 235, 451, 42, 263, 262, -167, -168, -167, 445,
	441, -396, 446, 447, -310, -538, -309, -308, -308, -309,
	-308, -308, -308, 233, 236, 477, 322, 590, -537, -537,
	30, 30, -425, -202, -425, 511, -288, -297, -425, -425,
	-425, -502, 238, -532, -531, 464, -534, 466, 159, -373,
	159, -373, -354, 264, 264, 154, 122, 23, -374, 122,
	133, -373, -373, -374, -374, -226, 40, -296, 150, -297,
	87, -226, 40, -529, -528, -202, -167, -150, -149, 82,
	82, 82, -425, -425, -425, -425, -425, -427, -425, -425,
	-425, -425, -303, -180, -189, 239, -425, -425, -151, -152,
	141, -323, -297, -151, -3, -118, -117, 116, 117, 119,
	583, 357, 582, 586, 580, -373, 40, -420, 384, 383,
	-414, -416, 81, -415, 81, -415, -415, -415, 81, 81,
	-417, 81, -417, -417, -414, -418, 81, -418, -419, 81,
	-419, -418, -297, -328, -329, -297, 38, -435, 60, -146,
	81, 30, 81, -297, -436, 60, -146, 81, 30, -167,
	-112, -168, 153, 96, 87, -83, 82, 154, -494, 102,
	103, -497, 202, 194, -297, -98, 87, -7, -8, -9,
	-10, -41, -73, -146, -463, -461, 81, 31, 411, 78,
	16, -380, 233, 477, 362, 260, 236, 339, -378, -361,
	-358, -356, -296, -354, -357, -356, -383, -278, 441, -113,
	425, 314, -323, -323, -323, -323, -323, 101, 112, 337,
	102, 103, -318, -337, 31, 310, 311, -319, -319, -319,
	-319, -319, -319, -319, -319, -319, -319, -319, -319, -326,
	-335, -409, 81, 132, 130, 134, 131, 114, -321, -321,
	-319, -319, 82, 154, -487, -486, 116, -323, -323, -297,
	-484, -485, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 353, 348, 354, 352, 342, 360, 355,
	356, 187, 508, 509, 502, 503, 504, 505, 506, 507,
	-328, -328, -323, -484, -328, -272, 32, 31, -329, -329,
	-329, 82, -323, -498, 335, 334, 336, -169, -297, -328,
	82, 82, 82, 96, -329, -329, -328, -319, -328, -485,
	-272, -272, -272, 141, -329, -329, -272, -272, -272, -272,
	141, -272, -272, -272, -272, -272, -272, -272, -272, 82,
	82, 82, -167, -111, -444, -443, -323, 40, 573, -112,
	-323, -164, -163, -323, -526, 87, 467, 468, 163, 166,
	165, 34, 81, 81, 153, -341, 484, -202, 112, -504,
	-297, -362, -359, -356, -297, -297, -352, -297, -297, 521,
	-341, 514, -341, -341, -341, -202, -237, 52, 53, 54,
	-356, -141, 55, 56, -502, -489, 34, -170, -297, -262,
	17, -321, -321, -356, 264, -537, -308, -308, -289, -288,
	-310, -305, -310, -310, -262, -538, -308, -308, -310, -306,
	-262, -297, 441, -262, -262, -396, -307, -297, -307, -341,
	-288, -289, -289, -202, -248, -249, 230, 346, 347, 228,
	226, 11, 227, -257, 303, -342, 485, -232, -233, 76,
	41, -235, 388, 381, 266, 270, 91, 271, 421, 272,
	235, 274, 275, 276, 291, 293, 246, 277, 278, 279,
	412, 280, 158, 292, 281, 282, 283, 364, -227, 6,
	325, 40, 50, 51, 434, 433, 524, 521, 267, -504,
	-504, 30, 30, -362, -297, -297, -159, -154, -158, -155,
	-160, -265, -267, -157, 81, -202, -149, -297, 154, 465,
	467, 468, -532, -374, -532, -374, 31, 411, -377, 411,
	31, -352, -371, 461, 463, -367, 87, 412, -357, -376,
	78, 150, -443, -374, -374, -376, -376, 149, 154, -530,
	466, 467, 222, -112, -204, -202, -504, -361, -352, -297,
	-425, -204, -204, -297, -297, 81, 35, -297, -297, -261,
	154, -260, 16, -298, -297, 34, 87, 153, -261, -119,
	-117, 118, -323, -6, 582, -323, -6, -6, -323, -6,
	-323, -423, 385, 96, 96, -280, 87, -280, 96, 96,
	96, 82, 87, -365, 78, -437, -330, -482, 572, -174,
	82, -169, -480, -481, -169, -173, -297, -437, -174, 82,
	-480, -112, -112, -297, 23, -83, -492, 153, 154, -170,
	-380, -360, -357, -382, 141, -297, -368, 154, 521, 597,
	85, 237, -518, -517, 403, 82, 154, -447, 238, 484,
	87, 595, 218, 101, 337, 102, 103, -409, -329, -326,
	-321, -321, -319, -319, -324, 251, -324, 111, -323, -322,
	-486, 118, -323, 34, 154, 79, 153, 82, 82, 16,
	16, 82, -323, 82, 82, 82, 82, 16, 16, -323,
	82, 153, 82, 82, 82, 82, 79, 82, 154, 82,
	154, -329, -323, -329, 82, 82, 82, -323, -323, -323,
	-329, 82, -323, -323, -323, -323, -323, -323, -323, -323,
	-390, 436, -390, -390, 154, 82, 87, 154, 22, 154,
	-161, 36, 37, 164, 167, 167, 166, -188, -190, -191,
	-192, -193, -194, 132, 155, 156, -181, -182, -183, -184,
	-208, -278, 189, 192, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 250, 184, 185, 186, 187,
	205, 170, 190, 171, 172, 173, 174, 175, 176, 179,
	180, 181, 182, 178, -297, -202, -171, 35, -507, 389,
	-519, 154, 40, -517, 477, -137, 314, -345, 79, -144,
	16, 81, -202, -341, -202, -202, -202, -215, 34, 16,
	-153, -203, -297, 81, 82, 154, -323, -353, 79, -297,
	-289, -262, -262, -202, -297, -262, -262, -308, -310, -310,
	-306, 153, -288, -171, 154, -201, -294, -198, -200, 241,
	-313, -199, 244, -476, 242, 240, 106, 245, 299, 107,
	235, -294, -294, 241, -236, 237, 34, -294, -251, 235,
	299, 242, 20, -250, 235, 107, -297, 241, 245, 240,
	-293, 122, -287, 149, 237, 42, 364, -293, 525, -293,
	-293, -293, -293, -293, -293, -293, 273, 273, -293, -293,
	-293, -293, -293, -293, -293, -293, -293, -293, -293, 159,
	-293, -293, -293, -293, -293, -293, 81, 268, 269, -508,
	389, 30, 345, 345, -519, 30, -145, 339, 30, -268,
	-269, -270, -271, 67, 71, 73, 68, 69, 70, 74,
	30, 154, -295, -299, 34, -297, 87, -295, -149, -154,
	-159, -295, 81, -531, -533, 469, 466, 472, -376, -376,
	237, 81, 122, -376, -376, 40, -296, -528, 473, 467,
	-179, 23, 154, 78, -204, -181, -189, -262, -152, -154,
	-297, 87, -297, 141, -262, 119, -6, 117, -123, -122,
	-121, 120, 580, 586, 119, 119, 119, 82, 82, 82,
	154, 82, 82, 82, 154, 82, 154, -450, 446, 39,
	154, 81, 82, 154, 60, 154, 122, 82, 154, 82,
	60, -179, 153, 421, -297, -461, 82, -382, 154, 237,
	153, 153, -358, 367, -296, -360, 20, 521, -278, 38,
	-284, -283, 87, 595, 82, -324, -324, 111, -321, -318,
	82, 119, -323, 117, -206, -208, 383, 384, -207, -213,
	150, 188, 250, 187, 186, 184, 383, 384, -226, -297,
	-323, -323, 82, -323, -323, 16, -297, -226, -319, -323,
	-166, 82, 82, -389, -390, -389, -389, 82, 82, 82,
	82, -389, 82, 82, 82, 82, 82, 82, 82, 82,
	81, -443, -450, -323, -323, -163, -162, 43, 167, 375,
	82, 154, -278, 82, 154, -208, -171, 34, -510, 448,
	391, 401, -293, -315, -314, 341, 41, -430, 412, 397,
	398, -359, 264, -297, -516, 94, 122, 78, 329, 330,
	331, 332, -339, -340, -338, -342, -504, -225, -259, -297,
	87, 81, -223, 521, -202, 81, 81, 81, -410, 319,
	-208, -202, -153, -297, 16, 154, -503, 153, -1, -297,
	-352, -308, -262, -538, -262, -308, -308, -310, -297, 34,
	-249, -205, -278, -199, -475, -476, -341, -297, 107, -475,
	107, 81, -205, -278, -278, -252, -307, -278, -297, -297,
	-297, -255, -254, -278, -297, -297, -297, 107, 107, -231,
	40, 47, 48, 49, -293, -293, 191, -234, 40, 411,
	413, 414, 96, 96, 96, 96, 87, 87, 87, -293,
	-293, 96, 87, -299, 87, -477, 166, 44, 45, 96,
	96, 96, 96, 40, 87, -238, 40, 284, 288, 285,
	286, 287, 87, 96, 40, 96, 40, 96, 40, -297,
	81, -478, -479, 87, -510, -293, 345, -373, 122, -315,
	-515, 314, -138, 91, 31, -175, 230, 227, -504, -364,
	-363, -278, -158, -158, -158, -158, 67, 67, 67, 72,
	67, 72, 67, -270, -364, -160, -171, -299, 82, -524,
	-523, -522, -520, 75, 238, 76, -328, 466, 470, 471,
	-360, -311, 87, -367, 14, -202, -202, -429, 294, 295,
	82, -264, 18, 153, -264, 115, -6, -119, -121, -323,
	-6, -323, 582, 357, 583, 87, 96, 96, -458, 431,
	426, 428, 107, -330, -445, -444, 60, -146, -169, -437,
	-481, -443, -297, 60, -146, -437, -297, 96, 16, -357,
	-352, 141, 141, -297, 368, -368, 87, 390, 87, 233,
	596, 154, 122, -284, -318, -323, 82, -216, 175, 174,
	-216, 82, -415, -415, -414, -417, -414, -216, -216, 82,
	82, 23, 82, 82, 82, -323, 82, 82, 154, -434,
	486, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -332, -331, 256, -458, 44,
	45, 87, 87, -192, -208, 231, -183, 40, 34, -146,
	-511, 91, -505, 87, -297, -512, 91, 392, 152, 343,
	40, 393, 394, 409, 338, 96, 96, 399, -506, -297,
	-145, -514, 51, 122, 87, -202, -338, -287, 149, 275,
	322, 82, 154, -293, -293, -195, -196, -197, -205, -198,
	-200, 34, 81, 81, -195, -195, -195, -411, 321, 20,
	96, 140, -172, 79, 153, -154, -203, -297, 141, 82,
	-262, -297, -262, -262, -308, -146, -253, 44, 46, -208,
	-473, -297, -471, -473, -297, -471, -471, -341, -323, -253,
	-205, 237, 30, 227, -256, 327, 328, -369, 300, 112,
	-369, 154, -161, -297, -226, -226, 30, 87, 87, -204,
	82, 154, 122, -511, -505, 122, -374, 87, -512, -516,
	122, 87, 154, -175, -175, -262, 154, 122, -177, -176,
	78, 79, -178, 78, -176, 67, 67, -262, -522, -521,
	23, -476, -476, -476, 82, 82, -263, 19, 20, 141,
	-263, 119, 117, 119, 119, -297, 82, 82, -421, 574,
	-454, -456, 426, 20, 20, 14, 82, -437, -437, -352,
	-368, 412, -202, -283, 87, 596, -323, 82, -323, 82,
	87, -166, 20, -421, -185, -208, -316, -146, -142, 521,
	87, -509, 403, 87, 87, 96, 40, 96, 152, 395,
	-431, -138, -513, 91, 122, 595, 81, -293, -293, -293,
	-297, -259, -316, -316, 82, 154, -146, -224, -258, -297,
	-195, 82, 82, 82, -412, 255, 96, 140, 96, 140,
	96, -295, -154, -297, -262, -503, 153, -262, -262, -278,
	-220, -219, -217, 101, 112, 40, 381, -218, 91, 149,
	289, 292, 291, 267, 290, -247, -312, 78, 387, 327,
	328, -342, 574, 515, 240, 106, 107, 369, -313, 81,
	81, 79, 309, 81, 81, -473, 82, -253, -278, 40,
	-256, 40, 300, -254, 149, -226, 82, -479, 87, -509,
	87, -376, -514, 87, -504, -166, -363, -443, -323, 81,
	-323, 81, 67, 11, 18, -323, -329, 239, -6, 583,
	357, -240, 575, 87, 20, 87, -452, 87, -364, -115,
	-448, -396, 82, 82, -389, -392, -391, -395, 432, 301,
	439, -329, -240, 520, -142, -143, 59, 473, 20, 521,
	342, 40, 96, 40, 396, 87, 102, 103, -285, -286,
	87, -347, -349, -278, 81, -226, -228, -296, 150, 87,
	-223, -197, 82, 154, -293, 82, -221, -222, -257, -342,
	-114, -113, -221, -413, 158, 96, 140, 96, 96, -262,
	-262, -217, 101, -319, 87, -228, -229, 40, 288, 284,
	122, 122, -230, 40, 268, 269, -239, 81, 299, 14,
	191, 81, 107, 107, -202, -347, -347, -474, 329, 330,
	331, 333, 332, -474, -347, -347, 81, -370, -369, -319,
	-293, 149, -513, -167, -170, -472, -297, 240, 20, 20,
	-297, -297, -281, 576, 96, 87, 428, -422, 577, -457,
	431, -451, -449, 426, 427, 428, 429, 82, -394, 114,
	395, 399, -317, -320, 96, 99, 183, 152, -281, -186,
	-297, 299, 87, 390, 87, 342, 596, 154, 122, 82,
	154, -414, -323, -258, -316, -223, -384, 256, 154, -257,
	-287, -115, -384, -428, 166, 320, 521, 96, 140, 96,
	-166, 87, 87, 96, 81, -438, 30, 87, -348, 81,
	82, 82, 82, 82, -347, -226, -293, 82, 82, 154,
	81, 20, 87, -459, 238, -455, -456, 430, -449, 20,
	428, 20, 20, -393, -394, 399, -317, -320, 572, 437,
	437, 437, 34, 368, 412, -286, 87, -350, -349, -161,
	82, -385, 308, 20, -257, -293, -385, 320, 96, 140,
	96, -167, 82, -323, -333, -293, 82, -242, -241, 517,
	-347, -350, 79, -350, 79, -350, 79, -350, 79, 82,
	-226, -297, 240, -282, -297, -452, -466, 81, 96, -454,
	-453, -455, 20, -452, 20, -452, -452, 111, 438, 438,
	438, 87, -351, 246, 91, 521, 327, 328, -161, 20,
	-386, 301, 302, -387, -400, 304, -226, 96, 82, -297,
	-246, -244, -245, 78, 444, 297, 298, 82, -474, -474,
	-474, -474, -247, 82, 154, -470, 30, 82, -465, -464,
	-279, -460, -297, 431, 432, 87, -452, -393, -293, 87,
	326, -278, 81, -398, 305, 81, -396, 81, -396, 107,
	330, -369, -245, 78, -244, 78, 15, 14, -350, -350,
	-350, -350, -297, -469, -468, -467, 82, 154, 153, 96,
	-297, -383, -388, 306, 96, -319, 81, -319, 81, -397,
	303, 81, -243, 294, 295, 30, 166, -243, 154, 122,
	-464, -297, 82, -402, 81, 20, 82, -383, 82, -383,
	81, 122, -319, 101, 40, 296, -468, 40, -323, 153,
	-403, -401, 256, -387, 82, 82, 82, -383, 96, 82,
	-297, 82, 154, -297, -399, 307, 82, -401, -404, 60,
	96, -408, -405, 81, -257, 258, 132, -408, -257, -407,
	-406, 306, 259, 81, 82, 154, -297, 255, 81, -329,
	-406, -405, -329, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 0, 260,
	261, 262, 819, 820, 821, 822, 823, 824, 0, 0,
	0, 0, 593, 594, 0, 562, 0, 0, 0, 0,
	0, 0, 453, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 351, 352, 353, 354, 355, 356, 357, 0, 285,
	281, 206, 207, 208, 209, 210, 292, 293, 430, 0,
	0, 0, 0, 674, -2, 53, 274, 0, 265, 265,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	-2, 606, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 340, 341, 342, 336,
	337, 339, 338, -2, 0, 606, 0, 0, 0, 694,
	0, 0, 711, 733, 23, 0, 7, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 0, 0, 19,
	0, 19, 0, 0, 0, 1186, 1187, 1188, 1189, -2,
	1677, 1655, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1618, 1619, 1620, 1621, 1622,
	1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673,
	1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 0, 258, 256, 1655, 1677, 1737,
	1770, 0, 839, 0, 652, 0, 657, 1140, 652, 286,
	595, 596, 694, 694, 560, 0, 322, 0, 1668, 326,
	0, 0, 0, 557, 316, 317, 318, 319, 320, 321,
	0, 0, 818, 0, 0, 312, 0, 280, 1728, 0,
	0, 0, 0, 0, 0, 150, 945, 152, 947, 156,
	163, 0, 0, 168, 169, 172, 173, 174, 175, 176,
	0, 180, 0, 182, 185, 0, 187, 188, 0, 191,
	192, 193, 0, 203, 204, 205, 948, 949, 950, -2,
	81, 837, 1589, 1479, 0, 1486, 1487, 1498, 1509, 1266,
	1267, 1268, 1269, 0, 0, 0, 0, 0, 1276, 1277,
	0, 1293, 1834, 0, 1283, 1284, 1285, 1286, 1287, 90,
	102, 103, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 0,
	1539, 1540, 1541, 1452, 1253, 1186, 0, 1843, 0, 1863,
	1868, 1869, 1870, 1871, 1862, 0, 0, 1437, 0, 1427,
	0, 0, -2, -2, 0, 0, 1795, -2, 1840, 1859,
	1867, 1844, 1866, 1836, 1837, 1838, 1831, 1832, 1833, 1835,
	1845, 1847, 1858, 0, 1854, 1864, 1865, 0, 0, 0,
	0, 104, 105, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1443, -2, 1445, 1446,
	1448, -2, 1450, 1451, -2, 1454, 1455, 1456, -2, -2,
	1459, 1460, 1461, 1462, 1463, 1464, 1467, -2, -2, -2,
	-2, 1439, 1440, 1441, 1442, 1431, 1432, 1433, 1434, 1435,
	1436, -2, -2, -2, 694, 769, 0, -2, 0, 0,
	0, 716, 719, 722, 725, 0, 54, 55, 275, 276,
	264, 266, 0, 270, 0, 263, 0, 0, 0, 0,
	977, 977, 977, 977, 977, 977, 0, 977, 0, 0,
	0, 0, 0, 977, 867, 952, 953, 954, 975, 976,
	0, 1029, 0, 0, 0, 611, 607, 608, 609, 610,
	682, 0, 684, 687, 537, 537, 484, 0, 0, 0,
	537, 0, 498, 490, 0, 0, 0, 537, 0, 0,
	689, 689, 0, 540, 547, 537, 537, -2, 537, 537,
	537, 0, 0, 504, 505, 506, 490, 490, 509, 510,
	511, 522, 523, 548, 1613, 0, 0, 430, 0, 430,
	0, 430, 430, 430, 613, 1765, 1675, 1742, 1728, 0,
	0, 231, 1795, 236, 0, 1676, 1691, 0, 0, 1709,
	0, -2, 0, 302, 689, 0, 695, 0, 694, 0,
	0, 430, 430, 430, 430, 430, 1028, 430, 430, 430,
	430, 0, 0, 0, 430, 430, 0, 0, 734, 735,
	730, 731, 732, 736, 737, 5, 6, 19, 0, 0,
	0, 0, 0, 0, 60, 59, 0, 1590, 1608, 1544,
	1545, 1546, 1595, 1548, 1599, 1599, 1599, 1599, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 0, 0, 1588,
	1568, 1597, 1597, 1597, 1595, 1592, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1602, 1602, 1605, 1605, 1602, 0, 1477, 0, 0, 0,
	0, 656, 0, 0, 689, -2, 0, 561, 323, 1190,
	0, 0, 327, 328, 0, 0, 343, 0, 346, 331,
	332, 333, 0, 130, 0, 314, 315, 0, 0, 282,
	0, 0, 0, 431, 0, 0, 0, 0, 0, 0,
	160, 157, 164, 167, 177, 184, 0, 196, 198, 201,
	158, 165, 170, 171, 178, 199, 159, 161, 162, 166,
	200, 202, 179, 183, 197, 181, 186, 189, 190, 195,
	0, 131, 0, 0, 0, 0, 0, 1485, 0, 0,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 1479, 0, 0, 1272,
	1273, 1274, 1275, 1278, 0, 1294, 0, 0, 0, 1538,
	1542, 0, 1477, 1477, 0, 1477, 1473, 0, 0, 0,
	0, 0, 0, 1477, 1413, 0, 0, 1415, 1428, 0,
	0, 1417, 1418, 0, 1421, 1422, 1477, 0, 1477, 1426,
	1409, 1410, 0, 1473, 1473, 1473, 0, 0, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	0, 0, 0, 689, 0, 0, 677, 0, 658, 0,
	713, 715, 0, 717, 718, 720, 721, 723, 724, 726,
	727, 56, 0, 0, 268, 0, 273, 0, 836, 0,
	0, 852, 977, 868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 977, 0, 977, 977, 977,
	0, -2, 0, 0, 0, 613, 612, 0, 683, 0,
	0, 742, 0, 0, 483, 0, 490, 537, 537, 496,
	497, 492, 491, 543, 544, 540, 0, 540, 540, 742,
	0, 516, 517, 518, 537, 537, 524, 690, 525, 526,
	540, 0, 545, 546, 742, 0, 0, 742, 742, 0,
	534, 535, 536, 0, 0, 977, 0, 553, 492, 492,
	1614, 1615, 0, 986, 0, 0, 0, 556, 0, 0,
	0, 0, 614, 211, 214, 0, 217, 0, 1765, 0,
	1765, 0, 224, 0, 0, 0, 0, 0, 0, 254,
	255, 0, 0, 0, 0, 245, 248, 1134, 1135, 942,
	943, 249, 250, 294, 295, 0, 658, 712, 714, 708,
	709, 710, 0, 0, 0, 0, 0, 430, 0, 0,
	0, 0, 589, 0, 591, 0, 0, 0, 750, 744,
	746, 813, 90, 750, 8, 77, 74, 0, 19, 0,
	0, 19, 19, 0, 19, 259, 0, 1611, 1609, 1610,
	1547, 1596, 0, 1573, 0, 1574, 1575, 1576, 0, 0,
	1569, 0, 1570, 1571, 1572, 1563, 0, 1564, 1565, 0,
	1566, 1567, 257, 0, 1478, 840, 0, 631, 644, 626,
	0, 633, 0, 1141, 615, 644, 617, 0, 633, 658,
	680, 658, 0, 324, 0, 329, 0, 0, 345, 347,
	348, 349, 334, 335, 558, 310, 311, 303, 304, 305,
	306, 307, 308, 309, 313, 100, 0, 283, 284, 0,
	0, 0, 144, 145, 146, 147, 148, 149, 151, 135,
	579, 581, 934, 946, 0, 937, 0, 154, 194, 127,
	0, 0, 1480, 1481, 1482, 1483, 1484, 1488, 0, 1490,
	1492, 1494, 1496, 0, 1514, -2, -2, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1499,
	1512, 1513, 0, 0, 0, 0, 0, 0, 1510, 1510,
	1505, 0, 1270, 0, 1291, 1295, 0, 0, 0, 91,
	1472, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	0, 0, 1479, 0, 0, 0, 1474, 1475, 0, 0,
	0, 1368, 0, 0, 1374, 1375, 1376, 0, 639, 0,
	1438, 1414, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 768, 770, 0, 648, 650, 651, 0, 678,
	691, 696, 697, 700, 52, 57, 277, 278, 0, 0,
	272, 0, -2, 854, 0, 0, 869, 687, 0, 0,
	883, 428, 928, 0, 0, 0, 944, 967, 973, 0,
	0, 977, 0, 0, 0, 1007, 870, 875, 876, 877,
	871, 872, 878, 879, 0, 685, 0, 0, 782, 482,
	0, 538, 539, 487, 1728, 492, 742, 742, 499, 493,
	500, 542, 501, 502, 503, 0, 742, 742, 537, 540,
	527, 541, 540, 530, 531, 0, 549, 554, 550, 0,
	552, 507, 508, 687, 359, 360, 401, 401, 401, 384,
	401, 0, 0, 372, 1616, 0, 0, 0, 0, 381,
	1616, 0, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 0,
	0, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616, 1616,
	1616, 1616, 0, 1616, 1616, 1616, 1616, 1616, 1120, 1616,
	0, 987, 391, 392, 393, 394, 399, 400, 0, 425,
	0, 0, 0, 428, 0, 917, 755, 0, 756, 757,
	753, 784, 808, 808, 0, 808, 788, 1140, 0, 0,
	222, 223, 212, 0, 213, 0, 225, 226, 0, 228,
	229, 230, 237, 1675, 1742, 232, 234, 0, 0, 238,
	251, 252, 253, 0, 0, 243, 244, 0, 0, 297,
	298, 300, 0, 706, 576, 1138, 577, 578, 582, 0,
	0, 585, 586, 587, 588, 854, 0, 922, 923, 742,
	0, 751, 0, 747, 814, 0, 816, 0, 742, 0,
	75, 19, 0, 68, 65, 0, 0, 0, 0, 0,
	1591, 1543, 1612, 0, 0, 0, 1593, 0, 0, 0,
	0, 58, 660, 622, 0, 625, 641, 0, 645, 0,
	0, 637, 630, 634, 0, 0, 654, 616, 0, 0,
	621, 706, 681, 1191, 0, 330, 344, 0, 0, 0,
	0, 138, 931, 0, 139, 143, 133, 0, 0, 0,
	936, 0, 933, 938, 0, 153, 0, 0, 128, 129,
	998, 1003, 0, 1489, 1491, 1493, 1495, 1497, 0, 1500,
	1510, 1510, 1506, 0, 1501, 0, 1503, 0, 1480, 0,
	1296, 0, 0, 0, 0, 0, 0, 1358, 1359, 0,
	0, 1363, 0, 1365, 1366, 1367, 1369, 0, 0, 0,
	1373, 0, 1412, 1430, 1416, 1419, 0, 1423, 0, 1425,
	0, 694, 0, 0, 1333, 1333, 1333, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	1288, 0, 1289, 1290, 0, 771, 660, 0, 0, 0,
	703, 701, 702, 279, 267, 269, 0, 0, 0, 842,
	843, 845, 0, 848, 849, 850, 0, 855, 856, 858,
	859, 0, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1660, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 853, 687, 0, 978, 890, 1616,
	432, 0, 0, 930, 0, 906, 0, 0, 0, -2,
	0, 0, 1078, 0, 0, 0, 0, 1009, 0, 0,
	0, 600, 604, 23, 688, 0, 743, 485, 0, 486,
	537, 494, 495, 742, 1140, 519, 520, 742, 537, 537,
	540, 0, 551, 0, 986, 362, 0, 1149, 1150, 402,
	0, 1156, 1165, 977, 1223, 0, 1165, 0, 0, 1167,
	1168, 0, 0, 0, 0, 385, 386, 0, 371, 0,
	0, 0, 0, 370, 0, 0, 412, 0, 0, 0,
	0, 1617, 1616, 1616, 0, 379, 380, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 1616, 1616, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1111,
	0, 0, 0, 0, 0, 0, 0, 1126, 1127, 890,
	1616, 0, 0, 0, 432, 904, 913, 0, 0, 0,
	0, 0, 0, 775, 0, 0, 774, 0, 0, 0,
	0, 0, 687, 809, 0, 811, 812, 786, -2, 0,
	755, 791, 1477, 215, 216, 0, 0, 221, 239, 241,
	0, 0, 0, 240, 242, 246, 247, 296, 299, 301,
	676, 0, 0, 0, 1030, 0, 592, 740, 745, 752,
	815, 817, 91, 748, 740, 0, 78, 19, 77, 69,
	70, 0, 19, 0, 0, 0, 0, 1601, 1600, 1586,
	0, 1587, 1598, 1603, 0, 1606, 0, 664, 0, 0,
	644, 646, 0, 0, 644, 0, 0, 653, 0, 0,
	644, 679, 0, 0, 559, 101, 350, 0, 0, 0,
	0, 0, 580, 0, 935, 135, 0, 0, 155, 0,
	0, 1001, 0, 1003, 1476, 1502, 1504, 0, 1511, 1507,
	1271, 1279, 1292, 0, 0, 1298, 1310, 1310, 0, 1301,
	1599, 1599, 1304, 1595, 1597, 1595, 1310, 1310, 0, 92,
	0, 0, 1364, 0, 0, 0, 640, 0, 0, 0,
	1331, 1333, 1333, 1339, 1334, 1340, 1341, 1333, 1333, 1333,
	1333, 1346, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333,
	1329, 649, 664, 692, 693, 698, 699, 0, 271, 0,
	0, 847, 0, 0, 0, 860, 0, 0, 894, 891,
	892, 893, 0, 925, 433, 434, 435, 436, 0, 0,
	0, 929, 0, 917, 899, 0, 0, 0, 968, 969,
	970, 971, 972, -2, 981, 0, 0, 0, 1074, 1616,
	1616, 1142, 0, 0, 0, 1142, 1142, 1142, 1017, 0,
	1008, 652, 0, -2, 0, 0, 602, 0, 0, 783,
	488, 742, 512, 0, 528, 742, 742, 537, 555, 0,
	361, 403, 0, 1155, 1180, 1166, 1180, 1224, 1180, 1180,
	977, 0, 403, 0, 0, 373, 409, 0, 0, 0,
	0, 369, 406, 700, 410, 411, 413, 0, 415, 375,
	387, 388, 389, 390, 0, 0, 0, 382, 395, 396,
	397, 398, 1088, 1089, 1090, 1093, 1094, 1095, 1096, 0,
	0, 1099, 1100, 1101, 1102, 1103, 1177, 1178, 1179, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1128, 1129, 1130, 1131,
	1132, 1133, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	0, 0, 1123, 0, 894, 0, 0, 0, 0, 925,
	906, 0, 916, 0, 918, 919, 0, 0, 623, 742,
	289, 0, 778, 772, 0, 761, 776, 777, 764, 0,
	766, 0, 762, 763, 742, 754, 785, 810, 787, 790,
	792, 793, 799, 0, 0, 0, 0, 218, 219, 220,
	227, 0, 452, 233, 707, 1139, 583, 584, 1031, 1032,
	590, 738, 0, 0, 738, 73, 76, 0, 71, 0,
	0, 0, 0, 63, 61, 1594, 0, 0, 666, 115,
	0, 0, 0, 642, 0, 647, 644, 629, 638, 628,
	635, 636, 655, 644, 620, 619, 1192, 325, 0, 932,
	135, 140, 141, 142, 136, 134, 939, 0, 941, 0,
	999, 1003, 0, 0, 1508, 1297, 1280, 1299, 1311, 1312,
	1300, 1281, 1302, 1303, 1305, 1306, 1307, 1308, 1309, 1282,
	1360, 0, 1362, 1370, 1371, 0, 1420, 1424, 0, 0,
	0, 1337, 1338, 1342, 1343, 1344, 1345, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 694, 1330, 0, 666, 704,
	705, 835, 838, 844, 846, 0, 857, 0, 0, 873,
	866, 0, 0, 885, 886, 896, 0, 0, 0, 438,
	439, 0, 0, 0, 451, 447, 448, 449, 429, 924,
	913, 902, 0, 0, 912, 0, 982, 1616, 1616, 1616,
	0, 988, 0, 0, 0, 0, 1143, 1144, 1146, 1147,
	1148, 0, 0, 1142, 0, 0, 0, 1020, 0, 0,
	1011, 0, 808, 0, 0, 742, 601, 604, 605, 686,
	489, 742, 532, 529, 742, 358, 374, 404, 0, -2,
	0, 1181, 0, 1169, 1181, 0, 0, 1180, 0, 363,
	403, 0, 0, 0, 416, 419, 420, 417, 1219, 0,
	418, 0, 408, 414, 1091, 1092, 0, 1097, 1098, 0,
	1122, 0, 0, 421, 0, 0, 0, 422, 427, 899,
	0, 914, 0, 920, 921, 694, 0, 0, 758, 779,
	0, 0, 759, 0, 760, 765, 767, 288, 794, 0,
	0, 796, 797, 798, 789, 235, 728, 0, 0, 749,
	729, 0, 19, 0, 0, 66, 1604, 1607, 668, 0,
	665, 116, 0, 0, 0, 0, 643, 627, 618, 137,
	132, 940, 118, 1002, 1004, 1000, 0, 1372, 0, 1333,
	1332, 1326, 0, 668, 0, 863, 861, 873, 865, 880,
	895, 884, 0, 926, 927, 0, 440, 441, 0, 444,
	450, 897, 898, 0, 0, 910, 0, 0, 0, 0,
	974, 1075, 1076, 1077, 1078, 0, 991, 0, 1080, 1616,
	0, -2, 0, -2, 1023, 0, 1018, 0, 1010, 0,
	1013, 742, 742, -2, 598, 603, 0, 513, 533, 405,
	1182, -2, 1195, 1197, 0, 987, 1200, 1201, 0, 0,
	0, 0, 0, 0, 1245, 1209, 0, 0, 1213, 1214,
	1215, 0, 0, 1218, 0, 1526, 1527, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 1163, 364, 365, 0,
	367, 368, 1220, 407, 1616, 377, 1121, 1124, 1125, 426,
	423, 424, 902, 905, 624, 689, 290, 291, 780, 0,
	773, 803, 800, 0, 0, 739, 741, 67, 72, 0,
	0, 670, 0, 667, 0, 661, 663, 126, 632, 88,
	109, 0, 1361, 1411, 1336, 0, 1327, 0, 1321, 1322,
	1323, 1328, 670, 0, 864, 0, 881, 882, 0, 0,
	437, 442, 0, 445, 446, 903, 900, 901, 0, 908,
	0, 0, 963, 1595, 0, 983, 984, 1136, 1137, 985,
	989, 1145, 1079, 0, 0, 1078, 1033, -2, 1085, 0,
	995, 118, 1033, 1014, 0, 1021, 0, 1019, 1012, 694,
	599, 1196, 1198, 1199, 1202, 1203, 1204, 1250, 1251, 1252,
	0, 0, 1207, 1247, 1248, 1249, 1208, 0, 0, 0,
	0, 0, 1524, 1525, 1243, 0, 0, 1170, 1172, 1173,
	1174, 1175, 1176, 1171, 0, 0, 0, 1162, 1164, 366,
	0, 1616, 915, 287, 0, 0, 804, 806, 801, 802,
	62, 64, 79, 0, 669, 117, 0, 80, 0, 106,
	0, 119, 120, 0, 0, 0, 0, 1335, 1324, 0,
	0, 0, 0, 0, 1528, 1529, 1530, 0, 659, 0,
	862, 0, 887, 0, 889, 443, 907, 910, 0, 956,
	0, 700, 0, 1081, 1082, 990, 1035, 0, 986, 1087,
	1616, 997, 1035, 1006, 0, 1016, 0, 1025, 0, 1022,
	689, 1205, 1206, 0, 0, 1427, 1616, 0, 1238, 0,
	956, 956, 956, 956, 0, 376, 0, 781, 795, 0,
	0, 0, 89, 93, 0, 115, 112, 0, 121, 0,
	0, 0, 0, 0, 1313, 0, 0, 0, 1317, 1318,
	1319, 1320, 0, 874, 888, 909, 911, 955, 964, 965,
	700, 994, 0, 1072, 1086, 0, 996, 1015, 1024, 0,
	1027, 597, 1246, 0, 1212, 0, 1217, 1226, 1239, 0,
	0, 1151, 0, 1153, 0, 1157, 0, 1159, 0, 0,
	378, 805, 807, 0, 672, 662, 82, 0, 0, 110,
	111, 113, 0, 122, 0, 124, 125, 0, 1314, 1315,
	1316, 851, 957, 1616, 0, 0, 961, 962, 966, 0,
	1060, 0, 0, 1066, 0, 1073, 1091, 1026, 1210, 1216,
	1225, 1227, 1228, 0, 1240, 1241, 1242, 1244, 956, 956,
	956, 956, 1161, 671, 0, 1005, 0, 94, 0, 96,
	98, 99, 1183, 107, 108, 114, 123, 1325, 0, 959,
	0, 1036, 0, 1038, 0, 0, 0, 0, 0, 1070,
	0, 1211, 1229, 0, 1230, 0, 0, 0, 1152, 1154,
	1158, 1160, 673, 83, 84, 0, 95, 0, 0, 958,
	960, 0, 1040, 0, 1061, 0, 0, 0, 0, 0,
	0, 0, 1231, 1233, 1234, 0, 0, 1232, 0, 0,
	97, 1184, 1037, 1034, 0, 1072, 1062, 0, 1064, 0,
	0, 0, 0, 1235, 1237, 1236, 85, 86, 87, 0,
	0, 1042, 0, 1058, 1063, 1065, 1067, 0, 1071, 1069,
	1185, 1041, 0, 1054, 1039, 0, 1068, 1043, -2, 0,
	1059, 1044, -2, 0, 1052, 0, 0, 1045, 1053, 0,
	1048, 0, 0, 0, 1047, 0, -2, 1055, 0, 0,
	1049, -2, 0, 1057, 1056,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 594, 593,
	123, 122, 124, 3, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 595, 135, 596, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:753
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:760
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:766
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:774
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:780
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:784
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:799
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:803
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:809
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:814
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:818
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:850
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:857
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:877
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:883
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:890
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:898
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:904
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:913
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:923
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:931
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:939
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:947
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:957
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:965
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:975
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:991
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1005
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1011
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1015
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1021
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1030
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1040
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1044
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1050
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1063
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1069
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1090
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1103
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1114
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1120
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1124
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1130
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1137
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1145
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1149
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1163
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1167
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1171
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1176
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1184
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1190
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1199
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1210
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1214
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1220
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1224
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1230
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1234
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1240
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1264
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1283
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1287
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1291
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1300
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1307
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1315
		{
			yyVAL.str = ""
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1322
		{
			yyVAL.str = yyDollar[3].str
		}
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1327
		{
			yyVAL.str = "\n"
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1334
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1343
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1367
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1371
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1377
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1383
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1401
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1418
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1441
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1445
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1449
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1454
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1458
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1464
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1477
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1488
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1501
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1505
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1515
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1541
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1547
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1560
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1568
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1577
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1581
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1585
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1589
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1593
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1597
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1604
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1608
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1614
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1621
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1630
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1634
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1652
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1656
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1660
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1664
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1668
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1672
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1676
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1680
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1684
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1688
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1692
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1696
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1700
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1704
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1708
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1712
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1716
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1720
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1724
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1728
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1732
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1736
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1740
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1744
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1748
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1752
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1756
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1760
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1764
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1768
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1772
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1776
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1780
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1784
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1788
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1792
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1796
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1800
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1804
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1808
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1812
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1816
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1820
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1824
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1828
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1832
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1836
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1849
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1856
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1863
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1873
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1877
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1883
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1890
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1898
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1902
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1906
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1910
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1916
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1920
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1926
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1933
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1940
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1949
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1979
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1983
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:1987
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1993
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1999
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2003
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2010
		{
			yyVAL.str = yyDollar[3].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2016
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2020
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2026
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2043
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2052
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2060
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2091
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2114
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2121
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2128
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2136
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2143
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2150
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2159
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2163
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2167
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2173
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2177
		{
			yyVAL.str = yyDollar[1].str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2183
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2187
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2193
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2197
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2208
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2214
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2219
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2223
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2227
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2231
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2235
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2239
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2243
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2247
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2251
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2257
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2261
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2269
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2274
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2279
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2285
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2292
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2298
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2305
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2312
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2322
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2329
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2340
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2351
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2355
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2361
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2371
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2377
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2381
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2387
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2393
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2397
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2401
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2405
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2411
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2423
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2429
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2433
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2439
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2443
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2449
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2455
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2466
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2472
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2476
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2488
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2492
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2508
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2518
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2559
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2563
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2569
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2575
		{
			yyVAL.str = yyDollar[1].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2580
		{
			yyVAL.str = "true"
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2581
		{
			yyVAL.str = "false"
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2582
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2587
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2603
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2614
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2623
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2627
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2633
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2640
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2649
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2659
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2668
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2678
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2688
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2697
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2705
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2709
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2713
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2717
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2721
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2736
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2740
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2744
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2748
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2752
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2756
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2760
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2764
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2769
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2800
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2804
		{
			yyVAL.str = string("COLUMN")
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2809
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2815
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2821
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2830
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2834
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2840
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2847
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2855
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2862
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2869
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2876
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2890
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2898
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2905
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2912
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2921
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2925
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2932
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2952
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2960
		{
			assignments := []*tree.VarAssignmentExpr{
				{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2973
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2979
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2990
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3001
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3005
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3010
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3014
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3019
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3023
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3039
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3043
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3047
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3051
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3055
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3059
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3063
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3067
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3071
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3075
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3079
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3083
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3095
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3099
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3105
		{
			yyVAL.item = nil
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3110
		{
			yyVAL.item = nil
		}
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3150
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3156
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3164
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3168
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3172
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3185
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3191
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3196
		{
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3200
		{
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3205
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3215
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3233
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3239
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3245
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3251
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3257
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3263
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3269
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3278
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3286
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3290
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3298
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3306
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3312
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3329
		{
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3331
		{
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3340
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3350
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3367
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3373
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3379
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3385
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3391
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3400
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3422
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3426
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3432
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3444
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3458
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3464
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3476
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3480
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3484
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3489
		{
			yyVAL.str = ""
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3493
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3499
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3522
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3527
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3531
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3535
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3541
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3547
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3551
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3557
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3563
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3567
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3571
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3577
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3581
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3605
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3614
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3623
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3632
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3636
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3642
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3651
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3660
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3670
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3681
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3687
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3691
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3697
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3703
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3712
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3719
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3730
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3735
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3742
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3758
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3771
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3782
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3786
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3792
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3797
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3804
		{
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3806
		{
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3809
		{
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3818
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3822
		{
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3827
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3836
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3843
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3849
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3857
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3864
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3871
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3891
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3901
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3905
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3911
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3918
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3924
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3932
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3939
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3946
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3965
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3969
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3978
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:3982
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:3988
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3997
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4001
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4007
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4011
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4017
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4021
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4027
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4032
		{
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4043
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4047
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4054
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4063
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4069
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4073
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4079
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4083
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4088
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4092
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4105
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4112
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4119
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4137
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4156
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4162
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4169
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4173
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4186
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4190
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4195
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4199
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4206
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4211
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4218
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4224
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4228
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4232
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4236
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4240
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4244
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4250
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4257
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4266
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4270
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4276
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4288
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4297
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4303
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4307
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4320
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4326
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4332
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4336
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4342
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4347
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4351
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4355
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4360
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4364
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4368
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4377
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4385
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4389
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4393
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4407
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4411
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4431
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4441
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4453
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4461
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4469
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4478
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4486
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4494
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4502
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4510
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4518
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4526
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4534
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4542
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4552
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4563
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4577
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4581
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4585
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4590
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4594
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4598
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4607
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4611
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4616
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4620
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4625
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4629
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4635
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4639
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4645
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4649
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4654
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4658
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4663
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4671
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4677
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4685
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4693
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4703
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4709
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4718
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4727
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4736
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4746
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4750
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4760
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4764
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4768
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4772
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4778
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4788
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4792
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4798
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4804
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4808
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4814
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4820
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4824
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4828
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4838
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4844
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4848
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4854
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4858
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4864
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4868
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4878
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4891
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4897
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4903
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4916
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4934
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4938
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4944
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4954
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4958
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4962
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4967
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4971
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4975
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4979
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4984
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4988
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4992
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4996
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5000
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5005
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5009
		{
			yyVAL.str = yyDollar[1].str
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5013
		{
			yyVAL.str = yyDollar[2].str
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5019
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5025
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5029
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5033
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5037
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5041
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5047
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5083
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5093
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5099
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 838:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5105
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5115
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5120
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5126
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5133
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5137
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5149
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5154
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5158
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5162
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5166
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5173
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5185
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5190
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5203
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5207
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5213
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5219
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5223
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5227
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5233
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5239
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5245
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5254
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5265
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5277
		{
			yyVAL.str = yyDollar[1].str
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5281
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5287
		{
			yyVAL.str = "OR REPLACE"
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5291
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5295
		{
			yyVAL.str = "DEFINER = "
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5299
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5304
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5308
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5322
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5330
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 884:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5336
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5346
		{
			yyVAL.str = yyDollar[1].str
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5350
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5356
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5363
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5369
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5377
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5383
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5390
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5397
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5405
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5411
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5420
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5432
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5444
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5456
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5462
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5469
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5477
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5483
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5491
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5497
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5505
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5511
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5520
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5524
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5529
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5533
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5540
		{
			yyVAL.str = yyDollar[3].str
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5545
		{
			yyVAL.str = ""
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5549
		{
			yyVAL.str = yyDollar[2].str
		}
	case 915:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5555
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5569
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5579
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5583
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5589
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5595
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5601
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5610
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5619
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5628
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5633
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5639
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5647
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5753
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5757
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5763
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5773
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5777
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5783
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5793
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5797
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5801
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5810
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5816
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5823
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5829
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5838
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5845
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5854
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5858
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5864
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5878
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5882
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5886
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5891
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5895
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5899
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5903
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5909
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5932
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5954
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5958
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5962
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5966
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5970
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5976
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:5980
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5986
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:5991
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:5996
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6000
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6004
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6008
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6012
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6018
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6033
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6043
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6047
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6056
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6062
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6066
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6072
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6076
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6080
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6085
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6089
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6095
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6104
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6115
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  *yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6126
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  *yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6141
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6147
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6168
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6181
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6188
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6198
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6206
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6217
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6221
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6226
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6230
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6237
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6248
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6261
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6275
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6279
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6283
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6290
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6297
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6304
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6311
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6315
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6319
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6327
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6345
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6352
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6359
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6363
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6370
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6377
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6384
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6391
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6395
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6400
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6404
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6408
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6413
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6417
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6431
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6438
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6449
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6458
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6462
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6468
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6472
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6478
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6487
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6501
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6507
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6511
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6517
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6524
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6533
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6537
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6542
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6546
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6551
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6555
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6560
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6564
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6574
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6578
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6589
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6597
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6605
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6613
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6624
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6633
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6643
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6653
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6657
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6662
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6666
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6672
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6676
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6682
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6686
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6695
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6701
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6705
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6711
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6720
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6726
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6730
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6734
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6740
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6744
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6748
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6752
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6756
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6764
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6769
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6773
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6777
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6781
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6785
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6789
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6793
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6797
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6801
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6805
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6809
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6813
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6817
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6821
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6825
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6829
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6833
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6837
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6841
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6845
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6849
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6853
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6857
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6861
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6865
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6869
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6873
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6877
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6883
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6887
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6893
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6899
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6903
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6909
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6913
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6917
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6921
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6925
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6929
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6947
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6956
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6961
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6967
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6974
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:6978
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6984
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6988
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6992
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:6998
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7002
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7008
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7017
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7026
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7049
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7074
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7088
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7094
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7103
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7112
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7121
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7130
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7140
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7148
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7154
		{
			yyVAL.str = ""
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7158
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7168
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7174
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7180
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7199
		{
			yyVAL.str = ""
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7203
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7209
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7215
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7219
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7223
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7229
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7233
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7237
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7241
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7247
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7251
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7255
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7264
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7270
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7274
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7284
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7288
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7292
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7296
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7300
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7305
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7309
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7321
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7325
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7329
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7333
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7337
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7341
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7354
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7358
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7362
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7370
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7374
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7380
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7389
		{
			yyVAL.str = ""
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7393
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7399
		{
			yyVAL.str = ""
		}
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7403
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1225:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7409
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7421
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7428
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7435
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7442
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7449
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7458
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7464
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7470
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7474
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7478
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7482
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7486
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7491
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7498
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7502
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7506
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7515
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7520
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7524
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7540
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7546
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7550
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7554
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7558
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7562
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7566
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7570
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7574
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7578
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7582
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7586
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7590
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7608
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7628
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7632
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7636
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7640
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7644
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7649
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7657
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7662
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7666
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7675
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7679
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7683
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7687
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7691
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7697
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7705
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7713
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7722
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7726
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7731
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7735
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7741
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7745
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7751
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7760
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7772
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7789
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7806
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7819
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7832
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7844
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7858
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7873
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7888
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7905
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7920
		{
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7927
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7931
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7935
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7941
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7945
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7949
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7953
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7959
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7963
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7967
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7973
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7981
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:7995
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8002
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8007
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8011
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8016
		{
			yyVAL.str = ","
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8020
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8032
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8058
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8069
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8079
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8089
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8099
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8108
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8117
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8127
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8137
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8147
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8157
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8167
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8177
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8187
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8197
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8207
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8217
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8227
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8237
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8256
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8264
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8272
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8280
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8288
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8298
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8306
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8315
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8323
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8331
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8339
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8347
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8358
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8368
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8380
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8391
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8413
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8449
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8461
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8473
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8484
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8492
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8499
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8506
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8518
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8526
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8536
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8546
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8554
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8565
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8574
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8583
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8591
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8601
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8609
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8619
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8623
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8629
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8633
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8652
		{
		}
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8654
		{
		}
	case 1472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8695
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8706
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8710
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8714
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8720
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8729
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8735
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8739
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8746
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8750
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8754
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8762
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8766
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8770
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8774
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8780
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8784
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8788
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8792
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8796
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8800
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8804
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8808
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8812
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8816
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8824
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8828
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8832
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8836
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8840
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8844
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8848
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8852
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8856
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8860
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8870
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8876
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8880
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8887
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8891
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8895
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8901
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8905
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8909
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8913
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8917
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8921
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8925
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8931
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8935
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8939
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8943
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8949
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8962
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8967
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8973
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8977
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8990
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8995
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8999
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9003
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9007
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9011
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9018
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9022
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9036
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9040
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9047
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9058
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9063
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9069
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9081
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9093
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9105
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9118
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9131
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9144
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9157
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9170
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9183
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9196
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9209
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9222
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9235
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9250
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9277
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9319
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9355
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9391
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9408
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9420
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9440
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9460
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9480
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9496
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9509
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9522
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9535
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9548
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9560
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9572
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9584
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9596
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9620
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9632
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9644
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9656
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9669
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9682
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9697
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9705
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9714
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9724
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9747
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9752
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9758
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9765
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9769
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9774
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9778
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9784
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9790
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9797
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9804
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9813
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9820
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9827
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9836
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9840
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9844
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9850
		{
		}
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9852
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9862
		{
			yyVAL.str = ""
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9866
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
